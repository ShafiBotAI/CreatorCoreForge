{
  "CHANGELOG.md": {
    "total_lines": 18,
    "placeholder_percentage": 0.16666666666666666,
    "flagged": false,
    "occurrences": [
      {
        "line": 9,
        "keyword": "Placeholder",
        "content": "- Added audio personalization and immersive feature placeholders (`ReplayAnalyticsService`, `SleepReadMode`, `EmotionShiftTracker`, `VoiceReviewSystem`, `AutoCastingEngine`, `PronunciationEditor`, `NarrationScheduler`, `SpatialAudioSupport`, `EmotionPacingEditor`, `SmartAmbientMixer`, `AutoRemixMode`, `AccessibilityOutput`, `WatchSyncService`, `VoicePolls`, `HeartRateAdaptiveAudio`, `UnlockableVoiceSkins`, `PersonalizedGreetingService`, `AdvancedTimelineEditor`, `BrailleOutputService`, `PronunciationDictionary`) to `CoreForgeAudio` in `features-phase8.json`."
      },
      {
        "line": 11,
        "keyword": "Placeholder",
        "content": "- Added placeholder implementations for Visual and Writer features (`StoryboardImporter`, `SceneSegmenter`, `StyleEngine`, `FrameRenderer`, `OutlineGenerator`, `WorldMemoryService`, `BranchService`, `ExportService`)."
      },
      {
        "line": 13,
        "keyword": "Placeholder",
        "content": "- Replaced placeholder implementations for `DynamicChapterTransitions`, `AdaptiveMusicGenerator`,"
      }
    ]
  },
  "placeholder_scan_report.json": {
    "total_lines": 10981,
    "placeholder_percentage": 0.37655951188416353,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.16666666666666666,"
      },
      {
        "line": 9,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10,
        "keyword": "Placeholder",
        "content": "\"content\": \"- Added audio personalization and immersive feature placeholders (`ReplayAnalyticsService`, `SleepReadMode`, `EmotionShiftTracker`, `VoiceReviewSystem`, `AutoCastingEngine`, `PronunciationEditor`, `NarrationScheduler`, `SpatialAudioSupport`, `EmotionPacingEditor`, `SmartAmbientMixer`, `AutoRemixMode`, `AccessibilityOutput`, `WatchSyncService`, `VoicePolls`, `HeartRateAdaptiveAudio`, `UnlockableVoiceSkins`, `PersonalizedGreetingService`, `AdvancedTimelineEditor`, `BrailleOutputService`, `PronunciationDictionary`) to `CoreForgeAudio` in `features-phase8.json`.\""
      },
      {
        "line": 14,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 15,
        "keyword": "Placeholder",
        "content": "\"content\": \"- Added placeholder implementations for Visual and Writer features (`StoryboardImporter`, `SceneSegmenter`, `StyleEngine`, `FrameRenderer`, `OutlineGenerator`, `WorldMemoryService`, `BranchService`, `ExportService`).\""
      },
      {
        "line": 19,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 20,
        "keyword": "Placeholder",
        "content": "\"content\": \"- Replaced placeholder implementations for `DynamicChapterTransitions`, `AdaptiveMusicGenerator`,\""
      },
      {
        "line": 24,
        "keyword": "Placeholder",
        "content": "\"placeholder_scan_report.json\": {"
      },
      {
        "line": 26,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.33633049817739974,"
      },
      {
        "line": 31,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 32,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.06666666666666667,\""
      },
      {
        "line": 36,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 37,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 41,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 42,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"command: node mock-tts.js\\\"\""
      },
      {
        "line": 46,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 47,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.16666666666666666,\""
      },
      {
        "line": 51,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 52,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 56,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 57,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"- Added audio personalization and immersive feature placeholders (`ReplayAnalyticsService`, `SleepReadMode`, `EmotionShiftTracker`, `VoiceReviewSystem`, `AutoCastingEngine`, `PronunciationEditor`, `NarrationScheduler`, `SpatialAudioSupport`, `EmotionPacingEditor`, `SmartAmbientMixer`, `AutoRemixMode`, `AccessibilityOutput`, `WatchSyncService`, `VoicePolls`, `HeartRateAdaptiveAudio`, `UnlockableVoiceSkins`, `PersonalizedGreetingService`, `AdvancedTimelineEditor`, `BrailleOutputService`, `PronunciationDictionary`) to `CoreForgeAudio` in `features-phase8.json`.\\\"\""
      },
      {
        "line": 61,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 62,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 66,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 67,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"- Added placeholder implementations for Visual and Writer features (`StoryboardImporter`, `SceneSegmenter`, `StyleEngine`, `FrameRenderer`, `OutlineGenerator`, `WorldMemoryService`, `BranchService`, `ExportService`).\\\"\""
      },
      {
        "line": 71,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 72,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 76,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 77,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"- Replaced placeholder implementations for `DynamicChapterTransitions`, `AdaptiveMusicGenerator`,\\\"\""
      },
      {
        "line": 81,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 82,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.046153846153846156,\""
      },
      {
        "line": 86,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 87,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 91,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 92,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"- Write unit tests using a mocked OpenAI client.\\\"\""
      },
      {
        "line": 96,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 97,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 101,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 102,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"you can reach the maintainers at `support@example.com`.\\\"\""
      },
      {
        "line": 106,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 107,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 111,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 112,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"For local development copy `.env.example` to `.env` and supply your `OPENAI_API_KEY`. This file is ignored by git.\\\"\""
      },
      {
        "line": 116,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 117,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.005115089514066497,\""
      },
      {
        "line": 121,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 122,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 126,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 127,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Copy `.env.example` to `.env` and provide your `OPENAI_API_KEY` before running any app or tests. The shared `OpenAIService` reads this value at runtime.\\\"\""
      },
      {
        "line": 131,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 132,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 136,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 137,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"Use `scripts/chatterbox_bridge.py` to generate a narrated play from a simple `SPEAKER: line` script. Place `speaker.mp3` samples next to your script and set `CHATTERBOX_API_URL` before running:\\\"\""
      },
      {
        "line": 141,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 142,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.004714201532115498,\""
      },
      {
        "line": 146,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 147,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 151,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 152,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"Provide multilingual visual cue glossary with usage examples (`generated/CoreForgeVisual/Provide_multilingual_visual_cue_glossary_with_usage_examples.py`)\\\\\\\",\\\"\""
      },
      {
        "line": 156,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 157,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 161,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 162,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"`PRACTICAL_PLAN.md` \\\\\\\\u2013 initial TODO list across apps.\\\\\\\",\\\"\""
      },
      {
        "line": 166,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 167,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 171,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 172,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"Prompt validation with multiple sample inputs and outputs\\\\\\\",\\\"\""
      },
      {
        "line": 176,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 177,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 181,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 182,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"PromptTemplates.md (AI workflows, sample prompts)\\\\\\\",\\\"\""
      },
      {
        "line": 186,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 187,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 191,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 192,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"Allow users to test voice preview samples per character before rendering\\\\\\\",\\\"\""
      },
      {
        "line": 196,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 197,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 201,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 202,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"Flag NSFW content for internal moderation or publishing filter logic\\\\\\\",\\\"\""
      },
      {
        "line": 206,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 207,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 211,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 212,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"Auto-detect safe vs. unsafe content for preview-only versions\\\\\\\",\\\"\""
      },
      {
        "line": 216,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 217,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 221,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 222,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"Provide multilingual visual cue glossary with usage examples\\\\\\\",\\\"\""
      },
      {
        "line": 226,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 227,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0026041666666666665,\""
      },
      {
        "line": 231,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 232,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 236,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 237,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- [ ] Provide multilingual visual cue glossary with usage examples\\\"\""
      },
      {
        "line": 241,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 242,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0018030513176144243,\""
      },
      {
        "line": 246,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 247,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 251,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 252,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\"\\\"\""
      },
      {
        "line": 256,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 257,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 261,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 262,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\",\\\"\""
      },
      {
        "line": 266,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 267,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 271,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 272,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\"\\\"\""
      },
      {
        "line": 276,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 277,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 281,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 282,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\",\\\"\""
      },
      {
        "line": 286,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 287,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 291,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 292,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"VoiceLab/node_modules/@jest/environment-jsdom-abstract/node_modules/jest-mock\\\\\\\": {\\\"\""
      },
      {
        "line": 296,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 297,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 301,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 302,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\",\\\"\""
      },
      {
        "line": 306,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 307,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 311,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 312,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\"\\\"\""
      },
      {
        "line": 316,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 317,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 321,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 322,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\"\\\"\""
      },
      {
        "line": 326,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 327,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 331,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 332,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\",\\\"\""
      },
      {
        "line": 336,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 337,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 341,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 342,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"VoiceLab/node_modules/jest-environment-jsdom/node_modules/jest-mock\\\\\\\": {\\\"\""
      },
      {
        "line": 346,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 347,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 351,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 352,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\",\\\"\""
      },
      {
        "line": 356,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 357,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 361,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 362,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"VoiceLab/node_modules/jest-mock\\\\\\\": {\\\"\""
      },
      {
        "line": 366,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 367,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 371,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 372,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\",\\\"\""
      },
      {
        "line": 376,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 377,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.5,\""
      },
      {
        "line": 381,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 382,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 386,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 387,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"# Auto-generated for Auto-detect safe vs. unsafe content for preview-only versions\\\"\""
      },
      {
        "line": 391,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 392,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 396,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 397,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Auto-detect safe vs. unsafe content for preview-only versions\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 401,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 402,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.21428571428571427,\""
      },
      {
        "line": 406,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 407,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 411,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 412,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def apply_singing_tone(samples: Iterable[float], tone: float) -> List[float]:\\\"\""
      },
      {
        "line": 416,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 417,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 421,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 422,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Apply a simple tone multiplier to audio sample amplitudes.\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 426,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 427,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 431,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 432,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return [max(min(s * tone, 1.0), -1.0) for s in samples]\\\"\""
      },
      {
        "line": 436,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 437,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"./generated/CoreForgeAudio/Allow_users_to_test_voice_preview_samples_per_character_before_rendering.py\\\": {\""
      },
      {
        "line": 441,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 442,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.5,\""
      },
      {
        "line": 446,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 447,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 451,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 452,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"# Auto-generated for Allow users to test voice preview samples per character before rendering\\\"\""
      },
      {
        "line": 456,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 457,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 461,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 462,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Allow users to test voice preview samples per character before rendering\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 466,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 467,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"./generated/CoreForgeAudio/PromptTemplates_md_AI_workflows_sample_prompts.py\\\": {\""
      },
      {
        "line": 471,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 472,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.5,\""
      },
      {
        "line": 476,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 477,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 481,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 482,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"# Auto-generated for PromptTemplates.md (AI workflows, sample prompts)\\\"\""
      },
      {
        "line": 486,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 487,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 491,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 492,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"PromptTemplates.md (AI workflows, sample prompts)\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 496,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 497,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"./generated/CoreForgeAudio/Prompt_validation_with_multiple_sample_inputs_and_outputs.py\\\": {\""
      },
      {
        "line": 501,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 502,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.5,\""
      },
      {
        "line": 506,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 507,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 511,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 512,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"# Auto-generated for Prompt validation with multiple sample inputs and outputs\\\"\""
      },
      {
        "line": 516,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 517,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 521,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 522,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Prompt validation with multiple sample inputs and outputs\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 526,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 527,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.5,\""
      },
      {
        "line": 531,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 532,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 536,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 537,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"# Auto-generated for Flag NSFW content for internal moderation or publishing filter logic\\\"\""
      },
      {
        "line": 541,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 542,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 546,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 547,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Flag NSFW content for internal moderation or publishing filter logic\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 551,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 552,
        "keyword": "Example",
        "content": "\"content\": \"\\\"./generated/CoreForgeVisual/Provide_multilingual_visual_cue_glossary_with_usage_examples.py\\\": {\""
      },
      {
        "line": 556,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 557,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.5,\""
      },
      {
        "line": 561,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 562,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 566,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 567,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"# Auto-generated for Provide multilingual visual cue glossary with usage examples\\\"\""
      },
      {
        "line": 571,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 572,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 576,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 577,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Provide multilingual visual cue glossary with usage examples\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 581,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 582,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"./generated/progress/CoreForgeAudio/Prompt_validation_with_multiple_sample_inputs_and_outputs.txt\\\": {\""
      },
      {
        "line": 586,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 587,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.22033898305084745,\""
      },
      {
        "line": 591,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 592,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 596,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 597,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"against multiple sample input/output pairs. It can be used in\\\"\""
      },
      {
        "line": 601,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 602,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 606,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 607,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"that prompt templates behave consistently across examples.\\\"\""
      },
      {
        "line": 611,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 612,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 616,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 617,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"class PromptSample:\\\"\""
      },
      {
        "line": 621,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 622,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 626,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 627,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Represents a single prompt sample.\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 631,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 632,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 636,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 637,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Validates prompts against sample inputs and expected outputs.\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 641,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 642,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 646,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 647,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"async def validate_samples(self, prompt: str, samples: Iterable[PromptSample]) -> List[bool]:\\\"\""
      },
      {
        "line": 651,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 652,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 656,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 657,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Validate a list of samples asynchronously.\\\"\""
      },
      {
        "line": 661,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 662,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 666,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 667,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples: Iterable[PromptSample]\\\"\""
      },
      {
        "line": 671,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 672,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 676,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 677,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"Collection of samples containing inputs and expected outputs.\\\"\""
      },
      {
        "line": 681,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 682,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 686,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 687,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"A list of booleans indicating whether each sample passed.\\\"\""
      },
      {
        "line": 691,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 692,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 696,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 697,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for sample in samples:\\\"\""
      },
      {
        "line": 701,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 702,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 706,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 707,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"combined = prompt.format(sample.input_text)\\\"\""
      },
      {
        "line": 711,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 712,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 716,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 717,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"results.append(sample.expected_output.strip() in generated.strip())\\\"\""
      },
      {
        "line": 721,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 722,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.043478260869565216,\""
      },
      {
        "line": 726,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 727,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 731,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 732,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"After building the project you can run the sample renderer which outputs a short demo animation:\\\"\""
      },
      {
        "line": 736,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 737,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0481283422459893,\""
      },
      {
        "line": 741,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 742,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 746,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 747,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"\\\\\\\"\\\\\\\"Return a language-aware placeholder snippet.\\\\\\\"\\\\\\\"\\\\\\\"\\\"\""
      },
      {
        "line": 751,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 752,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 756,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 757,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"def _parse_placeholder_line(line: str) -> str | None:\\\"\""
      },
      {
        "line": 761,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 762,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 766,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 767,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"def upgrade_placeholders(gen_root: str) -> None:\\\"\""
      },
      {
        "line": 771,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 772,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 776,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 777,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"feature = _parse_placeholder_line(first)\\\"\""
      },
      {
        "line": 781,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 782,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 786,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 787,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"parser = argparse.ArgumentParser(description=\\\\\\\"Generate or upgrade placeholder code files\\\\\\\")\\\"\""
      },
      {
        "line": 791,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 792,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 796,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 797,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"--upgrade-placeholders\\\\\\\",\\\"\""
      },
      {
        "line": 801,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 802,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 806,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 807,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"help=\\\\\\\"Replace existing placeholders in the generated folder using OpenAI\\\\\\\",\\\"\""
      },
      {
        "line": 811,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 812,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 816,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 817,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"if args.upgrade_placeholders:\\\"\""
      },
      {
        "line": 821,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 822,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 826,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 827,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"upgrade_placeholders(os.path.join(repo, \\\\\\\"generated\\\\\\\"))\\\"\""
      },
      {
        "line": 831,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 832,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.3548387096774194,\""
      },
      {
        "line": 836,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 837,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 841,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 842,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"SAMPLE_RATE = 44100\\\"\""
      },
      {
        "line": 846,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 847,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 851,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 852,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def write_wave(path, samples):\\\"\""
      },
      {
        "line": 856,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 857,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 861,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 862,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"wav.setframerate(SAMPLE_RATE)\\\"\""
      },
      {
        "line": 866,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 867,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 871,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 872,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for s in samples:\\\"\""
      },
      {
        "line": 876,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 877,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 881,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 882,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples = []\\\"\""
      },
      {
        "line": 886,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 887,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 891,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 892,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for i in range(int(SAMPLE_RATE * duration)):\\\"\""
      },
      {
        "line": 896,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 897,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 901,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 902,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sweep = math.sin(i / SAMPLE_RATE * 0.5) * 0.3\\\"\""
      },
      {
        "line": 906,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 907,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 911,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 912,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.append(base + sweep)\\\"\""
      },
      {
        "line": 916,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 917,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 921,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 922,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return samples\\\"\""
      },
      {
        "line": 926,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 927,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 931,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 932,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples = []\\\"\""
      },
      {
        "line": 936,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 937,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 941,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 942,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for i in range(int(SAMPLE_RATE * duration)):\\\"\""
      },
      {
        "line": 946,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 947,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 951,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 952,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.append(noise)\\\"\""
      },
      {
        "line": 956,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 957,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 961,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 962,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return samples\\\"\""
      },
      {
        "line": 966,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 967,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 971,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 972,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples = []\\\"\""
      },
      {
        "line": 976,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 977,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 981,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 982,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"total_samples = int(SAMPLE_RATE * duration)\\\"\""
      },
      {
        "line": 986,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 987,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 991,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 992,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for i in range(total_samples):\\\"\""
      },
      {
        "line": 996,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 997,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1001,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1002,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"t = i / SAMPLE_RATE\\\"\""
      },
      {
        "line": 1006,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1007,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1011,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1012,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.append(value * 0.7)\\\"\""
      },
      {
        "line": 1016,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1017,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1021,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1022,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return samples\\\"\""
      },
      {
        "line": 1026,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1027,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1031,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1032,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples = []\\\"\""
      },
      {
        "line": 1036,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1037,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1041,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1042,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"total_samples = int(SAMPLE_RATE * duration)\\\"\""
      },
      {
        "line": 1046,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1047,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1051,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1052,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for i in range(total_samples):\\\"\""
      },
      {
        "line": 1056,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1057,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1061,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1062,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"t = i / SAMPLE_RATE\\\"\""
      },
      {
        "line": 1066,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1067,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1071,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1072,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.append(value)\\\"\""
      },
      {
        "line": 1076,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1077,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1081,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1082,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return samples\\\"\""
      },
      {
        "line": 1086,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1087,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1091,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1092,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples = []\\\"\""
      },
      {
        "line": 1096,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1097,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1101,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1102,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for i in range(int(SAMPLE_RATE * duration)):\\\"\""
      },
      {
        "line": 1106,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1107,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1111,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1112,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"base = math.sin(2 * math.pi * 200 * i / SAMPLE_RATE)\\\"\""
      },
      {
        "line": 1116,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1117,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1121,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1122,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"envelope = (1 - math.cos(2 * math.pi * i / (SAMPLE_RATE * duration))) / 2\\\"\""
      },
      {
        "line": 1126,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1127,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1131,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1132,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.append(base * envelope * 0.4)\\\"\""
      },
      {
        "line": 1136,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1137,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1141,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1142,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return samples\\\"\""
      },
      {
        "line": 1146,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1147,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1151,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1152,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples = EFFECT_MAP[args.effect](args.duration)\\\"\""
      },
      {
        "line": 1156,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1157,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1161,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1162,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"write_wave(args.output, samples)\\\"\""
      },
      {
        "line": 1166,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1167,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.018518518518518517,\""
      },
      {
        "line": 1171,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1172,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 1176,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1177,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Adapted from the Requests library examples (Apache-2.0).\\\"\""
      },
      {
        "line": 1181,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1182,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.014705882352941176,\""
      },
      {
        "line": 1186,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1187,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 1191,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1192,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"print(f\\\\\\\"Updated {path} with placeholder features to reach 200 per app.\\\\\\\")\\\"\""
      },
      {
        "line": 1196,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1197,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.2037037037037037,\""
      },
      {
        "line": 1201,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1202,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1206,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1207,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"SAMPLE_RATE = 44100\\\"\""
      },
      {
        "line": 1211,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1212,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1216,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1217,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def write_wave(path: str, samples):\\\"\""
      },
      {
        "line": 1221,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1222,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1226,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1227,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"wav.setframerate(SAMPLE_RATE)\\\"\""
      },
      {
        "line": 1231,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1232,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1236,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1237,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for s in samples:\\\"\""
      },
      {
        "line": 1241,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1242,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1246,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1247,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"frame_count = int(SAMPLE_RATE * duration)\\\"\""
      },
      {
        "line": 1251,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1252,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1256,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1257,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples = []\\\"\""
      },
      {
        "line": 1261,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1262,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1266,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1267,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"t = i / SAMPLE_RATE\\\"\""
      },
      {
        "line": 1271,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1272,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1276,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1277,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.append(math.sin(2 * math.pi * frequency * t) * 0.4)\\\"\""
      },
      {
        "line": 1281,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1282,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1286,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1287,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return samples\\\"\""
      },
      {
        "line": 1291,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1292,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1296,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1297,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples = generate_music(args.mood, args.duration)\\\"\""
      },
      {
        "line": 1301,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1302,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1306,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1307,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"write_wave(out_path, samples)\\\"\""
      },
      {
        "line": 1311,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1312,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.06349206349206349,\""
      },
      {
        "line": 1316,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1317,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1321,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1322,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"private let sampleRate: Int\\\"\""
      },
      {
        "line": 1326,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1327,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1331,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1332,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sampleRate: Int = 44100,\\\"\""
      },
      {
        "line": 1336,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1337,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1341,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1342,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"self.sampleRate = sampleRate\\\"\""
      },
      {
        "line": 1346,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1347,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1351,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1352,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sampleRate: sampleRate) { result in\\\"\""
      },
      {
        "line": 1356,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1357,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.008403361344537815,\""
      },
      {
        "line": 1361,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1362,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 1366,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1367,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"// Example usage:\\\"\""
      },
      {
        "line": 1371,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1372,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.11764705882352941,\""
      },
      {
        "line": 1376,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1377,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1381,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1382,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for (i, sample) in track.enumerated() {\\\"\""
      },
      {
        "line": 1386,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1387,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1391,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1392,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"result[i] += sample\\\"\""
      },
      {
        "line": 1396,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1397,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.14285714285714285,\""
      },
      {
        "line": 1401,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1402,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1406,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1407,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public func train(from sample: Data, name: String, completion: @escaping (VoiceProfile) -> Void) {\\\"\""
      },
      {
        "line": 1411,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1412,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1416,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1417,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"voiceAI.cloneVoice(from: sample, name: name) { profile in\\\"\""
      },
      {
        "line": 1421,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1422,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.09090909090909091,\""
      },
      {
        "line": 1426,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 1427,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 1431,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 1432,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Generates alternate emotion branches using a mock quantum selection.\\\"\""
      },
      {
        "line": 1436,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1437,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.044444444444444446,\""
      },
      {
        "line": 1441,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1442,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1446,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1447,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sampleRate: Int = 44100,\\\"\""
      },
      {
        "line": 1451,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1452,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1456,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1457,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sampleRate: sampleRate,\\\"\""
      },
      {
        "line": 1461,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1462,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.16417910447761194,\""
      },
      {
        "line": 1466,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1467,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1471,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1472,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let sampleRate = 44_100\\\"\""
      },
      {
        "line": 1476,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1477,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1481,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1482,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let frameCount = Int(duration * Double(sampleRate))\\\"\""
      },
      {
        "line": 1486,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1487,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1491,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1492,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"var samples = [Int16](repeating: 0, count: frameCount)\\\"\""
      },
      {
        "line": 1496,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1497,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1501,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1502,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let t = Double(i) / Double(sampleRate)\\\"\""
      },
      {
        "line": 1506,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1507,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1511,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1512,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples[i] = value\\\"\""
      },
      {
        "line": 1516,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1517,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1521,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1522,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let byteCount = samples.count * MemoryLayout<Int16>.size\\\"\""
      },
      {
        "line": 1526,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1527,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1531,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1532,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"data.append(UInt32(sampleRate).littleEndianData)\\\"\""
      },
      {
        "line": 1536,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1537,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1541,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1542,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"data.append(UInt32(sampleRate * 2).littleEndianData) // byte rate\\\"\""
      },
      {
        "line": 1546,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1547,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1551,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1552,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"data.append(UInt16(16).littleEndianData) // bits per sample\\\"\""
      },
      {
        "line": 1556,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1557,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1561,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1562,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"// Append samples\\\"\""
      },
      {
        "line": 1566,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1567,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1571,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1572,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.withUnsafeBufferPointer { ptr in\\\"\""
      },
      {
        "line": 1576,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1577,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.008695652173913044,\""
      },
      {
        "line": 1581,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1582,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 1586,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1587,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"// Example usage:\\\"\""
      },
      {
        "line": 1591,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1592,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.21052631578947367,\""
      },
      {
        "line": 1596,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1597,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1601,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1602,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public func trim(_ samples: [Float], to count: Int) -> [Float] {\\\"\""
      },
      {
        "line": 1606,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1607,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1611,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1612,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"Array(samples.prefix(count))\\\"\""
      },
      {
        "line": 1616,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1617,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1621,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1622,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public func prepare(samples: [Float]) -> Bool {\\\"\""
      },
      {
        "line": 1626,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1627,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1631,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1632,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"!samples.isEmpty\\\"\""
      },
      {
        "line": 1636,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1637,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.18691588785046728,\""
      },
      {
        "line": 1641,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1642,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1646,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1647,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"///   - sample: Voice sample data.\\\"\""
      },
      {
        "line": 1651,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1652,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1656,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1657,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public func cloneVoice(from sample: Data, name: String, completion: @escaping (VoiceProfile) -> Void) {\\\"\""
      },
      {
        "line": 1661,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1662,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1666,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1667,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let avg = sample.reduce(0) { $0 + Int($1) } / max(sample.count, 1)\\\"\""
      },
      {
        "line": 1671,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 1672,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 1676,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 1677,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"///   - completion: Returns synthesized audio data (mocked).\\\"\""
      },
      {
        "line": 1681,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1682,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1686,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1687,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sampleRate: Int = 44100,\\\"\""
      },
      {
        "line": 1691,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1692,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1696,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1697,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"var samples: [Int16] = []\\\"\""
      },
      {
        "line": 1701,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1702,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1706,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1707,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples += Self.sineWave(frequency: freq, duration: 0.05, sampleRate: sampleRate)\\\"\""
      },
      {
        "line": 1711,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1712,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1716,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1717,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let data = Self.encodeWAV(samples: samples, sampleRate: sampleRate)\\\"\""
      },
      {
        "line": 1721,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1722,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1726,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1727,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"private static func sineWave(frequency: Double, duration: Double, sampleRate: Int) -> [Int16] {\\\"\""
      },
      {
        "line": 1731,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1732,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1736,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1737,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let count = Int(Double(sampleRate) * duration)\\\"\""
      },
      {
        "line": 1741,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1742,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1746,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1747,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let t = Double(i) / Double(sampleRate)\\\"\""
      },
      {
        "line": 1751,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1752,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1756,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1757,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"private static func encodeWAV(samples: [Int16], sampleRate: Int) -> Data {\\\"\""
      },
      {
        "line": 1761,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1762,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1766,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1767,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let byteRate = sampleRate * 2\\\"\""
      },
      {
        "line": 1771,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1772,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1776,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1777,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let dataSize = samples.count * 2\\\"\""
      },
      {
        "line": 1781,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1782,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1786,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1787,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"var sampleRate32 = UInt32(sampleRate)\\\"\""
      },
      {
        "line": 1791,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1792,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1796,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1797,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"data.append(Data(bytes: &sampleRate32, count: 4))\\\"\""
      },
      {
        "line": 1801,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1802,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1806,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1807,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"var bitsPerSample: UInt16 = 16\\\"\""
      },
      {
        "line": 1811,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1812,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1816,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1817,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"data.append(Data(bytes: &bitsPerSample, count: 2))\\\"\""
      },
      {
        "line": 1821,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1822,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1826,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1827,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.forEach { sample in\\\"\""
      },
      {
        "line": 1831,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1832,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1836,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1837,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"var s = sample\\\"\""
      },
      {
        "line": 1841,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1842,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.023255813953488372,\""
      },
      {
        "line": 1846,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1847,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 1851,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1852,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"// Placeholder purchase flow; integrate real StoreKit logic in the app.\\\"\""
      },
      {
        "line": 1856,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1857,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.022727272727272728,\""
      },
      {
        "line": 1861,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1862,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 1866,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1867,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"public init(baseURL: URL = URL(string: \\\\\\\"https://sync.example.com\\\\\\\")!,\\\"\""
      },
      {
        "line": 1871,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1872,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.014925373134328358,\""
      },
      {
        "line": 1876,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1877,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 1881,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 1882,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"// Example usage:\\\"\""
      },
      {
        "line": 1886,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1887,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.017241379310344827,\""
      },
      {
        "line": 1891,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1892,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 1896,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1897,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"/// and generates basic placeholder animation frames.\\\"\""
      },
      {
        "line": 1901,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1902,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.00558659217877095,\""
      },
      {
        "line": 1906,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1907,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 1911,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1912,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Placeholder implementation when Combine is unavailable.\\\"\""
      },
      {
        "line": 1916,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 1917,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.36363636363636365,\""
      },
      {
        "line": 1921,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1922,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1926,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1927,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Applies a simple echo label to each sample identifier.\\\"\""
      },
      {
        "line": 1931,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1932,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1936,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1937,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public func addEcho(to samples: [String]) -> [String] {\\\"\""
      },
      {
        "line": 1941,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1942,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1946,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1947,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.flatMap { [$0, \\\\\\\"\\\\\\\\($0)-echo\\\\\\\"] }\\\"\""
      },
      {
        "line": 1951,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1952,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1956,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1957,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public func shiftPitch(of samples: [String], factor: Double) -> [String] {\\\"\""
      },
      {
        "line": 1961,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1962,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1966,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1967,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.map { \\\\\\\"\\\\\\\\($0)|pitch:\\\\\\\\(factor)\\\\\\\" }\\\"\""
      },
      {
        "line": 1971,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1972,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1976,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1977,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Combines processed samples into a single track label.\\\"\""
      },
      {
        "line": 1981,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1982,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1986,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1987,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public func mix(samples: [String]) -> String {\\\"\""
      },
      {
        "line": 1991,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1992,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 1996,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 1997,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples.joined(separator: \\\\\\\"+\\\\\\\")\\\"\""
      },
      {
        "line": 2001,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2002,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.017857142857142856,\""
      },
      {
        "line": 2006,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2007,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2011,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2012,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"// Example usage:\\\"\""
      },
      {
        "line": 2016,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2017,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.022222222222222223,\""
      },
      {
        "line": 2021,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2022,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2026,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2027,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"public init(baseURL: URL = URL(string: \\\\\\\"https://sync.example.com/library\\\\\\\")!,\\\"\""
      },
      {
        "line": 2031,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2032,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.030303030303030304,\""
      },
      {
        "line": 2036,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2037,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2041,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2042,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"public init(updateURL: URL = URL(string: \\\\\\\"https://example.com/latest.json\\\\\\\")!,\\\"\""
      },
      {
        "line": 2046,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2047,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.007142857142857143,\""
      },
      {
        "line": 2051,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2052,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2056,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2057,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"// Example:\\\"\""
      },
      {
        "line": 2061,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2062,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.01020408163265306,\""
      },
      {
        "line": 2066,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 2067,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 2071,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 2072,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Flag NSFW content for moderation review.\\\"\""
      },
      {
        "line": 2076,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 2077,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 2081,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 2082,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Detect safe vs unsafe content for previews.\\\"\""
      },
      {
        "line": 2086,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2087,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.17391304347826086,\""
      },
      {
        "line": 2091,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2092,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2096,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2097,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Handles voice sample uploads and retrieval using `VoiceCloneTrainer` and `VoiceMemoryManager`.\\\"\""
      },
      {
        "line": 2101,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2102,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2106,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2107,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Upload and clone a voice sample for a character.\\\"\""
      },
      {
        "line": 2111,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2112,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2116,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2117,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public func uploadSample(character: String, sample: Data, completion: @escaping (VoiceProfile) -> Void) {\\\"\""
      },
      {
        "line": 2121,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2122,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2126,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2127,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"trainer.train(from: sample, name: character) { profile in\\\"\""
      },
      {
        "line": 2131,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2132,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0847457627118644,\""
      },
      {
        "line": 2136,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2137,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 2141,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2142,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"/// audio track label, a rendered clip placeholder, and the list of\\\"\""
      },
      {
        "line": 2146,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2147,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2151,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2152,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"// Derive pseudo audio sample identifiers from the scene text\\\"\""
      },
      {
        "line": 2156,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2157,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2161,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2162,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let samples = scenes.map { \\\\\\\"sound-\\\\\\\\($0.hashValue)\\\\\\\" }\\\"\""
      },
      {
        "line": 2166,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2167,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2171,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2172,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"var processed = audioPipeline.addEcho(to: samples)\\\"\""
      },
      {
        "line": 2176,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2177,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2181,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2182,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let audioTrack = audioPipeline.mix(samples: processed)\\\"\""
      },
      {
        "line": 2186,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2187,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.00980392156862745,\""
      },
      {
        "line": 2191,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2192,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2196,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2197,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"// Example:\\\"\""
      },
      {
        "line": 2201,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2202,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.22807017543859648,\""
      },
      {
        "line": 2206,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2207,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2211,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2212,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Represents an audio sample used to train a custom voice.\\\"\""
      },
      {
        "line": 2216,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2217,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2221,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2222,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public struct VoiceSample {\\\"\""
      },
      {
        "line": 2226,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2227,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2231,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2232,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Character the sample is associated with.\\\"\""
      },
      {
        "line": 2236,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2237,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2241,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2242,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Local file path to the audio sample.\\\"\""
      },
      {
        "line": 2246,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2247,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2251,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2252,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Basic engine that tracks uploaded samples and simulates training.\\\"\""
      },
      {
        "line": 2256,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2257,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2261,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2262,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Upload a voice sample for a character.\\\"\""
      },
      {
        "line": 2266,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2267,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2271,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2272,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"///   - filePath: Path to the sample audio file.\\\"\""
      },
      {
        "line": 2276,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2277,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2281,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2282,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"public func uploadSample(for character: String, filePath: String) {\\\"\""
      },
      {
        "line": 2286,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2287,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2291,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2292,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"print(\\\\\\\"Uploading voice sample for \\\\\\\\(character)...\\\\\\\")\\\"\""
      },
      {
        "line": 2296,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2297,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2301,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2302,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Train a voice using the previously uploaded sample.\\\"\""
      },
      {
        "line": 2306,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2307,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2311,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2312,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let samplePath = trainedVoices[character] else {\\\"\""
      },
      {
        "line": 2316,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2317,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2321,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2322,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"print(\\\\\\\"No sample uploaded for \\\\\\\\(character).\\\\\\\")\\\"\""
      },
      {
        "line": 2326,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2327,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2331,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2332,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"print(\\\\\\\"Training voice for \\\\\\\\(character) using sample at \\\\\\\\(samplePath)...\\\\\\\")\\\"\""
      },
      {
        "line": 2336,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2337,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.007575757575757576,\""
      },
      {
        "line": 2341,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2342,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2346,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2347,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"// Example extraction code adapted from ZIPFoundation README:\\\"\""
      },
      {
        "line": 2351,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2352,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.024390243902439025,\""
      },
      {
        "line": 2356,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2357,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2361,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2362,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Adapted from SwiftyStoreKit example (MIT License).\\\"\""
      },
      {
        "line": 2366,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2367,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.011764705882352941,\""
      },
      {
        "line": 2371,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2372,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2376,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2377,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"// Example usage:\\\"\""
      },
      {
        "line": 2381,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2382,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.125,\""
      },
      {
        "line": 2386,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2387,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2391,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2392,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let sample = [\\\"\""
      },
      {
        "line": 2396,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2397,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2401,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2402,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let outline = engine.analyze(books: sample)\\\"\""
      },
      {
        "line": 2406,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2407,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.2,\""
      },
      {
        "line": 2411,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2412,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2416,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2417,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let data = \\\\\\\"Sample\\\\\\\".data(using: .utf8)!\\\"\""
      },
      {
        "line": 2421,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2422,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2426,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2427,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"XCTAssertEqual(ocr.extractText(from: data), \\\\\\\"Sample\\\\\\\")\\\"\""
      },
      {
        "line": 2431,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2432,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.043478260869565216,\""
      },
      {
        "line": 2436,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2437,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2441,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2442,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let track = pipeline.mix(samples: [\\\\\\\"a\\\\\\\", \\\\\\\"b\\\\\\\"])\\\"\""
      },
      {
        "line": 2446,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2447,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.1111111111111111,\""
      },
      {
        "line": 2451,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2452,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2456,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2457,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"trainer.uploadSample(for: \\\\\\\"Hero\\\\\\\", filePath: \\\\\\\"/path/sample.wav\\\\\\\")\\\"\""
      },
      {
        "line": 2461,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2462,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2466,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2467,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"trainer.uploadSample(for: \\\\\\\"Hero\\\\\\\", filePath: \\\\\\\"/path/sample.wav\\\\\\\")\\\"\""
      },
      {
        "line": 2471,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2472,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.14285714285714285,\""
      },
      {
        "line": 2476,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2477,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2481,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2482,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockURLProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 2486,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2487,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2491,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2492,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.responseData = json\\\"\""
      },
      {
        "line": 2496,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2497,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2501,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2502,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.fail = false\\\"\""
      },
      {
        "line": 2506,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2507,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2511,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2512,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 2516,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2517,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2521,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2522,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"manager.fetchFeed(from: URL(string: \\\\\\\"https://example.com/feed\\\\\\\")!) { feed in\\\"\""
      },
      {
        "line": 2526,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2527,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2531,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2532,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.responseData = nil\\\"\""
      },
      {
        "line": 2536,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2537,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2541,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2542,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.fail = true\\\"\""
      },
      {
        "line": 2546,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2547,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2551,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2552,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 2556,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2557,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2561,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2562,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"manager.fetchFeed(from: URL(string: \\\\\\\"https://example.com/feed\\\\\\\")!) { feed in\\\"\""
      },
      {
        "line": 2566,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2567,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.09090909090909091,\""
      },
      {
        "line": 2571,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2572,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2576,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2577,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"let filing = Filing(title: \\\\\\\"Test\\\\\\\", date: Date(timeIntervalSince1970: 0), url: URL(string: \\\\\\\"https://example.com\\\\\\\")!)\\\"\""
      },
      {
        "line": 2581,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2582,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2586,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2587,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"let filing = Filing(title: \\\\\\\"Test\\\\\\\", date: Date(), url: URL(string: \\\\\\\"https://example.com\\\\\\\")!)\\\"\""
      },
      {
        "line": 2591,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2592,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.061224489795918366,\""
      },
      {
        "line": 2596,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2597,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2601,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2602,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"func testCustomSampleRate() {\\\"\""
      },
      {
        "line": 2606,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2607,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2611,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2612,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"engine.synthesize(text: \\\\\\\"Hi\\\\\\\", with: profile, sampleRate: 22_050) { result in\\\"\""
      },
      {
        "line": 2616,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2617,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2621,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2622,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"engine.cloneVoice(from: Data(\\\\\\\"sample\\\\\\\".utf8), name: \\\\\\\"Clone\\\\\\\") { profile in\\\"\""
      },
      {
        "line": 2626,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2627,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.08,\""
      },
      {
        "line": 2631,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2632,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2636,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2637,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"func testCustomSampleRateConversion() throws {\\\"\""
      },
      {
        "line": 2641,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2642,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2646,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2647,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let converter = EbookConverter(sampleRate: 22_050)\\\"\""
      },
      {
        "line": 2651,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2652,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.05714285714285714,\""
      },
      {
        "line": 2656,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2657,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2661,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2662,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"XCTAssertTrue(exporter.exportToMP3(audioData: data, filename: \\\\\\\"sample\\\\\\\"))\\\"\""
      },
      {
        "line": 2666,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2667,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2671,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2672,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"XCTAssertTrue(exporter.exportToWAV(audioData: data, filename: \\\\\\\"sample\\\\\\\"))\\\"\""
      },
      {
        "line": 2676,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2677,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.1282051282051282,\""
      },
      {
        "line": 2681,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2682,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2686,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2687,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockURLProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 2691,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2692,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2696,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2697,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"if let data = MockURLProtocol.responseData {\\\"\""
      },
      {
        "line": 2701,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2702,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2706,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2707,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.responseData = json\\\"\""
      },
      {
        "line": 2711,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2712,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2716,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2717,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 2721,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2722,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 2726,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 2727,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"let updater = AutoUpdater(updateURL: URL(string: \\\\\\\"https://example.com\\\\\\\")!, session: session)\\\"\""
      },
      {
        "line": 2731,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2732,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.041666666666666664,\""
      },
      {
        "line": 2736,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2737,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2741,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2742,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let format = AVAudioFormat(standardFormatWithSampleRate: 44100, channels: 1)!\\\"\""
      },
      {
        "line": 2746,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2747,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.043478260869565216,\""
      },
      {
        "line": 2751,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2752,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2756,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2757,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockEngine: AIEngine {\\\"\""
      },
      {
        "line": 2761,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2762,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2766,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2767,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"let service = RealTimeImproviserService(engine: FusionEngine(engine: MockEngine()), context: \\\\\\\"Scene\\\\\\\")\\\"\""
      },
      {
        "line": 2771,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2772,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2776,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2777,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"let service = RealTimeImproviserService(engine: FusionEngine(engine: MockEngine()))\\\"\""
      },
      {
        "line": 2781,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2782,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.06818181818181818,\""
      },
      {
        "line": 2786,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2787,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2791,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2792,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private struct MockEngine: AIEngine {\\\"\""
      },
      {
        "line": 2796,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2797,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2801,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2802,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"let m1 = MockEngine(label: \\\\\\\"A\\\\\\\")\\\"\""
      },
      {
        "line": 2806,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2807,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2811,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2812,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"let m2 = MockEngine(label: \\\\\\\"B\\\\\\\")\\\"\""
      },
      {
        "line": 2816,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2817,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0625,\""
      },
      {
        "line": 2821,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2822,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2826,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2827,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let profile = VoiceProfile(name: \\\\\\\"Sample\\\\\\\")\\\"\""
      },
      {
        "line": 2831,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2832,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 2836,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 2837,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"XCTAssertEqual(client.voiceInfo(id: profile.id)?.name, \\\\\\\"Sample\\\\\\\")\\\"\""
      },
      {
        "line": 2841,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2842,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.17543859649122806,\""
      },
      {
        "line": 2846,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2847,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2851,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2852,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockURLProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 2856,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2857,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2861,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2862,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"if let data = MockURLProtocol.responseData {\\\"\""
      },
      {
        "line": 2866,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2867,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2871,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2872,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"let response = HTTPURLResponse(url: request.url!, statusCode: MockURLProtocol.status, httpVersion: nil, headerFields: nil)!\\\"\""
      },
      {
        "line": 2876,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2877,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2881,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2882,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"let response = HTTPURLResponse(url: request.url!, statusCode: MockURLProtocol.status, httpVersion: nil, headerFields: nil)!\\\"\""
      },
      {
        "line": 2886,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2887,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2891,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2892,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.responseData = Data()\\\"\""
      },
      {
        "line": 2896,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2897,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2901,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2902,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.status = 200\\\"\""
      },
      {
        "line": 2906,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2907,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2911,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2912,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 2916,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2917,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2921,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2922,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.responseData = json\\\"\""
      },
      {
        "line": 2926,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2927,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2931,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2932,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.status = 200\\\"\""
      },
      {
        "line": 2936,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2937,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2941,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2942,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 2946,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2947,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"./Tests/CreatorCoreForgeTests/AudioFeaturePlaceholdersTests.swift\\\": {\""
      },
      {
        "line": 2951,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2952,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.03773584905660377,\""
      },
      {
        "line": 2956,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2957,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 2961,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2962,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"final class AudioFeaturePlaceholdersTests: XCTestCase {\\\"\""
      },
      {
        "line": 2966,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2967,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 2971,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2972,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"func testPlaceholderInitializers() {\\\"\""
      },
      {
        "line": 2976,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 2977,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.15555555555555556,\""
      },
      {
        "line": 2981,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2982,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2986,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2987,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockURLProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 2991,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2992,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 2996,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 2997,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.statusCode = 200\\\"\""
      },
      {
        "line": 3001,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3002,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3006,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3007,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 3011,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3012,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3016,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3017,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"manager.postUpdate(\\\\\\\"hello\\\\\\\", to: URL(string: \\\\\\\"https://example.com\\\\\\\")!, token: \\\\\\\"t\\\\\\\") { success in\\\"\""
      },
      {
        "line": 3021,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3022,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3026,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3027,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.statusCode = 400\\\"\""
      },
      {
        "line": 3031,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3032,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3036,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3037,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 3041,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3042,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3046,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3047,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"manager.postUpdate(\\\\\\\"fail\\\\\\\", to: URL(string: \\\\\\\"https://example.com\\\\\\\")!, token: \\\\\\\"t\\\\\\\") { success in\\\"\""
      },
      {
        "line": 3051,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3052,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.043478260869565216,\""
      },
      {
        "line": 3056,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3057,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3061,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3062,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let tmp = FileManager.default.temporaryDirectory.appendingPathComponent(\\\\\\\"sample.txt\\\\\\\")\\\"\""
      },
      {
        "line": 3066,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3067,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.1111111111111111,\""
      },
      {
        "line": 3071,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3072,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3076,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3077,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let url1 = tmpDir.appendingPathComponent(\\\\\\\"sample1.txt\\\\\\\")\\\"\""
      },
      {
        "line": 3081,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3082,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3086,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3087,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"let url2 = tmpDir.appendingPathComponent(\\\\\\\"sample2.txt\\\\\\\")\\\"\""
      },
      {
        "line": 3091,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3092,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.03571428571428571,\""
      },
      {
        "line": 3096,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3097,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3101,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3102,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"func testPhase7Placeholders() {\\\"\""
      },
      {
        "line": 3106,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3107,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.16666666666666666,\""
      },
      {
        "line": 3111,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3112,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3116,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3117,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockURLProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 3121,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3122,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3126,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3127,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.responseData = json\\\"\""
      },
      {
        "line": 3131,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3132,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3136,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3137,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.statusCode = 200\\\"\""
      },
      {
        "line": 3141,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3142,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3146,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3147,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 3151,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3152,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3156,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3157,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"provider.fetchInfo(from: URL(string: \\\\\\\"https://example.com/info\\\\\\\")!) { info in\\\"\""
      },
      {
        "line": 3161,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3162,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3166,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3167,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.responseData = nil\\\"\""
      },
      {
        "line": 3171,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3172,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3176,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3177,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.statusCode = 500\\\"\""
      },
      {
        "line": 3181,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3182,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3186,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3187,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 3191,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3192,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3196,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3197,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"provider.fetchInfo(from: URL(string: \\\\\\\"https://example.com/info\\\\\\\")!) { info in\\\"\""
      },
      {
        "line": 3201,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3202,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.004484304932735426,\""
      },
      {
        "line": 3206,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3207,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3211,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3212,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"XCTAssertTrue(TrainingPipeline().prepare(samples: [0.1]))\\\"\""
      },
      {
        "line": 3216,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3217,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.030303030303030304,\""
      },
      {
        "line": 3221,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3222,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3226,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3227,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"train-sample\\\\\\\": \\\\\\\"ts-node scripts/train-sample.ts\\\\\\\"\\\"\""
      },
      {
        "line": 3231,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3232,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.2,\""
      },
      {
        "line": 3236,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3237,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3241,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3242,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"jest.mock('./src/ttsService', () => ({\\\"\""
      },
      {
        "line": 3246,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3247,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3251,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3252,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"jest.mock('./src/vaultService', () => ({\\\"\""
      },
      {
        "line": 3256,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3257,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.09090909090909091,\""
      },
      {
        "line": 3261,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3262,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3266,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3267,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"See `scripts/train-sample.ts` for a CLI example that trains a sample model.\\\"\""
      },
      {
        "line": 3271,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3272,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0020776522529541617,\""
      },
      {
        "line": 3276,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3277,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3281,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3282,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\"\\\"\""
      },
      {
        "line": 3286,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3287,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3291,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3292,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\",\\\"\""
      },
      {
        "line": 3296,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3297,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3301,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3302,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\"\\\"\""
      },
      {
        "line": 3306,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3307,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3311,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3312,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\",\\\"\""
      },
      {
        "line": 3316,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3317,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3321,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3322,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"node_modules/@jest/environment-jsdom-abstract/node_modules/jest-mock\\\\\\\": {\\\"\""
      },
      {
        "line": 3326,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3327,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3331,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3332,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"resolved\\\\\\\": \\\\\\\"https://registry.npmjs.org/jest-mock/-/jest-mock-30.0.2.tgz\\\\\\\",\\\"\""
      },
      {
        "line": 3336,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3337,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3341,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3342,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\",\\\"\""
      },
      {
        "line": 3346,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3347,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3351,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3352,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\"\\\"\""
      },
      {
        "line": 3356,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3357,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3361,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3362,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\"\\\"\""
      },
      {
        "line": 3366,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3367,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3371,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3372,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"30.0.2\\\\\\\",\\\"\""
      },
      {
        "line": 3376,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3377,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3381,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3382,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"node_modules/jest-environment-jsdom/node_modules/jest-mock\\\\\\\": {\\\"\""
      },
      {
        "line": 3386,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3387,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3391,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3392,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"resolved\\\\\\\": \\\\\\\"https://registry.npmjs.org/jest-mock/-/jest-mock-30.0.2.tgz\\\\\\\",\\\"\""
      },
      {
        "line": 3396,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3397,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3401,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3402,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\",\\\"\""
      },
      {
        "line": 3406,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3407,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3411,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3412,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"node_modules/jest-mock\\\\\\\": {\\\"\""
      },
      {
        "line": 3416,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3417,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3421,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3422,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"resolved\\\\\\\": \\\\\\\"https://registry.npmjs.org/jest-mock/-/jest-mock-29.7.0.tgz\\\\\\\",\\\"\""
      },
      {
        "line": 3426,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3427,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3431,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3432,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"jest-mock\\\\\\\": \\\\\\\"^29.7.0\\\\\\\",\\\"\""
      },
      {
        "line": 3436,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3437,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.16666666666666666,\""
      },
      {
        "line": 3441,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3442,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3446,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3447,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"const sample = new Blob(['audio']);\\\"\""
      },
      {
        "line": 3451,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3452,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3456,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3457,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"const model = await engine.trainVoiceModel(sample, 'speaker1');\\\"\""
      },
      {
        "line": 3461,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3462,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3466,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3467,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"const metrics = await new VoiceAnalyticsService().analyze(sample);\\\"\""
      },
      {
        "line": 3471,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3472,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.04,\""
      },
      {
        "line": 3476,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3477,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3481,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3482,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"global.fetch = jest.fn().mockResolvedValue({\\\"\""
      },
      {
        "line": 3486,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3487,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.25,\""
      },
      {
        "line": 3491,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3492,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3496,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3497,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"const text = 'Title: Sample Book\\\\\\\\nAuthor: Jane Doe\\\\\\\\n\\\\\\\\nChapter 1\\\\\\\\nHello\\\\\\\\n\\\\\\\\nChapter 2\\\\\\\\nWorld';\\\"\""
      },
      {
        "line": 3501,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3502,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3506,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3507,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"const file = new File([text], 'sample.txt');\\\"\""
      },
      {
        "line": 3511,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3512,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3516,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3517,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"expect(book.title).toBe('Sample Book');\\\"\""
      },
      {
        "line": 3521,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3522,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"./VoiceLab/scripts/train-sample.ts\\\": {\""
      },
      {
        "line": 3526,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3527,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.25,\""
      },
      {
        "line": 3531,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3532,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3536,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3537,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"const sample = new Blob(['audio']);\\\"\""
      },
      {
        "line": 3541,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3542,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3546,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3547,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"const model = await engine.trainVoiceModel(sample, 'sample-speaker');\\\"\""
      },
      {
        "line": 3551,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3552,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.15384615384615385,\""
      },
      {
        "line": 3556,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3557,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3561,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3562,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"<input value={word} onChange={e => setWord(e.target.value)} placeholder=\\\\\\\"word\\\\\\\" />\\\"\""
      },
      {
        "line": 3566,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3567,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3571,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3572,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"<input value={phoneme} onChange={e => setPhoneme(e.target.value)} placeholder=\\\\\\\"phoneme\\\\\\\" />\\\"\""
      },
      {
        "line": 3576,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3577,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.07692307692307693,\""
      },
      {
        "line": 3581,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3582,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3586,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3587,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"* suitable for unit tests and sample exports.\\\"\""
      },
      {
        "line": 3591,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3592,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0625,\""
      },
      {
        "line": 3596,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3597,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3601,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3602,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"async trainVoiceModel(sampleAudio: Blob, speakerId: string): Promise<VoiceModel> {\\\"\""
      },
      {
        "line": 3606,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3607,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3611,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3612,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"// mock training delay\\\"\""
      },
      {
        "line": 3616,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3617,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.21052631578947367,\""
      },
      {
        "line": 3621,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3622,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3626,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3627,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"`auto_code_bot.py` scans the repository for incomplete features listed in `AGENTS.md` files. For each missing task it now generates a language-specific placeholder file under the `generated/` directory. When the `openai` package is installed and `OPENAI_API_KEY` is set, the bot attempts to generate code with OpenAI. Without OpenAI, it creates an advanced offline stub that detects the desired language (Swift, Kotlin, TypeScript, or Python) and builds a minimal class or function skeleton. The script also performs a quick syntax check on all Python files and comments out any lines that fail to compile so the project can build entirely offline.\\\"\""
      },
      {
        "line": 3631,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3632,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3636,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3637,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"To replace existing placeholder files with new code generated via OpenAI, run:\\\"\""
      },
      {
        "line": 3641,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3642,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3646,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3647,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"python scripts/auto_code_bot.py --upgrade-placeholders\\\"\""
      },
      {
        "line": 3651,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3652,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3656,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3657,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Generated filenames now match the detected language. For example, a Swift feature results in `feature.swift`, while a Python task becomes `feature.py`. Every run also scans existing Python files and comments out lines with syntax errors to keep the repository importable when offline.\\\"\""
      },
      {
        "line": 3661,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3662,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.09090909090909091,\""
      },
      {
        "line": 3666,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3667,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3671,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3672,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"- Apps avoid spammy functionality or placeholder content (Guideline 4.3) and include only finalized, user-facing features.\\\"\""
      },
      {
        "line": 3676,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3677,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.002079002079002079,\""
      },
      {
        "line": 3681,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3682,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3686,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3687,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- Provide multilingual visual cue glossary with usage examples\\\"\""
      },
      {
        "line": 3691,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3692,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0020942408376963353,\""
      },
      {
        "line": 3696,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3697,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3701,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3702,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"- Prompt validation with multiple sample inputs and outputs\\\"\""
      },
      {
        "line": 3706,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3707,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3711,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3712,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"- PromptTemplates.md (AI workflows, sample prompts)\\\"\""
      },
      {
        "line": 3716,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3717,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.009174311926605505,\""
      },
      {
        "line": 3721,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 3722,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 3726,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 3727,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"# Practical Approach and Initial TODO List\\\"\""
      },
      {
        "line": 3731,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3732,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.08,\""
      },
      {
        "line": 3736,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 3737,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 3741,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 3742,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"- `PRACTICAL_PLAN.md` \\\\u2013 initial TODO list across apps.\\\"\""
      },
      {
        "line": 3746,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3747,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3751,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3752,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"- `auto_code_bot.py` \\\\u2013 generates placeholder code files for missing features. It now includes an offline mode and a `--upgrade-placeholders` option to replace stubs with OpenAI-generated code when an API key is available.\\\"\""
      },
      {
        "line": 3756,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3757,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.038461538461538464,\""
      },
      {
        "line": 3761,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 3762,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 3766,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 3767,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"- `PRACTICAL_PLAN.md` \\\\u2013 initial TODO list across apps.\\\"\""
      },
      {
        "line": 3771,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3772,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.004201680672268907,\""
      },
      {
        "line": 3776,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3777,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3781,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3782,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"The file `scripts/ensure_200_features.py` now auto-generates placeholder\\\"\""
      },
      {
        "line": 3786,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3787,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.1875,\""
      },
      {
        "line": 3791,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3792,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3796,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3797,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"`VoiceTrainer` provides a lightweight way to upload audio samples and generate custom voices entirely offline.\\\"\""
      },
      {
        "line": 3801,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3802,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3806,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3807,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"trainer.uploadSample(for: \\\\\\\"Hero\\\\\\\", filePath: \\\\\\\"/path/hero.wav\\\\\\\")\\\"\""
      },
      {
        "line": 3811,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3812,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3816,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3817,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"Use `listTrainedVoices()` to print all available custom voices. Samples can be shared between apps via `VoiceMemoryManager`.\\\"\""
      },
      {
        "line": 3821,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3822,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.07692307692307693,\""
      },
      {
        "line": 3826,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3827,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3831,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3832,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example usage:\\\"\""
      },
      {
        "line": 3836,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3837,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.058823529411764705,\""
      },
      {
        "line": 3841,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3842,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3846,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3847,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"/// This mock implementation only stores IDs for demonstration.\\\"\""
      },
      {
        "line": 3851,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3852,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.018867924528301886,\""
      },
      {
        "line": 3856,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3857,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3861,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3862,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Adapted from the Requests library examples (Apache-2.0).\\\"\""
      },
      {
        "line": 3866,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3867,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.018691588785046728,\""
      },
      {
        "line": 3871,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3872,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 3876,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3877,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"Use `scripts/generate_placeholder_icons.py` to create required icon sizes.\\\"\""
      },
      {
        "line": 3881,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3882,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3886,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3887,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"- Run `../../scripts/fetch_plugins.sh` to download sample plugins before building.\\\"\""
      },
      {
        "line": 3891,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3892,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.16666666666666666,\""
      },
      {
        "line": 3896,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3897,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3901,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3902,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"- Run `../../scripts/fetch_plugins.sh` from the repo root to download sample plugins before building.\\\"\""
      },
      {
        "line": 3906,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3907,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.058823529411764705,\""
      },
      {
        "line": 3911,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3912,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 3916,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 3917,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Split-test hooks and rank by mock virality score\\\"\""
      },
      {
        "line": 3921,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3922,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.4,\""
      },
      {
        "line": 3926,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3927,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3931,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3932,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"{\\\\\\\"name\\\\\\\": \\\\\\\"Trap Loop\\\\\\\", \\\\\\\"url\\\\\\\": \\\\\\\"https://example.com/trap_loop.mp3\\\\\\\"},\\\"\""
      },
      {
        "line": 3936,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3937,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3941,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3942,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"{\\\\\\\"name\\\\\\\": \\\\\\\"Lo-Fi Chill\\\\\\\", \\\\\\\"url\\\\\\\": \\\\\\\"https://example.com/lofi_chill.mp3\\\\\\\"}\\\"\""
      },
      {
        "line": 3946,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3947,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.08333333333333333,\""
      },
      {
        "line": 3951,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3952,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 3956,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 3957,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"// Randomized test for example purposes\\\"\""
      },
      {
        "line": 3961,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 3962,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.008620689655172414,\""
      },
      {
        "line": 3966,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3967,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3971,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3972,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"- [x] Prompt validation with multiple sample inputs and outputs\\\"\""
      },
      {
        "line": 3976,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3977,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3981,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3982,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"- [x] PromptTemplates.md (AI workflows, sample prompts)\\\"\""
      },
      {
        "line": 3986,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3987,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 3991,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 3992,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"- [x] Allow users to test voice preview samples per character before rendering\\\"\""
      },
      {
        "line": 3996,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 3997,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 4001,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 4002,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"- [x] Flag NSFW content for internal moderation or publishing filter logic\\\"\""
      },
      {
        "line": 4006,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 4007,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 4011,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 4012,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"- [x] Auto-detect safe vs. unsafe content for preview-only versions\\\"\""
      },
      {
        "line": 4016,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4017,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.034482758620689655,\""
      },
      {
        "line": 4021,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4022,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 4026,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4027,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"<placeholder placeholderIdentifier=\\\\\\\"IBFirstResponder\\\\\\\" id=\\\\\\\"firstResponder\\\\\\\" userLabel=\\\\\\\"First Responder\\\\\\\" sceneMemberID=\\\\\\\"firstResponder\\\\\\\"/>\\\"\""
      },
      {
        "line": 4031,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4032,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.01818181818181818,\""
      },
      {
        "line": 4036,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4037,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4041,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4042,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"/// XOR operation based on the provided password so the examples\\\"\""
      },
      {
        "line": 4046,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4047,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.045454545454545456,\""
      },
      {
        "line": 4051,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4052,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4056,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4057,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"let updater = AutoUpdater(updateURL: url ?? URL(string: \\\\\\\"https://example.com/latest.json\\\\\\\")!,\\\"\""
      },
      {
        "line": 4061,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4062,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.05555555555555555,\""
      },
      {
        "line": 4066,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4067,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4071,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4072,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Executes mock shadow trades based on whale wallet activity.\\\"\""
      },
      {
        "line": 4076,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4077,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4081,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4082,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Perform a mock trade following a whale wallet signal.\\\"\""
      },
      {
        "line": 4086,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4087,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.10714285714285714,\""
      },
      {
        "line": 4091,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4092,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4096,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4097,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private final class MockSyncManager: MarketPriceFetching {\\\"\""
      },
      {
        "line": 4101,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4102,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4106,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4107,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"let scanner = MultiMarketScanner(syncManager: MockSyncManager())\\\"\""
      },
      {
        "line": 4111,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4112,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4116,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4117,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"let scanner = MultiMarketScanner(syncManager: MockSyncManager())\\\"\""
      },
      {
        "line": 4121,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4122,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.10869565217391304,\""
      },
      {
        "line": 4126,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4127,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4131,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4132,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 4136,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4137,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4141,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4142,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let handler = MockProtocol.requestHandler else { return }\\\"\""
      },
      {
        "line": 4146,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4147,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4151,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4152,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockProtocol.self]\\\"\""
      },
      {
        "line": 4156,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4157,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4161,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4162,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockProtocol.requestHandler = { request in\\\"\""
      },
      {
        "line": 4166,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4167,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4171,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4172,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"let service = ReportingService(baseURL: URL(string: \\\\\\\"https://example.com\\\\\\\")!, session: session)\\\"\""
      },
      {
        "line": 4176,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4177,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.10204081632653061,\""
      },
      {
        "line": 4181,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4182,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4186,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4187,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"func testSendPromptMock() {\\\"\""
      },
      {
        "line": 4191,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4192,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4196,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4197,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"class MockProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 4201,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4202,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4206,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4207,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let handler = MockProtocol.requestHandler else { return }\\\"\""
      },
      {
        "line": 4211,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4212,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4216,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4217,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockProtocol.self]\\\"\""
      },
      {
        "line": 4221,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4222,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4226,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4227,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockProtocol.requestHandler = { request in\\\"\""
      },
      {
        "line": 4231,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4232,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4236,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4237,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"func testFetchEmbeddingMock() {\\\"\""
      },
      {
        "line": 4241,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4242,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4246,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4247,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"class MockProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 4251,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4252,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4256,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4257,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let handler = MockProtocol.requestHandler else { return }\\\"\""
      },
      {
        "line": 4261,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4262,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4266,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4267,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockProtocol.self]\\\"\""
      },
      {
        "line": 4271,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4272,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4276,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4277,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockProtocol.requestHandler = { request in\\\"\""
      },
      {
        "line": 4281,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4282,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.10204081632653061,\""
      },
      {
        "line": 4286,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4287,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4291,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4292,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"func testGenerateStrategyMock() {\\\"\""
      },
      {
        "line": 4296,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4297,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4301,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4302,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"class MockProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 4306,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4307,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4311,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4312,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let handler = MockProtocol.requestHandler else { return }\\\"\""
      },
      {
        "line": 4316,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4317,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4321,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4322,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockProtocol.self]\\\"\""
      },
      {
        "line": 4326,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4327,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4331,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4332,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockProtocol.requestHandler = { request in\\\"\""
      },
      {
        "line": 4336,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4337,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.10810810810810811,\""
      },
      {
        "line": 4341,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4342,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4346,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4347,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockURLProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 4351,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4352,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4356,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4357,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"if let data = MockURLProtocol.responseData {\\\"\""
      },
      {
        "line": 4361,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4362,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4366,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4367,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockURLProtocol.responseData = json\\\"\""
      },
      {
        "line": 4371,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4372,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4376,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4377,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockURLProtocol.self]\\\"\""
      },
      {
        "line": 4381,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4382,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.10810810810810811,\""
      },
      {
        "line": 4386,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4387,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4391,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4392,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 4396,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4397,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4401,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4402,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let handler = MockProtocol.requestHandler else { return }\\\"\""
      },
      {
        "line": 4406,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4407,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4411,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4412,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockProtocol.self]\\\"\""
      },
      {
        "line": 4416,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4417,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4421,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4422,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockProtocol.requestHandler = { request in\\\"\""
      },
      {
        "line": 4426,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4427,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4431,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4432,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"return AdminService(baseURL: URL(string: \\\\\\\"https://example.com\\\\\\\")!, session: session)\\\"\""
      },
      {
        "line": 4436,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4437,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4441,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4442,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockProtocol.self]\\\"\""
      },
      {
        "line": 4446,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4447,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 4451,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 4452,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockProtocol.requestHandler = { request in\\\"\""
      },
      {
        "line": 4456,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4457,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4461,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4462,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"let service = AdminService(baseURL: URL(string: \\\\\\\"https://example.com\\\\\\\")!, session: session)\\\"\""
      },
      {
        "line": 4466,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4467,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.05,\""
      },
      {
        "line": 4471,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4472,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4476,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4477,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"# Example correction:\\\"\""
      },
      {
        "line": 4481,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4482,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4486,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4487,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"# Example adding extra arguments -> command: [\\\\\\\"--share\\\\\\\"] or -> command: [\\\\\\\"--help\\\\\\\"]\\\"\""
      },
      {
        "line": 4491,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4492,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.058823529411764705,\""
      },
      {
        "line": 4496,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4497,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4501,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4502,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"# Example correction:\\\"\""
      },
      {
        "line": 4506,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4507,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4511,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4512,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"# Example adding extra arguments -> command: [\\\\\\\"--share\\\\\\\"] or -> command: [\\\\\\\"--help\\\\\\\"]\\\"\""
      },
      {
        "line": 4516,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4517,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.01953125,\""
      },
      {
        "line": 4521,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4522,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4526,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4527,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"**Example**\\\"\""
      },
      {
        "line": 4531,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4532,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4536,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4537,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\\\"\""
      },
      {
        "line": 4541,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4542,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4546,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4547,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- [Headless Custom XTTS Model Usage](#example-of-custom-model-zip-upload)\\\"\""
      },
      {
        "line": 4551,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4552,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4556,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4557,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- \\\\ud83c\\\\udf99\\\\ufe0f High-quality text-to-speech with [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) and [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms) (and more).\\\"\""
      },
      {
        "line": 4561,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4562,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4566,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4567,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"###  Example of Custom Model Zip Upload\\\"\""
      },
      {
        "line": 4571,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4572,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4576,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4577,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"(must be a .zip file containing the mandatory model files. Example for XTTS: config.json, model.pth, vocab.json and ref.wav)\\\"\""
      },
      {
        "line": 4581,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4582,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4586,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4587,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example usage:\\\"\""
      },
      {
        "line": 4591,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4592,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4596,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4597,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"For example:\\\"\""
      },
      {
        "line": 4601,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4602,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4606,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4607,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- Example: `docker run --pull always athomasson2/ebook2audiobook app.py --script_mode full_docker` - > corrected - > `docker run --pull always athomasson2/ebook2audiobook`\\\"\""
      },
      {
        "line": 4611,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4612,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4616,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4617,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example of adding this fix in the `docker run` command\\\"\""
      },
      {
        "line": 4621,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4622,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.004975124378109453,\""
      },
      {
        "line": 4626,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4627,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4631,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4632,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"(an example is provided in the Appendix below).\\\"\""
      },
      {
        "line": 4636,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4637,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0033333333333333335,\""
      },
      {
        "line": 4641,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4642,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4646,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4647,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example usage:\\\"\""
      },
      {
        "line": 4651,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4652,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0234375,\""
      },
      {
        "line": 4656,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4657,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4661,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4662,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Examples of behavior that contributes to a positive environment for our\\\"\""
      },
      {
        "line": 4666,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4667,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4671,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4672,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Examples of unacceptable behavior include:\\\"\""
      },
      {
        "line": 4676,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4677,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4681,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4682,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Examples of representing our community include using an official e-mail address,\\\"\""
      },
      {
        "line": 4686,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4687,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0017657445556209534,\""
      },
      {
        "line": 4691,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 4692,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 4696,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 4697,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"fairseq\\\\\\\": {\\\\\\\"ara\\\\\\\": \\\\\\\"ar\\\\\\\", \\\\\\\"ben\\\\\\\": \\\\\\\"bn\\\\\\\", \\\\\\\"eng\\\\\\\": \\\\\\\"en\\\\\\\", \\\\\\\"fas\\\\\\\": \\\\\\\"fa\\\\\\\", \\\\\\\"fra\\\\\\\": \\\\\\\"fr\\\\\\\", \\\\\\\"deu\\\\\\\": \\\\\\\"de\\\\\\\", \\\\\\\"hin\\\\\\\": \\\\\\\"hi\\\\\\\", \\\\\\\"hun\\\\\\\": \\\\\\\"hu\\\\\\\", \\\\\\\"ind\\\\\\\": \\\\\\\"id\\\\\\\", \\\\\\\"jav\\\\\\\": \\\\\\\"jv\\\\\\\", \\\\\\\"kor\\\\\\\": \\\\\\\"ko\\\\\\\", \\\\\\\"pol\\\\\\\": \\\\\\\"pl\\\\\\\", \\\\\\\"por\\\\\\\": \\\\\\\"pt\\\\\\\", \\\\\\\"rus\\\\\\\": \\\\\\\"ru\\\\\\\", \\\\\\\"spa\\\\\\\": \\\\\\\"es\\\\\\\", \\\\\\\"tam\\\\\\\": \\\\\\\"ta\\\\\\\", \\\\\\\"tel\\\\\\\": \\\\\\\"te\\\\\\\", \\\\\\\"tur\\\\\\\": \\\\\\\"tr\\\\\\\", \\\\\\\"yor\\\\\\\": \\\\\\\"yo\\\\\\\", \\\\\\\"abi\\\\\\\": \\\\\\\"abi\\\\\\\", \\\\\\\"ace\\\\\\\": \\\\\\\"ace\\\\\\\", \\\\\\\"aca\\\\\\\": \\\\\\\"aca\\\\\\\", \\\\\\\"acn\\\\\\\": \\\\\\\"acn\\\\\\\", \\\\\\\"acr\\\\\\\": \\\\\\\"acr\\\\\\\", \\\\\\\"ach\\\\\\\": \\\\\\\"ach\\\\\\\", \\\\\\\"acu\\\\\\\": \\\\\\\"acu\\\\\\\", \\\\\\\"guq\\\\\\\": \\\\\\\"guq\\\\\\\", \\\\\\\"ade\\\\\\\": \\\\\\\"ade\\\\\\\", \\\\\\\"adj\\\\\\\": \\\\\\\"adj\\\\\\\", \\\\\\\"agd\\\\\\\": \\\\\\\"agd\\\\\\\", \\\\\\\"agx\\\\\\\": \\\\\\\"agx\\\\\\\", \\\\\\\"agn\\\\\\\": \\\\\\\"agn\\\\\\\", \\\\\\\"aha\\\\\\\": \\\\\\\"aha\\\\\\\", \\\\\\\"aka\\\\\\\": \\\\\\\"ak\\\\\\\", \\\\\\\"knj\\\\\\\": \\\\\\\"knj\\\\\\\", \\\\\\\"ake\\\\\\\": \\\\\\\"ake\\\\\\\", \\\\\\\"aeu\\\\\\\": \\\\\\\"aeu\\\\\\\", \\\\\\\"ahk\\\\\\\": \\\\\\\"ahk\\\\\\\", \\\\\\\"bss\\\\\\\": \\\\\\\"bss\\\\\\\", \\\\\\\"alj\\\\\\\": \\\\\\\"alj\\\\\\\", \\\\\\\"sqi\\\\\\\": \\\\\\\"sq\\\\\\\", \\\\\\\"alt\\\\\\\": \\\\\\\"alt\\\\\\\", \\\\\\\"alp\\\\\\\": \\\\\\\"alp\\\\\\\", \\\\\\\"alz\\\\\\\": \\\\\\\"alz\\\\\\\", \\\\\\\"kab\\\\\\\": \\\\\\\"kab\\\\\\\", \\\\\\\"amk\\\\\\\": \\\\\\\"amk\\\\\\\", \\\\\\\"mmg\\\\\\\": \\\\\\\"mmg\\\\\\\", \\\\\\\"amh\\\\\\\": \\\\\\\"am\\\\\\\", \\\\\\\"ami\\\\\\\": \\\\\\\"ami\\\\\\\", \\\\\\\"azg\\\\\\\": \\\\\\\"azg\\\\\\\", \\\\\\\"agg\\\\\\\": \\\\\\\"agg\\\\\\\", \\\\\\\"boj\\\\\\\": \\\\\\\"boj\\\\\\\", \\\\\\\"cko\\\\\\\": \\\\\\\"cko\\\\\\\", \\\\\\\"any\\\\\\\": \\\\\\\"any\\\\\\\", \\\\\\\"arl\\\\\\\": \\\\\\\"arl\\\\\\\", \\\\\\\"atq\\\\\\\": \\\\\\\"atq\\\\\\\", \\\\\\\"luc\\\\\\\": \\\\\\\"luc\\\\\\\", \\\\\\\"hyw\\\\\\\": \\\\\\\"hyw\\\\\\\", \\\\\\\"apr\\\\\\\": \\\\\\\"apr\\\\\\\", \\\\\\\"aia\\\\\\\": \\\\\\\"aia\\\\\\\", \\\\\\\"msy\\\\\\\": \\\\\\\"msy\\\\\\\", \\\\\\\"cni\\\\\\\": \\\\\\\"cni\\\\\\\", \\\\\\\"cjo\\\\\\\": \\\\\\\"cjo\\\\\\\", \\\\\\\"cpu\\\\\\\": \\\\\\\"cpu\\\\\\\", \\\\\\\"cpb\\\\\\\": \\\\\\\"cpb\\\\\\\", \\\\\\\"asm\\\\\\\": \\\\\\\"as\\\\\\\", \\\\\\\"asa\\\\\\\": \\\\\\\"asa\\\\\\\", \\\\\\\"teo\\\\\\\": \\\\\\\"teo\\\\\\\", \\\\\\\"ati\\\\\\\": \\\\\\\"ati\\\\\\\", \\\\\\\"djk\\\\\\\": \\\\\\\"djk\\\\\\\", \\\\\\\"ava\\\\\\\": \\\\\\\"av\\\\\\\", \\\\\\\"avn\\\\\\\": \\\\\\\"avn\\\\\\\", \\\\\\\"avu\\\\\\\": \\\\\\\"avu\\\\\\\", \\\\\\\"awb\\\\\\\": \\\\\\\"awb\\\\\\\", \\\\\\\"kwi\\\\\\\": \\\\\\\"kwi\\\\\\\", \\\\\\\"awa\\\\\\\": \\\\\\\"awa\\\\\\\", \\\\\\\"agr\\\\\\\": \\\\\\\"agr\\\\\\\", \\\\\\\"agu\\\\\\\": \\\\\\\"agu\\\\\\\", \\\\\\\"ayr\\\\\\\": \\\\\\\"ayr\\\\\\\", \\\\\\\"ayo\\\\\\\": \\\\\\\"ayo\\\\\\\", \\\\\\\"abp\\\\\\\": \\\\\\\"abp\\\\\\\", \\\\\\\"blx\\\\\\\": \\\\\\\"blx\\\\\\\", \\\\\\\"sgb\\\\\\\": \\\\\\\"sgb\\\\\\\", \\\\\\\"azj-script_cyrillic\\\\\\\": \\\\\\\"azj-script_cyrillic\\\\\\\", \\\\\\\"azj-script_latin\\\\\\\": \\\\\\\"azj-script_latin\\\\\\\", \\\\\\\"azb\\\\\\\": \\\\\\\"azb\\\\\\\", \\\\\\\"bba\\\\\\\": \\\\\\\"bba\\\\\\\", \\\\\\\"bhz\\\\\\\": \\\\\\\"bhz\\\\\\\", \\\\\\\"bvc\\\\\\\": \\\\\\\"bvc\\\\\\\", \\\\\\\"bfy\\\\\\\": \\\\\\\"bfy\\\\\\\", \\\\\\\"bgq\\\\\\\": \\\\\\\"bgq\\\\\\\", \\\\\\\"bdq\\\\\\\": \\\\\\\"bdq\\\\\\\", \\\\\\\"bdh\\\\\\\": \\\\\\\"bdh\\\\\\\", \\\\\\\"bqi\\\\\\\": \\\\\\\"bqi\\\\\\\", \\\\\\\"bjw\\\\\\\": \\\\\\\"bjw\\\\\\\", \\\\\\\"blz\\\\\\\": \\\\\\\"blz\\\\\\\", \\\\\\\"ban\\\\\\\": \\\\\\\"ban\\\\\\\", \\\\\\\"bcc-script_latin\\\\\\\": \\\\\\\"bcc-script_latin\\\\\\\", \\\\\\\"bcc-script_arabic\\\\\\\": \\\\\\\"bcc-script_arabic\\\\\\\", \\\\\\\"bam\\\\\\\": \\\\\\\"bm\\\\\\\", \\\\\\\"ptu\\\\\\\": \\\\\\\"ptu\\\\\\\", \\\\\\\"bcw\\\\\\\": \\\\\\\"bcw\\\\\\\", \\\\\\\"bqj\\\\\\\": \\\\\\\"bqj\\\\\\\", \\\\\\\"bno\\\\\\\": \\\\\\\"bno\\\\\\\", \\\\\\\"bbb\\\\\\\": \\\\\\\"bbb\\\\\\\", \\\\\\\"bfa\\\\\\\": \\\\\\\"bfa\\\\\\\", \\\\\\\"bjz\\\\\\\": \\\\\\\"bjz\\\\\\\", \\\\\\\"bak\\\\\\\": \\\\\\\"ba\\\\\\\", \\\\\\\"eus\\\\\\\": \\\\\\\"eu\\\\\\\", \\\\\\\"bsq\\\\\\\": \\\\\\\"bsq\\\\\\\", \\\\\\\"akb\\\\\\\": \\\\\\\"akb\\\\\\\", \\\\\\\"btd\\\\\\\": \\\\\\\"btd\\\\\\\", \\\\\\\"btx\\\\\\\": \\\\\\\"btx\\\\\\\", \\\\\\\"bts\\\\\\\": \\\\\\\"bts\\\\\\\", \\\\\\\"bbc\\\\\\\": \\\\\\\"bbc\\\\\\\", \\\\\\\"bvz\\\\\\\": \\\\\\\"bvz\\\\\\\", \\\\\\\"bjv\\\\\\\": \\\\\\\"bjv\\\\\\\", \\\\\\\"bep\\\\\\\": \\\\\\\"bep\\\\\\\", \\\\\\\"bkv\\\\\\\": \\\\\\\"bkv\\\\\\\", \\\\\\\"bzj\\\\\\\": \\\\\\\"bzj\\\\\\\", \\\\\\\"bem\\\\\\\": \\\\\\\"bem\\\\\\\", \\\\\\\"bng\\\\\\\": \\\\\\\"bng\\\\\\\", \\\\\\\"bom\\\\\\\": \\\\\\\"bom\\\\\\\", \\\\\\\"btt\\\\\\\": \\\\\\\"btt\\\\\\\", \\\\\\\"bha\\\\\\\": \\\\\\\"bha\\\\\\\", \\\\\\\"bgw\\\\\\\": \\\\\\\"bgw\\\\\\\", \\\\\\\"bht\\\\\\\": \\\\\\\"bht\\\\\\\", \\\\\\\"beh\\\\\\\": \\\\\\\"beh\\\\\\\", \\\\\\\"sne\\\\\\\": \\\\\\\"sne\\\\\\\", \\\\\\\"ubl\\\\\\\": \\\\\\\"ubl\\\\\\\", \\\\\\\"bcl\\\\\\\": \\\\\\\"bcl\\\\\\\", \\\\\\\"bim\\\\\\\": \\\\\\\"bim\\\\\\\", \\\\\\\"bkd\\\\\\\": \\\\\\\"bkd\\\\\\\", \\\\\\\"bjr\\\\\\\": \\\\\\\"bjr\\\\\\\", \\\\\\\"bfo\\\\\\\": \\\\\\\"bfo\\\\\\\", \\\\\\\"biv\\\\\\\": \\\\\\\"biv\\\\\\\", \\\\\\\"bib\\\\\\\": \\\\\\\"bib\\\\\\\", \\\\\\\"bis\\\\\\\": \\\\\\\"bi\\\\\\\", \\\\\\\"bzi\\\\\\\": \\\\\\\"bzi\\\\\\\", \\\\\\\"bqp\\\\\\\": \\\\\\\"bqp\\\\\\\", \\\\\\\"bpr\\\\\\\": \\\\\\\"bpr\\\\\\\", \\\\\\\"bps\\\\\\\": \\\\\\\"bps\\\\\\\", \\\\\\\"bwq\\\\\\\": \\\\\\\"bwq\\\\\\\", \\\\\\\"bdv\\\\\\\": \\\\\\\"bdv\\\\\\\", \\\\\\\"bqc\\\\\\\": \\\\\\\"bqc\\\\\\\", \\\\\\\"bus\\\\\\\": \\\\\\\"bus\\\\\\\", \\\\\\\"bnp\\\\\\\": \\\\\\\"bnp\\\\\\\", \\\\\\\"bmq\\\\\\\": \\\\\\\"bmq\\\\\\\", \\\\\\\"bdg\\\\\\\": \\\\\\\"bdg\\\\\\\", \\\\\\\"boa\\\\\\\": \\\\\\\"boa\\\\\\\", \\\\\\\"ksr\\\\\\\": \\\\\\\"ksr\\\\\\\", \\\\\\\"bor\\\\\\\": \\\\\\\"bor\\\\\\\", \\\\\\\"bru\\\\\\\": \\\\\\\"bru\\\\\\\", \\\\\\\"box\\\\\\\": \\\\\\\"box\\\\\\\", \\\\\\\"bzh\\\\\\\": \\\\\\\"bzh\\\\\\\", \\\\\\\"bgt\\\\\\\": \\\\\\\"bgt\\\\\\\", \\\\\\\"sab\\\\\\\": \\\\\\\"sab\\\\\\\", \\\\\\\"bul\\\\\\\": \\\\\\\"bg\\\\\\\", \\\\\\\"bwu\\\\\\\": \\\\\\\"bwu\\\\\\\", \\\\\\\"bmv\\\\\\\": \\\\\\\"bmv\\\\\\\", \\\\\\\"mya\\\\\\\": \\\\\\\"my\\\\\\\", \\\\\\\"tte\\\\\\\": \\\\\\\"tte\\\\\\\", \\\\\\\"cjp\\\\\\\": \\\\\\\"cjp\\\\\\\", \\\\\\\"cbv\\\\\\\": \\\\\\\"cbv\\\\\\\", \\\\\\\"kaq\\\\\\\": \\\\\\\"kaq\\\\\\\", \\\\\\\"cot\\\\\\\": \\\\\\\"cot\\\\\\\", \\\\\\\"cbc\\\\\\\": \\\\\\\"cbc\\\\\\\", \\\\\\\"car\\\\\\\": \\\\\\\"car\\\\\\\", \\\\\\\"cat\\\\\\\": \\\\\\\"ca\\\\\\\", \\\\\\\"ceb\\\\\\\": \\\\\\\"ceb\\\\\\\", \\\\\\\"cme\\\\\\\": \\\\\\\"cme\\\\\\\", \\\\\\\"cbi\\\\\\\": \\\\\\\"cbi\\\\\\\", \\\\\\\"ceg\\\\\\\": \\\\\\\"ceg\\\\\\\", \\\\\\\"cly\\\\\\\": \\\\\\\"cly\\\\\\\", \\\\\\\"cya\\\\\\\": \\\\\\\"cya\\\\\\\", \\\\\\\"che\\\\\\\": \\\\\\\"ce\\\\\\\", \\\\\\\"hne\\\\\\\": \\\\\\\"hne\\\\\\\", \\\\\\\"nya\\\\\\\": \\\\\\\"ny\\\\\\\", \\\\\\\"dig\\\\\\\": \\\\\\\"dig\\\\\\\", \\\\\\\"dug\\\\\\\": \\\\\\\"dug\\\\\\\", \\\\\\\"bgr\\\\\\\": \\\\\\\"bgr\\\\\\\", \\\\\\\"cek\\\\\\\": \\\\\\\"cek\\\\\\\", \\\\\\\"cfm\\\\\\\": \\\\\\\"cfm\\\\\\\", \\\\\\\"cnh\\\\\\\": \\\\\\\"cnh\\\\\\\", \\\\\\\"hlt\\\\\\\": \\\\\\\"hlt\\\\\\\", \\\\\\\"mwq\\\\\\\": \\\\\\\"mwq\\\\\\\", \\\\\\\"ctd\\\\\\\": \\\\\\\"ctd\\\\\\\", \\\\\\\"tcz\\\\\\\": \\\\\\\"tcz\\\\\\\", \\\\\\\"zyp\\\\\\\": \\\\\\\"zyp\\\\\\\", \\\\\\\"cco\\\\\\\": \\\\\\\"cco\\\\\\\", \\\\\\\"cnl\\\\\\\": \\\\\\\"cnl\\\\\\\", \\\\\\\"cle\\\\\\\": \\\\\\\"cle\\\\\\\", \\\\\\\"chz\\\\\\\": \\\\\\\"chz\\\\\\\", \\\\\\\"cpa\\\\\\\": \\\\\\\"cpa\\\\\\\", \\\\\\\"cso\\\\\\\": \\\\\\\"cso\\\\\\\", \\\\\\\"cnt\\\\\\\": \\\\\\\"cnt\\\\\\\", \\\\\\\"cuc\\\\\\\": \\\\\\\"cuc\\\\\\\", \\\\\\\"hak\\\\\\\": \\\\\\\"hak\\\\\\\", \\\\\\\"nan\\\\\\\": \\\\\\\"nan\\\\\\\", \\\\\\\"xnj\\\\\\\": \\\\\\\"xnj\\\\\\\", \\\\\\\"cap\\\\\\\": \\\\\\\"cap\\\\\\\", \\\\\\\"cax\\\\\\\": \\\\\\\"cax\\\\\\\", \\\\\\\"ctg\\\\\\\": \\\\\\\"ctg\\\\\\\", \\\\\\\"ctu\\\\\\\": \\\\\\\"ctu\\\\\\\", \\\\\\\"chf\\\\\\\": \\\\\\\"chf\\\\\\\", \\\\\\\"cce\\\\\\\": \\\\\\\"cce\\\\\\\", \\\\\\\"crt\\\\\\\": \\\\\\\"crt\\\\\\\", \\\\\\\"crq\\\\\\\": \\\\\\\"crq\\\\\\\", \\\\\\\"cac-dialect_sansebasti\\\\\\\\u00e1ncoat\\\\\\\\u00e1n\\\\\\\": \\\\\\\"cac-dialect_sansebasti\\\\\\\\u00e1ncoat\\\\\\\\u00e1n\\\\\\\", \\\\\\\"cac-dialect_sanmateoixtat\\\\\\\\u00e1n\\\\\\\": \\\\\\\"cac-dialect_sanmateoixtat\\\\\\\\u00e1n\\\\\\\", \\\\\\\"ckt\\\\\\\": \\\\\\\"ckt\\\\\\\", \\\\\\\"ncu\\\\\\\": \\\\\\\"ncu\\\\\\\", \\\\\\\"cdj\\\\\\\": \\\\\\\"cdj\\\\\\\", \\\\\\\"chv\\\\\\\": \\\\\\\"cv\\\\\\\", \\\\\\\"caa\\\\\\\": \\\\\\\"caa\\\\\\\", \\\\\\\"asg\\\\\\\": \\\\\\\"asg\\\\\\\", \\\\\\\"con\\\\\\\": \\\\\\\"con\\\\\\\", \\\\\\\"crn\\\\\\\": \\\\\\\"crn\\\\\\\", \\\\\\\"cok\\\\\\\": \\\\\\\"cok\\\\\\\", \\\\\\\"crk-script_latin\\\\\\\": \\\\\\\"crk-script_latin\\\\\\\", \\\\\\\"crk-script_syllabics\\\\\\\": \\\\\\\"crk-script_syllabics\\\\\\\", \\\\\\\"crh\\\\\\\": \\\\\\\"crh\\\\\\\", \\\\\\\"cui\\\\\\\": \\\\\\\"cui\\\\\\\", \\\\\\\"ces\\\\\\\": \\\\\\\"cs\\\\\\\", \\\\\\\"dsh\\\\\\\": \\\\\\\"dsh\\\\\\\", \\\\\\\"dbq\\\\\\\": \\\\\\\"dbq\\\\\\\", \\\\\\\"dga\\\\\\\": \\\\\\\"dga\\\\\\\", \\\\\\\"dgi\\\\\\\": \\\\\\\"dgi\\\\\\\", \\\\\\\"dgk\\\\\\\": \\\\\\\"dgk\\\\\\\", \\\\\\\"dnj-dialect_gweetaawueast\\\\\\\": \\\\\\\"dnj-dialect_gweetaawueast\\\\\\\", \\\\\\\"dnj-dialect_blowowest\\\\\\\": \\\\\\\"dnj-dialect_blowowest\\\\\\\", \\\\\\\"daa\\\\\\\": \\\\\\\"daa\\\\\\\", \\\\\\\"dnt\\\\\\\": \\\\\\\"dnt\\\\\\\", \\\\\\\"dnw\\\\\\\": \\\\\\\"dnw\\\\\\\", \\\\\\\"dar\\\\\\\": \\\\\\\"dar\\\\\\\", \\\\\\\"tcc\\\\\\\": \\\\\\\"tcc\\\\\\\", \\\\\\\"dwr\\\\\\\": \\\\\\\"dwr\\\\\\\", \\\\\\\"ded\\\\\\\": \\\\\\\"ded\\\\\\\", \\\\\\\"mzw\\\\\\\": \\\\\\\"mzw\\\\\\\", \\\\\\\"ntr\\\\\\\": \\\\\\\"ntr\\\\\\\", \\\\\\\"ddn\\\\\\\": \\\\\\\"ddn\\\\\\\", \\\\\\\"des\\\\\\\": \\\\\\\"des\\\\\\\", \\\\\\\"dso\\\\\\\": \\\\\\\"dso\\\\\\\", \\\\\\\"nfa\\\\\\\": \\\\\\\"nfa\\\\\\\", \\\\\\\"dhi\\\\\\\": \\\\\\\"dhi\\\\\\\", \\\\\\\"gud\\\\\\\": \\\\\\\"gud\\\\\\\", \\\\\\\"did\\\\\\\": \\\\\\\"did\\\\\\\", \\\\\\\"mhu\\\\\\\": \\\\\\\"mhu\\\\\\\", \\\\\\\"dip\\\\\\\": \\\\\\\"dip\\\\\\\", \\\\\\\"dik\\\\\\\": \\\\\\\"dik\\\\\\\", \\\\\\\"tbz\\\\\\\": \\\\\\\"tbz\\\\\\\", \\\\\\\"dts\\\\\\\": \\\\\\\"dts\\\\\\\", \\\\\\\"dos\\\\\\\": \\\\\\\"dos\\\\\\\", \\\\\\\"dgo\\\\\\\": \\\\\\\"dgo\\\\\\\", \\\\\\\"mvp\\\\\\\": \\\\\\\"mvp\\\\\\\", \\\\\\\"jen\\\\\\\": \\\\\\\"jen\\\\\\\", \\\\\\\"dzo\\\\\\\": \\\\\\\"dz\\\\\\\", \\\\\\\"idd\\\\\\\": \\\\\\\"idd\\\\\\\", \\\\\\\"eka\\\\\\\": \\\\\\\"eka\\\\\\\", \\\\\\\"cto\\\\\\\": \\\\\\\"cto\\\\\\\", \\\\\\\"emp\\\\\\\": \\\\\\\"emp\\\\\\\", \\\\\\\"enx\\\\\\\": \\\\\\\"enx\\\\\\\", \\\\\\\"sja\\\\\\\": \\\\\\\"sja\\\\\\\", \\\\\\\"myv\\\\\\\": \\\\\\\"myv\\\\\\\", \\\\\\\"mcq\\\\\\\": \\\\\\\"mcq\\\\\\\", \\\\\\\"ese\\\\\\\": \\\\\\\"ese\\\\\\\", \\\\\\\"evn\\\\\\\": \\\\\\\"evn\\\\\\\", \\\\\\\"eza\\\\\\\": \\\\\\\"eza\\\\\\\", \\\\\\\"ewe\\\\\\\": \\\\\\\"ee\\\\\\\", \\\\\\\"fal\\\\\\\": \\\\\\\"fal\\\\\\\", \\\\\\\"fao\\\\\\\": \\\\\\\"fo\\\\\\\", \\\\\\\"far\\\\\\\": \\\\\\\"far\\\\\\\", \\\\\\\"fij\\\\\\\": \\\\\\\"fj\\\\\\\", \\\\\\\"fin\\\\\\\": \\\\\\\"fi\\\\\\\", \\\\\\\"fon\\\\\\\": \\\\\\\"fon\\\\\\\", \\\\\\\"frd\\\\\\\": \\\\\\\"frd\\\\\\\", \\\\\\\"ful\\\\\\\": \\\\\\\"ff\\\\\\\", \\\\\\\"flr\\\\\\\": \\\\\\\"flr\\\\\\\", \\\\\\\"gau\\\\\\\": \\\\\\\"gau\\\\\\\", \\\\\\\"gbk\\\\\\\": \\\\\\\"gbk\\\\\\\", \\\\\\\"gag-script_cyrillic\\\\\\\": \\\\\\\"gag-script_cyrillic\\\\\\\", \\\\\\\"gag-script_latin\\\\\\\": \\\\\\\"gag-script_latin\\\\\\\", \\\\\\\"gbi\\\\\\\": \\\\\\\"gbi\\\\\\\", \\\\\\\"gmv\\\\\\\": \\\\\\\"gmv\\\\\\\", \\\\\\\"lug\\\\\\\": \\\\\\\"lg\\\\\\\", \\\\\\\"pwg\\\\\\\": \\\\\\\"pwg\\\\\\\", \\\\\\\"gbm\\\\\\\": \\\\\\\"gbm\\\\\\\", \\\\\\\"cab\\\\\\\": \\\\\\\"cab\\\\\\\", \\\\\\\"grt\\\\\\\": \\\\\\\"grt\\\\\\\", \\\\\\\"krs\\\\\\\": \\\\\\\"krs\\\\\\\", \\\\\\\"gso\\\\\\\": \\\\\\\"gso\\\\\\\", \\\\\\\"nlg\\\\\\\": \\\\\\\"nlg\\\\\\\", \\\\\\\"gej\\\\\\\": \\\\\\\"gej\\\\\\\", \\\\\\\"gri\\\\\\\": \\\\\\\"gri\\\\\\\", \\\\\\\"kik\\\\\\\": \\\\\\\"ki\\\\\\\", \\\\\\\"acd\\\\\\\": \\\\\\\"acd\\\\\\\", \\\\\\\"glk\\\\\\\": \\\\\\\"glk\\\\\\\", \\\\\\\"gof-script_latin\\\\\\\": \\\\\\\"gof-script_latin\\\\\\\", \\\\\\\"gog\\\\\\\": \\\\\\\"gog\\\\\\\", \\\\\\\"gkn\\\\\\\": \\\\\\\"gkn\\\\\\\", \\\\\\\"wsg\\\\\\\": \\\\\\\"wsg\\\\\\\", \\\\\\\"gjn\\\\\\\": \\\\\\\"gjn\\\\\\\", \\\\\\\"gqr\\\\\\\": \\\\\\\"gqr\\\\\\\", \\\\\\\"gor\\\\\\\": \\\\\\\"gor\\\\\\\", \\\\\\\"gux\\\\\\\": \\\\\\\"gux\\\\\\\", \\\\\\\"gbo\\\\\\\": \\\\\\\"gbo\\\\\\\", \\\\\\\"ell\\\\\\\": \\\\\\\"el\\\\\\\", \\\\\\\"grc\\\\\\\": \\\\\\\"grc\\\\\\\", \\\\\\\"guh\\\\\\\": \\\\\\\"guh\\\\\\\", \\\\\\\"gub\\\\\\\": \\\\\\\"gub\\\\\\\", \\\\\\\"grn\\\\\\\": \\\\\\\"gn\\\\\\\", \\\\\\\"gyr\\\\\\\": \\\\\\\"gyr\\\\\\\", \\\\\\\"guo\\\\\\\": \\\\\\\"guo\\\\\\\", \\\\\\\"gde\\\\\\\": \\\\\\\"gde\\\\\\\", \\\\\\\"guj\\\\\\\": \\\\\\\"gu\\\\\\\", \\\\\\\"gvl\\\\\\\": \\\\\\\"gvl\\\\\\\", \\\\\\\"guk\\\\\\\": \\\\\\\"guk\\\\\\\", \\\\\\\"rub\\\\\\\": \\\\\\\"rub\\\\\\\", \\\\\\\"dah\\\\\\\": \\\\\\\"dah\\\\\\\", \\\\\\\"gwr\\\\\\\": \\\\\\\"gwr\\\\\\\", \\\\\\\"gwi\\\\\\\": \\\\\\\"gwi\\\\\\\", \\\\\\\"hat\\\\\\\": \\\\\\\"ht\\\\\\\", \\\\\\\"hlb\\\\\\\": \\\\\\\"hlb\\\\\\\", \\\\\\\"amf\\\\\\\": \\\\\\\"amf\\\\\\\", \\\\\\\"hag\\\\\\\": \\\\\\\"hag\\\\\\\", \\\\\\\"hnn\\\\\\\": \\\\\\\"hnn\\\\\\\", \\\\\\\"bgc\\\\\\\": \\\\\\\"bgc\\\\\\\", \\\\\\\"had\\\\\\\": \\\\\\\"had\\\\\\\", \\\\\\\"hau\\\\\\\": \\\\\\\"ha\\\\\\\", \\\\\\\"hwc\\\\\\\": \\\\\\\"hwc\\\\\\\", \\\\\\\"hvn\\\\\\\": \\\\\\\"hvn\\\\\\\", \\\\\\\"hay\\\\\\\": \\\\\\\"hay\\\\\\\", \\\\\\\"xed\\\\\\\": \\\\\\\"xed\\\\\\\", \\\\\\\"heb\\\\\\\": \\\\\\\"he\\\\\\\", \\\\\\\"heh\\\\\\\": \\\\\\\"heh\\\\\\\", \\\\\\\"hil\\\\\\\": \\\\\\\"hil\\\\\\\", \\\\\\\"hif\\\\\\\": \\\\\\\"hif\\\\\\\", \\\\\\\"hns\\\\\\\": \\\\\\\"hns\\\\\\\", \\\\\\\"hoc\\\\\\\": \\\\\\\"hoc\\\\\\\", \\\\\\\"hoy\\\\\\\": \\\\\\\"hoy\\\\\\\", \\\\\\\"hus-dialect_westernpotosino\\\\\\\": \\\\\\\"hus-dialect_westernpotosino\\\\\\\", \\\\\\\"hus-dialect_centralveracruz\\\\\\\": \\\\\\\"hus-dialect_centralveracruz\\\\\\\", \\\\\\\"huv\\\\\\\": \\\\\\\"huv\\\\\\\", \\\\\\\"hui\\\\\\\": \\\\\\\"hui\\\\\\\", \\\\\\\"hap\\\\\\\": \\\\\\\"hap\\\\\\\", \\\\\\\"iba\\\\\\\": \\\\\\\"iba\\\\\\\", \\\\\\\"isl\\\\\\\": \\\\\\\"is\\\\\\\", \\\\\\\"dbj\\\\\\\": \\\\\\\"dbj\\\\\\\", \\\\\\\"ifa\\\\\\\": \\\\\\\"ifa\\\\\\\", \\\\\\\"ifb\\\\\\\": \\\\\\\"ifb\\\\\\\", \\\\\\\"ifu\\\\\\\": \\\\\\\"ifu\\\\\\\", \\\\\\\"ifk\\\\\\\": \\\\\\\"ifk\\\\\\\", \\\\\\\"ife\\\\\\\": \\\\\\\"ife\\\\\\\", \\\\\\\"ign\\\\\\\": \\\\\\\"ign\\\\\\\", \\\\\\\"ikk\\\\\\\": \\\\\\\"ikk\\\\\\\", \\\\\\\"iqw\\\\\\\": \\\\\\\"iqw\\\\\\\", \\\\\\\"ilb\\\\\\\": \\\\\\\"ilb\\\\\\\", \\\\\\\"ilo\\\\\\\": \\\\\\\"ilo\\\\\\\", \\\\\\\"imo\\\\\\\": \\\\\\\"imo\\\\\\\", \\\\\\\"inb\\\\\\\": \\\\\\\"inb\\\\\\\", \\\\\\\"ipi\\\\\\\": \\\\\\\"ipi\\\\\\\", \\\\\\\"irk\\\\\\\": \\\\\\\"irk\\\\\\\", \\\\\\\"icr\\\\\\\": \\\\\\\"icr\\\\\\\", \\\\\\\"itv\\\\\\\": \\\\\\\"itv\\\\\\\", \\\\\\\"itl\\\\\\\": \\\\\\\"itl\\\\\\\", \\\\\\\"atg\\\\\\\": \\\\\\\"atg\\\\\\\", \\\\\\\"ixl-dialect_sanjuancotzal\\\\\\\": \\\\\\\"ixl-dialect_sanjuancotzal\\\\\\\", \\\\\\\"ixl-dialect_sangasparchajul\\\\\\\": \\\\\\\"ixl-dialect_sangasparchajul\\\\\\\", \\\\\\\"ixl-dialect_santamarianebaj\\\\\\\": \\\\\\\"ixl-dialect_santamarianebaj\\\\\\\", \\\\\\\"nca\\\\\\\": \\\\\\\"nca\\\\\\\", \\\\\\\"izr\\\\\\\": \\\\\\\"izr\\\\\\\", \\\\\\\"izz\\\\\\\": \\\\\\\"izz\\\\\\\", \\\\\\\"jac\\\\\\\": \\\\\\\"jac\\\\\\\", \\\\\\\"jam\\\\\\\": \\\\\\\"jam\\\\\\\", \\\\\\\"jvn\\\\\\\": \\\\\\\"jvn\\\\\\\", \\\\\\\"kac\\\\\\\": \\\\\\\"kac\\\\\\\", \\\\\\\"dyo\\\\\\\": \\\\\\\"dyo\\\\\\\", \\\\\\\"csk\\\\\\\": \\\\\\\"csk\\\\\\\", \\\\\\\"adh\\\\\\\": \\\\\\\"adh\\\\\\\", \\\\\\\"jun\\\\\\\": \\\\\\\"jun\\\\\\\", \\\\\\\"jbu\\\\\\\": \\\\\\\"jbu\\\\\\\", \\\\\\\"dyu\\\\\\\": \\\\\\\"dyu\\\\\\\", \\\\\\\"bex\\\\\\\": \\\\\\\"bex\\\\\\\", \\\\\\\"juy\\\\\\\": \\\\\\\"juy\\\\\\\", \\\\\\\"gna\\\\\\\": \\\\\\\"gna\\\\\\\", \\\\\\\"urb\\\\\\\": \\\\\\\"urb\\\\\\\", \\\\\\\"kbp\\\\\\\": \\\\\\\"kbp\\\\\\\", \\\\\\\"cwa\\\\\\\": \\\\\\\"cwa\\\\\\\", \\\\\\\"dtp\\\\\\\": \\\\\\\"dtp\\\\\\\", \\\\\\\"kbr\\\\\\\": \\\\\\\"kbr\\\\\\\", \\\\\\\"cgc\\\\\\\": \\\\\\\"cgc\\\\\\\", \\\\\\\"kki\\\\\\\": \\\\\\\"kki\\\\\\\", \\\\\\\"kzf\\\\\\\": \\\\\\\"kzf\\\\\\\", \\\\\\\"lew\\\\\\\": \\\\\\\"lew\\\\\\\", \\\\\\\"cbr\\\\\\\": \\\\\\\"cbr\\\\\\\", \\\\\\\"kkj\\\\\\\": \\\\\\\"kkj\\\\\\\", \\\\\\\"keo\\\\\\\": \\\\\\\"keo\\\\\\\", \\\\\\\"kqe\\\\\\\": \\\\\\\"kqe\\\\\\\", \\\\\\\"kak\\\\\\\": \\\\\\\"kak\\\\\\\", \\\\\\\"kyb\\\\\\\": \\\\\\\"kyb\\\\\\\", \\\\\\\"knb\\\\\\\": \\\\\\\"knb\\\\\\\", \\\\\\\"kmd\\\\\\\": \\\\\\\"kmd\\\\\\\", \\\\\\\"kml\\\\\\\": \\\\\\\"kml\\\\\\\", \\\\\\\"ify\\\\\\\": \\\\\\\"ify\\\\\\\", \\\\\\\"xal\\\\\\\": \\\\\\\"xal\\\\\\\", \\\\\\\"kbq\\\\\\\": \\\\\\\"kbq\\\\\\\", \\\\\\\"kay\\\\\\\": \\\\\\\"kay\\\\\\\", \\\\\\\"ktb\\\\\\\": \\\\\\\"ktb\\\\\\\", \\\\\\\"hig\\\\\\\": \\\\\\\"hig\\\\\\\", \\\\\\\"gam\\\\\\\": \\\\\\\"gam\\\\\\\", \\\\\\\"cbu\\\\\\\": \\\\\\\"cbu\\\\\\\", \\\\\\\"xnr\\\\\\\": \\\\\\\"xnr\\\\\\\", \\\\\\\"kmu\\\\\\\": \\\\\\\"kmu\\\\\\\", \\\\\\\"kne\\\\\\\": \\\\\\\"kne\\\\\\\", \\\\\\\"kan\\\\\\\": \\\\\\\"kn\\\\\\\", \\\\\\\"kby\\\\\\\": \\\\\\\"kby\\\\\\\", \\\\\\\"pam\\\\\\\": \\\\\\\"pam\\\\\\\", \\\\\\\"cak-dialect_santamar\\\\\\\\u00edadejes\\\\\\\\u00fas\\\\\\\": \\\\\\\"cak-dialect_santamar\\\\\\\\u00edadejes\\\\\\\\u00fas\\\\\\\", \\\\\\\"cak-dialect_southcentral\\\\\\\": \\\\\\\"cak-dialect_southcentral\\\\\\\", \\\\\\\"cak-dialect_yepocapa\\\\\\\": \\\\\\\"cak-dialect_yepocapa\\\\\\\", \\\\\\\"cak-dialect_western\\\\\\\": \\\\\\\"cak-dialect_western\\\\\\\", \\\\\\\"cak-dialect_santodomingoxenacoj\\\\\\\": \\\\\\\"cak-dialect_santodomingoxenacoj\\\\\\\", \\\\\\\"cak-dialect_central\\\\\\\": \\\\\\\"cak-dialect_central\\\\\\\", \\\\\\\"xrb\\\\\\\": \\\\\\\"xrb\\\\\\\", \\\\\\\"krc\\\\\\\": \\\\\\\"krc\\\\\\\", \\\\\\\"kaa\\\\\\\": \\\\\\\"kaa\\\\\\\", \\\\\\\"krl\\\\\\\": \\\\\\\"krl\\\\\\\", \\\\\\\"pww\\\\\\\": \\\\\\\"pww\\\\\\\", \\\\\\\"xsm\\\\\\\": \\\\\\\"xsm\\\\\\\", \\\\\\\"cbs\\\\\\\": \\\\\\\"cbs\\\\\\\", \\\\\\\"pss\\\\\\\": \\\\\\\"pss\\\\\\\", \\\\\\\"kxf\\\\\\\": \\\\\\\"kxf\\\\\\\", \\\\\\\"kyz\\\\\\\": \\\\\\\"kyz\\\\\\\", \\\\\\\"kyu\\\\\\\": \\\\\\\"kyu\\\\\\\", \\\\\\\"txu\\\\\\\": \\\\\\\"txu\\\\\\\", \\\\\\\"kaz\\\\\\\": \\\\\\\"kk\\\\\\\", \\\\\\\"ndp\\\\\\\": \\\\\\\"ndp\\\\\\\", \\\\\\\"kbo\\\\\\\": \\\\\\\"kbo\\\\\\\", \\\\\\\"kyq\\\\\\\": \\\\\\\"kyq\\\\\\\", \\\\\\\"ken\\\\\\\": \\\\\\\"ken\\\\\\\", \\\\\\\"ker\\\\\\\": \\\\\\\"ker\\\\\\\", \\\\\\\"xte\\\\\\\": \\\\\\\"xte\\\\\\\", \\\\\\\"kyg\\\\\\\": \\\\\\\"kyg\\\\\\\", \\\\\\\"kjh\\\\\\\": \\\\\\\"kjh\\\\\\\", \\\\\\\"kca\\\\\\\": \\\\\\\"kca\\\\\\\", \\\\\\\"khm\\\\\\\": \\\\\\\"km\\\\\\\", \\\\\\\"kxm\\\\\\\": \\\\\\\"kxm\\\\\\\", \\\\\\\"kjg\\\\\\\": \\\\\\\"kjg\\\\\\\", \\\\\\\"nyf\\\\\\\": \\\\\\\"nyf\\\\\\\", \\\\\\\"kij\\\\\\\": \\\\\\\"kij\\\\\\\", \\\\\\\"kia\\\\\\\": \\\\\\\"kia\\\\\\\", \\\\\\\"kqr\\\\\\\": \\\\\\\"kqr\\\\\\\", \\\\\\\"kqp\\\\\\\": \\\\\\\"kqp\\\\\\\", \\\\\\\"krj\\\\\\\": \\\\\\\"krj\\\\\\\", \\\\\\\"zga\\\\\\\": \\\\\\\"zga\\\\\\\", \\\\\\\"kin\\\\\\\": \\\\\\\"rw\\\\\\\", \\\\\\\"pkb\\\\\\\": \\\\\\\"pkb\\\\\\\", \\\\\\\"geb\\\\\\\": \\\\\\\"geb\\\\\\\", \\\\\\\"gil\\\\\\\": \\\\\\\"gil\\\\\\\", \\\\\\\"kje\\\\\\\": \\\\\\\"kje\\\\\\\", \\\\\\\"kss\\\\\\\": \\\\\\\"kss\\\\\\\", \\\\\\\"thk\\\\\\\": \\\\\\\"thk\\\\\\\", \\\\\\\"klu\\\\\\\": \\\\\\\"klu\\\\\\\", \\\\\\\"kyo\\\\\\\": \\\\\\\"kyo\\\\\\\", \\\\\\\"kog\\\\\\\": \\\\\\\"kog\\\\\\\", \\\\\\\"kfb\\\\\\\": \\\\\\\"kfb\\\\\\\", \\\\\\\"kpv\\\\\\\": \\\\\\\"kpv\\\\\\\", \\\\\\\"bbo\\\\\\\": \\\\\\\"bbo\\\\\\\", \\\\\\\"xon\\\\\\\": \\\\\\\"xon\\\\\\\", \\\\\\\"kma\\\\\\\": \\\\\\\"kma\\\\\\\", \\\\\\\"kno\\\\\\\": \\\\\\\"kno\\\\\\\", \\\\\\\"kxc\\\\\\\": \\\\\\\"kxc\\\\\\\", \\\\\\\"ozm\\\\\\\": \\\\\\\"ozm\\\\\\\", \\\\\\\"kqy\\\\\\\": \\\\\\\"kqy\\\\\\\", \\\\\\\"coe\\\\\\\": \\\\\\\"coe\\\\\\\", \\\\\\\"kpq\\\\\\\": \\\\\\\"kpq\\\\\\\", \\\\\\\"kpy\\\\\\\": \\\\\\\"kpy\\\\\\\", \\\\\\\"kyf\\\\\\\": \\\\\\\"kyf\\\\\\\", \\\\\\\"kff-script_telugu\\\\\\\": \\\\\\\"kff-script_telugu\\\\\\\", \\\\\\\"kri\\\\\\\": \\\\\\\"kri\\\\\\\", \\\\\\\"rop\\\\\\\": \\\\\\\"rop\\\\\\\", \\\\\\\"ktj\\\\\\\": \\\\\\\"ktj\\\\\\\", \\\\\\\"ted\\\\\\\": \\\\\\\"ted\\\\\\\", \\\\\\\"krr\\\\\\\": \\\\\\\"krr\\\\\\\", \\\\\\\"kdt\\\\\\\": \\\\\\\"kdt\\\\\\\", \\\\\\\"kez\\\\\\\": \\\\\\\"kez\\\\\\\", \\\\\\\"cul\\\\\\\": \\\\\\\"cul\\\\\\\", \\\\\\\"kle\\\\\\\": \\\\\\\"kle\\\\\\\", \\\\\\\"kdi\\\\\\\": \\\\\\\"kdi\\\\\\\", \\\\\\\"kue\\\\\\\": \\\\\\\"kue\\\\\\\", \\\\\\\"kum\\\\\\\": \\\\\\\"kum\\\\\\\", \\\\\\\"kvn\\\\\\\": \\\\\\\"kvn\\\\\\\", \\\\\\\"cuk\\\\\\\": \\\\\\\"cuk\\\\\\\", \\\\\\\"kdn\\\\\\\": \\\\\\\"kdn\\\\\\\", \\\\\\\"xuo\\\\\\\": \\\\\\\"xuo\\\\\\\", \\\\\\\"key\\\\\\\": \\\\\\\"key\\\\\\\", \\\\\\\"kpz\\\\\\\": \\\\\\\"kpz\\\\\\\", \\\\\\\"knk\\\\\\\": \\\\\\\"knk\\\\\\\", \\\\\\\"kmr-script_latin\\\\\\\": \\\\\\\"kmr-script_latin\\\\\\\", \\\\\\\"kmr-script_arabic\\\\\\\": \\\\\\\"kmr-script_arabic\\\\\\\", \\\\\\\"kmr-script_cyrillic\\\\\\\": \\\\\\\"kmr-script_cyrillic\\\\\\\", \\\\\\\"xua\\\\\\\": \\\\\\\"xua\\\\\\\", \\\\\\\"kru\\\\\\\": \\\\\\\"kru\\\\\\\", \\\\\\\"kus\\\\\\\": \\\\\\\"kus\\\\\\\", \\\\\\\"kub\\\\\\\": \\\\\\\"kub\\\\\\\", \\\\\\\"kdc\\\\\\\": \\\\\\\"kdc\\\\\\\", \\\\\\\"kxv\\\\\\\": \\\\\\\"kxv\\\\\\\", \\\\\\\"blh\\\\\\\": \\\\\\\"blh\\\\\\\", \\\\\\\"cwt\\\\\\\": \\\\\\\"cwt\\\\\\\", \\\\\\\"kwd\\\\\\\": \\\\\\\"kwd\\\\\\\", \\\\\\\"tnk\\\\\\\": \\\\\\\"tnk\\\\\\\", \\\\\\\"kwf\\\\\\\": \\\\\\\"kwf\\\\\\\", \\\\\\\"cwe\\\\\\\": \\\\\\\"cwe\\\\\\\", \\\\\\\"kyc\\\\\\\": \\\\\\\"kyc\\\\\\\", \\\\\\\"tye\\\\\\\": \\\\\\\"tye\\\\\\\", \\\\\\\"kir\\\\\\\": \\\\\\\"ky\\\\\\\", \\\\\\\"quc-dialect_north\\\\\\\": \\\\\\\"quc-dialect_north\\\\\\\", \\\\\\\"quc-dialect_east\\\\\\\": \\\\\\\"quc-dialect_east\\\\\\\", \\\\\\\"quc-dialect_central\\\\\\\": \\\\\\\"quc-dialect_central\\\\\\\", \\\\\\\"lac\\\\\\\": \\\\\\\"lac\\\\\\\", \\\\\\\"lsi\\\\\\\": \\\\\\\"lsi\\\\\\\", \\\\\\\"lbj\\\\\\\": \\\\\\\"lbj\\\\\\\", \\\\\\\"lhu\\\\\\\": \\\\\\\"lhu\\\\\\\", \\\\\\\"las\\\\\\\": \\\\\\\"las\\\\\\\", \\\\\\\"lam\\\\\\\": \\\\\\\"lam\\\\\\\", \\\\\\\"lns\\\\\\\": \\\\\\\"lns\\\\\\\", \\\\\\\"ljp\\\\\\\": \\\\\\\"ljp\\\\\\\", \\\\\\\"laj\\\\\\\": \\\\\\\"laj\\\\\\\", \\\\\\\"lao\\\\\\\": \\\\\\\"lo\\\\\\\", \\\\\\\"lat\\\\\\\": \\\\\\\"la\\\\\\\", \\\\\\\"lav\\\\\\\": \\\\\\\"lv\\\\\\\", \\\\\\\"law\\\\\\\": \\\\\\\"law\\\\\\\", \\\\\\\"lcp\\\\\\\": \\\\\\\"lcp\\\\\\\", \\\\\\\"lzz\\\\\\\": \\\\\\\"lzz\\\\\\\", \\\\\\\"lln\\\\\\\": \\\\\\\"lln\\\\\\\", \\\\\\\"lef\\\\\\\": \\\\\\\"lef\\\\\\\", \\\\\\\"acf\\\\\\\": \\\\\\\"acf\\\\\\\", \\\\\\\"lww\\\\\\\": \\\\\\\"lww\\\\\\\", \\\\\\\"mhx\\\\\\\": \\\\\\\"mhx\\\\\\\", \\\\\\\"eip\\\\\\\": \\\\\\\"eip\\\\\\\", \\\\\\\"lia\\\\\\\": \\\\\\\"lia\\\\\\\", \\\\\\\"lif\\\\\\\": \\\\\\\"lif\\\\\\\", \\\\\\\"onb\\\\\\\": \\\\\\\"onb\\\\\\\", \\\\\\\"lis\\\\\\\": \\\\\\\"lis\\\\\\\", \\\\\\\"loq\\\\\\\": \\\\\\\"loq\\\\\\\", \\\\\\\"lob\\\\\\\": \\\\\\\"lob\\\\\\\", \\\\\\\"yaz\\\\\\\": \\\\\\\"yaz\\\\\\\", \\\\\\\"lok\\\\\\\": \\\\\\\"lok\\\\\\\", \\\\\\\"llg\\\\\\\": \\\\\\\"llg\\\\\\\", \\\\\\\"ycl\\\\\\\": \\\\\\\"ycl\\\\\\\", \\\\\\\"lom\\\\\\\": \\\\\\\"lom\\\\\\\", \\\\\\\"ngl\\\\\\\": \\\\\\\"ngl\\\\\\\", \\\\\\\"lon\\\\\\\": \\\\\\\"lon\\\\\\\", \\\\\\\"lex\\\\\\\": \\\\\\\"lex\\\\\\\", \\\\\\\"lgg\\\\\\\": \\\\\\\"lgg\\\\\\\", \\\\\\\"ruf\\\\\\\": \\\\\\\"ruf\\\\\\\", \\\\\\\"dop\\\\\\\": \\\\\\\"dop\\\\\\\", \\\\\\\"lnd\\\\\\\": \\\\\\\"lnd\\\\\\\", \\\\\\\"ndy\\\\\\\": \\\\\\\"ndy\\\\\\\", \\\\\\\"lwo\\\\\\\": \\\\\\\"lwo\\\\\\\", \\\\\\\"lee\\\\\\\": \\\\\\\"lee\\\\\\\", \\\\\\\"mev\\\\\\\": \\\\\\\"mev\\\\\\\", \\\\\\\"mfz\\\\\\\": \\\\\\\"mfz\\\\\\\", \\\\\\\"jmc\\\\\\\": \\\\\\\"jmc\\\\\\\", \\\\\\\"myy\\\\\\\": \\\\\\\"myy\\\\\\\", \\\\\\\"mbc\\\\\\\": \\\\\\\"mbc\\\\\\\", \\\\\\\"mda\\\\\\\": \\\\\\\"mda\\\\\\\", \\\\\\\"mad\\\\\\\": \\\\\\\"mad\\\\\\\", \\\\\\\"mag\\\\\\\": \\\\\\\"mag\\\\\\\", \\\\\\\"ayz\\\\\\\": \\\\\\\"ayz\\\\\\\", \\\\\\\"mai\\\\\\\": \\\\\\\"mai\\\\\\\", \\\\\\\"mca\\\\\\\": \\\\\\\"mca\\\\\\\", \\\\\\\"mcp\\\\\\\": \\\\\\\"mcp\\\\\\\", \\\\\\\"mak\\\\\\\": \\\\\\\"mak\\\\\\\", \\\\\\\"vmw\\\\\\\": \\\\\\\"vmw\\\\\\\", \\\\\\\"mgh\\\\\\\": \\\\\\\"mgh\\\\\\\", \\\\\\\"kde\\\\\\\": \\\\\\\"kde\\\\\\\", \\\\\\\"mlg\\\\\\\": \\\\\\\"mg\\\\\\\", \\\\\\\"zlm\\\\\\\": \\\\\\\"zlm\\\\\\\", \\\\\\\"pse\\\\\\\": \\\\\\\"pse\\\\\\\", \\\\\\\"mkn\\\\\\\": \\\\\\\"mkn\\\\\\\", \\\\\\\"xmm\\\\\\\": \\\\\\\"xmm\\\\\\\", \\\\\\\"mal\\\\\\\": \\\\\\\"ml\\\\\\\", \\\\\\\"xdy\\\\\\\": \\\\\\\"xdy\\\\\\\", \\\\\\\"div\\\\\\\": \\\\\\\"dv\\\\\\\", \\\\\\\"mdy\\\\\\\": \\\\\\\"mdy\\\\\\\", \\\\\\\"mup\\\\\\\": \\\\\\\"mup\\\\\\\", \\\\\\\"mam-dialect_central\\\\\\\": \\\\\\\"mam-dialect_central\\\\\\\", \\\\\\\"mam-dialect_northern\\\\\\\": \\\\\\\"mam-dialect_northern\\\\\\\", \\\\\\\"mam-dialect_southern\\\\\\\": \\\\\\\"mam-dialect_southern\\\\\\\", \\\\\\\"mam-dialect_western\\\\\\\": \\\\\\\"mam-dialect_western\\\\\\\", \\\\\\\"mqj\\\\\\\": \\\\\\\"mqj\\\\\\\", \\\\\\\"mcu\\\\\\\": \\\\\\\"mcu\\\\\\\", \\\\\\\"mzk\\\\\\\": \\\\\\\"mzk\\\\\\\", \\\\\\\"maw\\\\\\\": \\\\\\\"maw\\\\\\\", \\\\\\\"mjl\\\\\\\": \\\\\\\"mjl\\\\\\\", \\\\\\\"mnk\\\\\\\": \\\\\\\"mnk\\\\\\\", \\\\\\\"mge\\\\\\\": \\\\\\\"mge\\\\\\\", \\\\\\\"mbh\\\\\\\": \\\\\\\"mbh\\\\\\\", \\\\\\\"knf\\\\\\\": \\\\\\\"knf\\\\\\\", \\\\\\\"mjv\\\\\\\": \\\\\\\"mjv\\\\\\\", \\\\\\\"mbt\\\\\\\": \\\\\\\"mbt\\\\\\\", \\\\\\\"obo\\\\\\\": \\\\\\\"obo\\\\\\\", \\\\\\\"mbb\\\\\\\": \\\\\\\"mbb\\\\\\\", \\\\\\\"mzj\\\\\\\": \\\\\\\"mzj\\\\\\\", \\\\\\\"nld\\\\\\\": \\\\\\\"nld\\\\\\\", \\\\\\\"sjm\\\\\\\": \\\\\\\"sjm\\\\\\\", \\\\\\\"mrw\\\\\\\": \\\\\\\"mrw\\\\\\\", \\\\\\\"mar\\\\\\\": \\\\\\\"mr\\\\\\\", \\\\\\\"mpg\\\\\\\": \\\\\\\"mpg\\\\\\\", \\\\\\\"mhr\\\\\\\": \\\\\\\"mhr\\\\\\\", \\\\\\\"enb\\\\\\\": \\\\\\\"enb\\\\\\\", \\\\\\\"mah\\\\\\\": \\\\\\\"mh\\\\\\\", \\\\\\\"myx\\\\\\\": \\\\\\\"myx\\\\\\\", \\\\\\\"klv\\\\\\\": \\\\\\\"klv\\\\\\\", \\\\\\\"mfh\\\\\\\": \\\\\\\"mfh\\\\\\\", \\\\\\\"met\\\\\\\": \\\\\\\"met\\\\\\\", \\\\\\\"mcb\\\\\\\": \\\\\\\"mcb\\\\\\\", \\\\\\\"mop\\\\\\\": \\\\\\\"mop\\\\\\\", \\\\\\\"yua\\\\\\\": \\\\\\\"yua\\\\\\\", \\\\\\\"mfy\\\\\\\": \\\\\\\"mfy\\\\\\\", \\\\\\\"maz\\\\\\\": \\\\\\\"maz\\\\\\\", \\\\\\\"vmy\\\\\\\": \\\\\\\"vmy\\\\\\\", \\\\\\\"maq\\\\\\\": \\\\\\\"maq\\\\\\\", \\\\\\\"mzi\\\\\\\": \\\\\\\"mzi\\\\\\\", \\\\\\\"maj\\\\\\\": \\\\\\\"maj\\\\\\\", \\\\\\\"maa-dialect_sanantonio\\\\\\\": \\\\\\\"maa-dialect_sanantonio\\\\\\\", \\\\\\\"maa-dialect_sanjer\\\\\\\\u00f3nimo\\\\\\\": \\\\\\\"maa-dialect_sanjer\\\\\\\\u00f3nimo\\\\\\\", \\\\\\\"mhy\\\\\\\": \\\\\\\"mhy\\\\\\\", \\\\\\\"mhi\\\\\\\": \\\\\\\"mhi\\\\\\\", \\\\\\\"zmz\\\\\\\": \\\\\\\"zmz\\\\\\\", \\\\\\\"myb\\\\\\\": \\\\\\\"myb\\\\\\\", \\\\\\\"gai\\\\\\\": \\\\\\\"gai\\\\\\\", \\\\\\\"mqb\\\\\\\": \\\\\\\"mqb\\\\\\\", \\\\\\\"mbu\\\\\\\": \\\\\\\"mbu\\\\\\\", \\\\\\\"med\\\\\\\": \\\\\\\"med\\\\\\\", \\\\\\\"men\\\\\\\": \\\\\\\"men\\\\\\\", \\\\\\\"mee\\\\\\\": \\\\\\\"mee\\\\\\\", \\\\\\\"mwv\\\\\\\": \\\\\\\"mwv\\\\\\\", \\\\\\\"meq\\\\\\\": \\\\\\\"meq\\\\\\\", \\\\\\\"zim\\\\\\\": \\\\\\\"zim\\\\\\\", \\\\\\\"mgo\\\\\\\": \\\\\\\"mgo\\\\\\\", \\\\\\\"mej\\\\\\\": \\\\\\\"mej\\\\\\\", \\\\\\\"mpp\\\\\\\": \\\\\\\"mpp\\\\\\\", \\\\\\\"min\\\\\\\": \\\\\\\"min\\\\\\\", \\\\\\\"gum\\\\\\\": \\\\\\\"gum\\\\\\\", \\\\\\\"mpx\\\\\\\": \\\\\\\"mpx\\\\\\\", \\\\\\\"mco\\\\\\\": \\\\\\\"mco\\\\\\\", \\\\\\\"mxq\\\\\\\": \\\\\\\"mxq\\\\\\\", \\\\\\\"pxm\\\\\\\": \\\\\\\"pxm\\\\\\\", \\\\\\\"mto\\\\\\\": \\\\\\\"mto\\\\\\\", \\\\\\\"mim\\\\\\\": \\\\\\\"mim\\\\\\\", \\\\\\\"xta\\\\\\\": \\\\\\\"xta\\\\\\\", \\\\\\\"mbz\\\\\\\": \\\\\\\"mbz\\\\\\\", \\\\\\\"mip\\\\\\\": \\\\\\\"mip\\\\\\\", \\\\\\\"mib\\\\\\\": \\\\\\\"mib\\\\\\\", \\\\\\\"miy\\\\\\\": \\\\\\\"miy\\\\\\\", \\\\\\\"mih\\\\\\\": \\\\\\\"mih\\\\\\\", \\\\\\\"miz\\\\\\\": \\\\\\\"miz\\\\\\\", \\\\\\\"xtd\\\\\\\": \\\\\\\"xtd\\\\\\\", \\\\\\\"mxt\\\\\\\": \\\\\\\"mxt\\\\\\\", \\\\\\\"xtm\\\\\\\": \\\\\\\"xtm\\\\\\\", \\\\\\\"mxv\\\\\\\": \\\\\\\"mxv\\\\\\\", \\\\\\\"xtn\\\\\\\": \\\\\\\"xtn\\\\\\\", \\\\\\\"mie\\\\\\\": \\\\\\\"mie\\\\\\\", \\\\\\\"mil\\\\\\\": \\\\\\\"mil\\\\\\\", \\\\\\\"mio\\\\\\\": \\\\\\\"mio\\\\\\\", \\\\\\\"mdv\\\\\\\": \\\\\\\"mdv\\\\\\\", \\\\\\\"mza\\\\\\\": \\\\\\\"mza\\\\\\\", \\\\\\\"mit\\\\\\\": \\\\\\\"mit\\\\\\\", \\\\\\\"mxb\\\\\\\": \\\\\\\"mxb\\\\\\\", \\\\\\\"mpm\\\\\\\": \\\\\\\"mpm\\\\\\\", \\\\\\\"soy\\\\\\\": \\\\\\\"soy\\\\\\\", \\\\\\\"cmo-script_latin\\\\\\\": \\\\\\\"cmo-script_latin\\\\\\\", \\\\\\\"cmo-script_khmer\\\\\\\": \\\\\\\"cmo-script_khmer\\\\\\\", \\\\\\\"mfq\\\\\\\": \\\\\\\"mfq\\\\\\\", \\\\\\\"old\\\\\\\": \\\\\\\"old\\\\\\\", \\\\\\\"mfk\\\\\\\": \\\\\\\"mfk\\\\\\\", \\\\\\\"mif\\\\\\\": \\\\\\\"mif\\\\\\\", \\\\\\\"mkl\\\\\\\": \\\\\\\"mkl\\\\\\\", \\\\\\\"mox\\\\\\\": \\\\\\\"mox\\\\\\\", \\\\\\\"myl\\\\\\\": \\\\\\\"myl\\\\\\\", \\\\\\\"mqf\\\\\\\": \\\\\\\"mqf\\\\\\\", \\\\\\\"mnw\\\\\\\": \\\\\\\"mnw\\\\\\\", \\\\\\\"mon\\\\\\\": \\\\\\\"mn\\\\\\\", \\\\\\\"mog\\\\\\\": \\\\\\\"mog\\\\\\\", \\\\\\\"mfe\\\\\\\": \\\\\\\"mfe\\\\\\\", \\\\\\\"mor\\\\\\\": \\\\\\\"mor\\\\\\\", \\\\\\\"mqn\\\\\\\": \\\\\\\"mqn\\\\\\\", \\\\\\\"mgd\\\\\\\": \\\\\\\"mgd\\\\\\\", \\\\\\\"mtj\\\\\\\": \\\\\\\"mtj\\\\\\\", \\\\\\\"cmr\\\\\\\": \\\\\\\"cmr\\\\\\\", \\\\\\\"mtd\\\\\\\": \\\\\\\"mtd\\\\\\\", \\\\\\\"bmr\\\\\\\": \\\\\\\"bmr\\\\\\\", \\\\\\\"moz\\\\\\\": \\\\\\\"moz\\\\\\\", \\\\\\\"mzm\\\\\\\": \\\\\\\"mzm\\\\\\\", \\\\\\\"mnb\\\\\\\": \\\\\\\"mnb\\\\\\\", \\\\\\\"mnf\\\\\\\": \\\\\\\"mnf\\\\\\\", \\\\\\\"unr\\\\\\\": \\\\\\\"unr\\\\\\\", \\\\\\\"fmu\\\\\\\": \\\\\\\"fmu\\\\\\\", \\\\\\\"mur\\\\\\\": \\\\\\\"mur\\\\\\\", \\\\\\\"tih\\\\\\\": \\\\\\\"tih\\\\\\\", \\\\\\\"muv\\\\\\\": \\\\\\\"muv\\\\\\\", \\\\\\\"muy\\\\\\\": \\\\\\\"muy\\\\\\\", \\\\\\\"sur\\\\\\\": \\\\\\\"sur\\\\\\\", \\\\\\\"moa\\\\\\\": \\\\\\\"moa\\\\\\\", \\\\\\\"wmw\\\\\\\": \\\\\\\"wmw\\\\\\\", \\\\\\\"tnr\\\\\\\": \\\\\\\"tnr\\\\\\\", \\\\\\\"miq\\\\\\\": \\\\\\\"miq\\\\\\\", \\\\\\\"mos\\\\\\\": \\\\\\\"mos\\\\\\\", \\\\\\\"muh\\\\\\\": \\\\\\\"muh\\\\\\\", \\\\\\\"nas\\\\\\\": \\\\\\\"nas\\\\\\\", \\\\\\\"mbj\\\\\\\": \\\\\\\"mbj\\\\\\\", \\\\\\\"nfr\\\\\\\": \\\\\\\"nfr\\\\\\\", \\\\\\\"kfw\\\\\\\": \\\\\\\"kfw\\\\\\\", \\\\\\\"nst\\\\\\\": \\\\\\\"nst\\\\\\\", \\\\\\\"nag\\\\\\\": \\\\\\\"nag\\\\\\\", \\\\\\\"nch\\\\\\\": \\\\\\\"nch\\\\\\\", \\\\\\\"nhe\\\\\\\": \\\\\\\"nhe\\\\\\\", \\\\\\\"ngu\\\\\\\": \\\\\\\"ngu\\\\\\\", \\\\\\\"azz\\\\\\\": \\\\\\\"azz\\\\\\\", \\\\\\\"nhx\\\\\\\": \\\\\\\"nhx\\\\\\\", \\\\\\\"ncl\\\\\\\": \\\\\\\"ncl\\\\\\\", \\\\\\\"nhy\\\\\\\": \\\\\\\"nhy\\\\\\\", \\\\\\\"ncj\\\\\\\": \\\\\\\"ncj\\\\\\\", \\\\\\\"nsu\\\\\\\": \\\\\\\"nsu\\\\\\\", \\\\\\\"npl\\\\\\\": \\\\\\\"npl\\\\\\\", \\\\\\\"nuz\\\\\\\": \\\\\\\"nuz\\\\\\\", \\\\\\\"nhw\\\\\\\": \\\\\\\"nhw\\\\\\\", \\\\\\\"nhi\\\\\\\": \\\\\\\"nhi\\\\\\\", \\\\\\\"nlc\\\\\\\": \\\\\\\"nlc\\\\\\\", \\\\\\\"nab\\\\\\\": \\\\\\\"nab\\\\\\\", \\\\\\\"gld\\\\\\\": \\\\\\\"gld\\\\\\\", \\\\\\\"nnb\\\\\\\": \\\\\\\"nnb\\\\\\\", \\\\\\\"npy\\\\\\\": \\\\\\\"npy\\\\\\\", \\\\\\\"pbb\\\\\\\": \\\\\\\"pbb\\\\\\\", \\\\\\\"ntm\\\\\\\": \\\\\\\"ntm\\\\\\\", \\\\\\\"nmz\\\\\\\": \\\\\\\"nmz\\\\\\\", \\\\\\\"naw\\\\\\\": \\\\\\\"naw\\\\\\\", \\\\\\\"nxq\\\\\\\": \\\\\\\"nxq\\\\\\\", \\\\\\\"ndj\\\\\\\": \\\\\\\"ndj\\\\\\\", \\\\\\\"ndz\\\\\\\": \\\\\\\"ndz\\\\\\\", \\\\\\\"ndv\\\\\\\": \\\\\\\"ndv\\\\\\\", \\\\\\\"new\\\\\\\": \\\\\\\"new\\\\\\\", \\\\\\\"nij\\\\\\\": \\\\\\\"nij\\\\\\\", \\\\\\\"sba\\\\\\\": \\\\\\\"sba\\\\\\\", \\\\\\\"gng\\\\\\\": \\\\\\\"gng\\\\\\\", \\\\\\\"nga\\\\\\\": \\\\\\\"nga\\\\\\\", \\\\\\\"nnq\\\\\\\": \\\\\\\"nnq\\\\\\\", \\\\\\\"ngp\\\\\\\": \\\\\\\"ngp\\\\\\\", \\\\\\\"gym\\\\\\\": \\\\\\\"gym\\\\\\\", \\\\\\\"kdj\\\\\\\": \\\\\\\"kdj\\\\\\\", \\\\\\\"nia\\\\\\\": \\\\\\\"nia\\\\\\\", \\\\\\\"nim\\\\\\\": \\\\\\\"nim\\\\\\\", \\\\\\\"nin\\\\\\\": \\\\\\\"nin\\\\\\\", \\\\\\\"nko\\\\\\\": \\\\\\\"nko\\\\\\\", \\\\\\\"nog\\\\\\\": \\\\\\\"nog\\\\\\\", \\\\\\\"lem\\\\\\\": \\\\\\\"lem\\\\\\\", \\\\\\\"not\\\\\\\": \\\\\\\"not\\\\\\\", \\\\\\\"nhu\\\\\\\": \\\\\\\"nhu\\\\\\\", \\\\\\\"nob\\\\\\\": \\\\\\\"nb\\\\\\\", \\\\\\\"bud\\\\\\\": \\\\\\\"bud\\\\\\\", \\\\\\\"nus\\\\\\\": \\\\\\\"nus\\\\\\\", \\\\\\\"yas\\\\\\\": \\\\\\\"yas\\\\\\\", \\\\\\\"nnw\\\\\\\": \\\\\\\"nnw\\\\\\\", \\\\\\\"nwb\\\\\\\": \\\\\\\"nwb\\\\\\\", \\\\\\\"nyy\\\\\\\": \\\\\\\"nyy\\\\\\\", \\\\\\\"nyn\\\\\\\": \\\\\\\"nyn\\\\\\\", \\\\\\\"rim\\\\\\\": \\\\\\\"rim\\\\\\\", \\\\\\\"lid\\\\\\\": \\\\\\\"lid\\\\\\\", \\\\\\\"nuj\\\\\\\": \\\\\\\"nuj\\\\\\\", \\\\\\\"nyo\\\\\\\": \\\\\\\"nyo\\\\\\\", \\\\\\\"nzi\\\\\\\": \\\\\\\"nzi\\\\\\\", \\\\\\\"ann\\\\\\\": \\\\\\\"ann\\\\\\\", \\\\\\\"ory\\\\\\\": \\\\\\\"ory\\\\\\\", \\\\\\\"ojb-script_latin\\\\\\\": \\\\\\\"ojb-script_latin\\\\\\\", \\\\\\\"ojb-script_syllabics\\\\\\\": \\\\\\\"ojb-script_syllabics\\\\\\\", \\\\\\\"oku\\\\\\\": \\\\\\\"oku\\\\\\\", \\\\\\\"bsc\\\\\\\": \\\\\\\"bsc\\\\\\\", \\\\\\\"bdu\\\\\\\": \\\\\\\"bdu\\\\\\\", \\\\\\\"orm\\\\\\\": \\\\\\\"om\\\\\\\", \\\\\\\"ury\\\\\\\": \\\\\\\"ury\\\\\\\", \\\\\\\"oss\\\\\\\": \\\\\\\"os\\\\\\\", \\\\\\\"ote\\\\\\\": \\\\\\\"ote\\\\\\\", \\\\\\\"otq\\\\\\\": \\\\\\\"otq\\\\\\\", \\\\\\\"stn\\\\\\\": \\\\\\\"stn\\\\\\\", \\\\\\\"sig\\\\\\\": \\\\\\\"sig\\\\\\\", \\\\\\\"kfx\\\\\\\": \\\\\\\"kfx\\\\\\\", \\\\\\\"bfz\\\\\\\": \\\\\\\"bfz\\\\\\\", \\\\\\\"sey\\\\\\\": \\\\\\\"sey\\\\\\\", \\\\\\\"pao\\\\\\\": \\\\\\\"pao\\\\\\\", \\\\\\\"pau\\\\\\\": \\\\\\\"pau\\\\\\\", \\\\\\\"pce\\\\\\\": \\\\\\\"pce\\\\\\\", \\\\\\\"plw\\\\\\\": \\\\\\\"plw\\\\\\\", \\\\\\\"pmf\\\\\\\": \\\\\\\"pmf\\\\\\\", \\\\\\\"pag\\\\\\\": \\\\\\\"pag\\\\\\\", \\\\\\\"pap\\\\\\\": \\\\\\\"pap\\\\\\\", \\\\\\\"prf\\\\\\\": \\\\\\\"prf\\\\\\\", \\\\\\\"pab\\\\\\\": \\\\\\\"pab\\\\\\\", \\\\\\\"pbi\\\\\\\": \\\\\\\"pbi\\\\\\\", \\\\\\\"pbc\\\\\\\": \\\\\\\"pbc\\\\\\\", \\\\\\\"pad\\\\\\\": \\\\\\\"pad\\\\\\\", \\\\\\\"ata\\\\\\\": \\\\\\\"ata\\\\\\\", \\\\\\\"pez\\\\\\\": \\\\\\\"pez\\\\\\\", \\\\\\\"peg\\\\\\\": \\\\\\\"peg\\\\\\\", \\\\\\\"pcm\\\\\\\": \\\\\\\"pcm\\\\\\\", \\\\\\\"pis\\\\\\\": \\\\\\\"pis\\\\\\\", \\\\\\\"pny\\\\\\\": \\\\\\\"pny\\\\\\\", \\\\\\\"pir\\\\\\\": \\\\\\\"pir\\\\\\\", \\\\\\\"pjt\\\\\\\": \\\\\\\"pjt\\\\\\\", \\\\\\\"poy\\\\\\\": \\\\\\\"poy\\\\\\\", \\\\\\\"pps\\\\\\\": \\\\\\\"pps\\\\\\\", \\\\\\\"pls\\\\\\\": \\\\\\\"pls\\\\\\\", \\\\\\\"poi\\\\\\\": \\\\\\\"poi\\\\\\\", \\\\\\\"poh-dialect_eastern\\\\\\\": \\\\\\\"poh-dialect_eastern\\\\\\\", \\\\\\\"poh-dialect_western\\\\\\\": \\\\\\\"poh-dialect_western\\\\\\\", \\\\\\\"prt\\\\\\\": \\\\\\\"prt\\\\\\\", \\\\\\\"pui\\\\\\\": \\\\\\\"pui\\\\\\\", \\\\\\\"pan\\\\\\\": \\\\\\\"pa\\\\\\\", \\\\\\\"tsz\\\\\\\": \\\\\\\"tsz\\\\\\\", \\\\\\\"suv\\\\\\\": \\\\\\\"suv\\\\\\\", \\\\\\\"lme\\\\\\\": \\\\\\\"lme\\\\\\\", \\\\\\\"quy\\\\\\\": \\\\\\\"quy\\\\\\\", \\\\\\\"qvc\\\\\\\": \\\\\\\"qvc\\\\\\\", \\\\\\\"quz\\\\\\\": \\\\\\\"quz\\\\\\\", \\\\\\\"qve\\\\\\\": \\\\\\\"qve\\\\\\\", \\\\\\\"qub\\\\\\\": \\\\\\\"qub\\\\\\\", \\\\\\\"qvh\\\\\\\": \\\\\\\"qvh\\\\\\\", \\\\\\\"qwh\\\\\\\": \\\\\\\"qwh\\\\\\\", \\\\\\\"qvw\\\\\\\": \\\\\\\"qvw\\\\\\\", \\\\\\\"quf\\\\\\\": \\\\\\\"quf\\\\\\\", \\\\\\\"qvm\\\\\\\": \\\\\\\"qvm\\\\\\\", \\\\\\\"qul\\\\\\\": \\\\\\\"qul\\\\\\\", \\\\\\\"qvn\\\\\\\": \\\\\\\"qvn\\\\\\\", \\\\\\\"qxn\\\\\\\": \\\\\\\"qxn\\\\\\\", \\\\\\\"qxh\\\\\\\": \\\\\\\"qxh\\\\\\\", \\\\\\\"qvs\\\\\\\": \\\\\\\"qvs\\\\\\\", \\\\\\\"quh\\\\\\\": \\\\\\\"quh\\\\\\\", \\\\\\\"qxo\\\\\\\": \\\\\\\"qxo\\\\\\\", \\\\\\\"qxr\\\\\\\": \\\\\\\"qxr\\\\\\\", \\\\\\\"qvo\\\\\\\": \\\\\\\"qvo\\\\\\\", \\\\\\\"qvz\\\\\\\": \\\\\\\"qvz\\\\\\\", \\\\\\\"qxl\\\\\\\": \\\\\\\"qxl\\\\\\\", \\\\\\\"quw\\\\\\\": \\\\\\\"quw\\\\\\\", \\\\\\\"kjb\\\\\\\": \\\\\\\"kjb\\\\\\\", \\\\\\\"kek\\\\\\\": \\\\\\\"kek\\\\\\\", \\\\\\\"rah\\\\\\\": \\\\\\\"rah\\\\\\\", \\\\\\\"rjs\\\\\\\": \\\\\\\"rjs\\\\\\\", \\\\\\\"rai\\\\\\\": \\\\\\\"rai\\\\\\\", \\\\\\\"lje\\\\\\\": \\\\\\\"lje\\\\\\\", \\\\\\\"rnl\\\\\\\": \\\\\\\"rnl\\\\\\\", \\\\\\\"rkt\\\\\\\": \\\\\\\"rkt\\\\\\\", \\\\\\\"rap\\\\\\\": \\\\\\\"rap\\\\\\\", \\\\\\\"yea\\\\\\\": \\\\\\\"yea\\\\\\\", \\\\\\\"raw\\\\\\\": \\\\\\\"raw\\\\\\\", \\\\\\\"rej\\\\\\\": \\\\\\\"rej\\\\\\\", \\\\\\\"rel\\\\\\\": \\\\\\\"rel\\\\\\\", \\\\\\\"ril\\\\\\\": \\\\\\\"ril\\\\\\\", \\\\\\\"iri\\\\\\\": \\\\\\\"iri\\\\\\\", \\\\\\\"rgu\\\\\\\": \\\\\\\"rgu\\\\\\\", \\\\\\\"rhg\\\\\\\": \\\\\\\"rhg\\\\\\\", \\\\\\\"rmc-script_latin\\\\\\\": \\\\\\\"rmc-script_latin\\\\\\\", \\\\\\\"rmc-script_cyrillic\\\\\\\": \\\\\\\"rmc-script_cyrillic\\\\\\\", \\\\\\\"rmo\\\\\\\": \\\\\\\"rmo\\\\\\\", \\\\\\\"rmy-script_latin\\\\\\\": \\\\\\\"rmy-script_latin\\\\\\\", \\\\\\\"rmy-script_cyrillic\\\\\\\": \\\\\\\"rmy-script_cyrillic\\\\\\\", \\\\\\\"ron\\\\\\\": \\\\\\\"ro\\\\\\\", \\\\\\\"rol\\\\\\\": \\\\\\\"rol\\\\\\\", \\\\\\\"cla\\\\\\\": \\\\\\\"cla\\\\\\\", \\\\\\\"rng\\\\\\\": \\\\\\\"rng\\\\\\\", \\\\\\\"rug\\\\\\\": \\\\\\\"rug\\\\\\\", \\\\\\\"run\\\\\\\": \\\\\\\"rn\\\\\\\", \\\\\\\"lsm\\\\\\\": \\\\\\\"lsm\\\\\\\", \\\\\\\"spy\\\\\\\": \\\\\\\"spy\\\\\\\", \\\\\\\"sck\\\\\\\": \\\\\\\"sck\\\\\\\", \\\\\\\"saj\\\\\\\": \\\\\\\"saj\\\\\\\", \\\\\\\"sch\\\\\\\": \\\\\\\"sch\\\\\\\", \\\\\\\"sml\\\\\\\": \\\\\\\"sml\\\\\\\", \\\\\\\"xsb\\\\\\\": \\\\\\\"xsb\\\\\\\", \\\\\\\"sbl\\\\\\\": \\\\\\\"sbl\\\\\\\", \\\\\\\"saq\\\\\\\": \\\\\\\"saq\\\\\\\", \\\\\\\"sbd\\\\\\\": \\\\\\\"sbd\\\\\\\", \\\\\\\"smo\\\\\\\": \\\\\\\"sm\\\\\\\", \\\\\\\"rav\\\\\\\": \\\\\\\"rav\\\\\\\", \\\\\\\"sxn\\\\\\\": \\\\\\\"sxn\\\\\\\", \\\\\\\"sag\\\\\\\": \\\\\\\"sg\\\\\\\", \\\\\\\"sbp\\\\\\\": \\\\\\\"sbp\\\\\\\", \\\\\\\"xsu\\\\\\\": \\\\\\\"xsu\\\\\\\", \\\\\\\"srm\\\\\\\": \\\\\\\"srm\\\\\\\", \\\\\\\"sas\\\\\\\": \\\\\\\"sas\\\\\\\", \\\\\\\"apb\\\\\\\": \\\\\\\"apb\\\\\\\", \\\\\\\"sgw\\\\\\\": \\\\\\\"sgw\\\\\\\", \\\\\\\"tvw\\\\\\\": \\\\\\\"tvw\\\\\\\", \\\\\\\"lip\\\\\\\": \\\\\\\"lip\\\\\\\", \\\\\\\"slu\\\\\\\": \\\\\\\"slu\\\\\\\", \\\\\\\"snw\\\\\\\": \\\\\\\"snw\\\\\\\", \\\\\\\"sea\\\\\\\": \\\\\\\"sea\\\\\\\", \\\\\\\"sza\\\\\\\": \\\\\\\"sza\\\\\\\", \\\\\\\"seh\\\\\\\": \\\\\\\"seh\\\\\\\", \\\\\\\"crs\\\\\\\": \\\\\\\"crs\\\\\\\", \\\\\\\"ksb\\\\\\\": \\\\\\\"ksb\\\\\\\", \\\\\\\"shn\\\\\\\": \\\\\\\"shn\\\\\\\", \\\\\\\"sho\\\\\\\": \\\\\\\"sho\\\\\\\", \\\\\\\"mcd\\\\\\\": \\\\\\\"mcd\\\\\\\", \\\\\\\"cbt\\\\\\\": \\\\\\\"cbt\\\\\\\", \\\\\\\"xsr\\\\\\\": \\\\\\\"xsr\\\\\\\", \\\\\\\"shk\\\\\\\": \\\\\\\"shk\\\\\\\", \\\\\\\"shp\\\\\\\": \\\\\\\"shp\\\\\\\", \\\\\\\"sna\\\\\\\": \\\\\\\"sn\\\\\\\", \\\\\\\"cjs\\\\\\\": \\\\\\\"cjs\\\\\\\", \\\\\\\"jiv\\\\\\\": \\\\\\\"jiv\\\\\\\", \\\\\\\"snp\\\\\\\": \\\\\\\"snp\\\\\\\", \\\\\\\"sya\\\\\\\": \\\\\\\"sya\\\\\\\", \\\\\\\"sid\\\\\\\": \\\\\\\"sid\\\\\\\", \\\\\\\"snn\\\\\\\": \\\\\\\"snn\\\\\\\", \\\\\\\"sri\\\\\\\": \\\\\\\"sri\\\\\\\", \\\\\\\"srx\\\\\\\": \\\\\\\"srx\\\\\\\", \\\\\\\"sil\\\\\\\": \\\\\\\"sil\\\\\\\", \\\\\\\"sld\\\\\\\": \\\\\\\"sld\\\\\\\", \\\\\\\"akp\\\\\\\": \\\\\\\"akp\\\\\\\", \\\\\\\"xog\\\\\\\": \\\\\\\"xog\\\\\\\", \\\\\\\"som\\\\\\\": \\\\\\\"so\\\\\\\", \\\\\\\"bmu\\\\\\\": \\\\\\\"bmu\\\\\\\", \\\\\\\"khq\\\\\\\": \\\\\\\"khq\\\\\\\", \\\\\\\"ses\\\\\\\": \\\\\\\"ses\\\\\\\", \\\\\\\"mnx\\\\\\\": \\\\\\\"mnx\\\\\\\", \\\\\\\"srn\\\\\\\": \\\\\\\"srn\\\\\\\", \\\\\\\"sxb\\\\\\\": \\\\\\\"sxb\\\\\\\", \\\\\\\"suc\\\\\\\": \\\\\\\"suc\\\\\\\", \\\\\\\"tgo\\\\\\\": \\\\\\\"tgo\\\\\\\", \\\\\\\"suk\\\\\\\": \\\\\\\"suk\\\\\\\", \\\\\\\"sun\\\\\\\": \\\\\\\"su\\\\\\\", \\\\\\\"suz\\\\\\\": \\\\\\\"suz\\\\\\\", \\\\\\\"sgj\\\\\\\": \\\\\\\"sgj\\\\\\\", \\\\\\\"sus\\\\\\\": \\\\\\\"sus\\\\\\\", \\\\\\\"swh\\\\\\\": \\\\\\\"swh\\\\\\\", \\\\\\\"swe\\\\\\\": \\\\\\\"sv\\\\\\\", \\\\\\\"syl\\\\\\\": \\\\\\\"syl\\\\\\\", \\\\\\\"dyi\\\\\\\": \\\\\\\"dyi\\\\\\\", \\\\\\\"myk\\\\\\\": \\\\\\\"myk\\\\\\\", \\\\\\\"spp\\\\\\\": \\\\\\\"spp\\\\\\\", \\\\\\\"tap\\\\\\\": \\\\\\\"tap\\\\\\\", \\\\\\\"tby\\\\\\\": \\\\\\\"tby\\\\\\\", \\\\\\\"tna\\\\\\\": \\\\\\\"tna\\\\\\\", \\\\\\\"shi\\\\\\\": \\\\\\\"shi\\\\\\\", \\\\\\\"klw\\\\\\\": \\\\\\\"klw\\\\\\\", \\\\\\\"tgl\\\\\\\": \\\\\\\"tl\\\\\\\", \\\\\\\"tbk\\\\\\\": \\\\\\\"tbk\\\\\\\", \\\\\\\"tgj\\\\\\\": \\\\\\\"tgj\\\\\\\", \\\\\\\"blt\\\\\\\": \\\\\\\"blt\\\\\\\", \\\\\\\"tbg\\\\\\\": \\\\\\\"tbg\\\\\\\", \\\\\\\"omw\\\\\\\": \\\\\\\"omw\\\\\\\", \\\\\\\"tgk\\\\\\\": \\\\\\\"tg\\\\\\\", \\\\\\\"tdj\\\\\\\": \\\\\\\"tdj\\\\\\\", \\\\\\\"tbc\\\\\\\": \\\\\\\"tbc\\\\\\\", \\\\\\\"tlj\\\\\\\": \\\\\\\"tlj\\\\\\\", \\\\\\\"tly\\\\\\\": \\\\\\\"tly\\\\\\\", \\\\\\\"ttq-script_tifinagh\\\\\\\": \\\\\\\"ttq-script_tifinagh\\\\\\\", \\\\\\\"taj\\\\\\\": \\\\\\\"taj\\\\\\\", \\\\\\\"taq\\\\\\\": \\\\\\\"taq\\\\\\\", \\\\\\\"tpm\\\\\\\": \\\\\\\"tpm\\\\\\\", \\\\\\\"tgp\\\\\\\": \\\\\\\"tgp\\\\\\\", \\\\\\\"tnn\\\\\\\": \\\\\\\"tnn\\\\\\\", \\\\\\\"tac\\\\\\\": \\\\\\\"tac\\\\\\\", \\\\\\\"rif-script_latin\\\\\\\": \\\\\\\"rif-script_latin\\\\\\\", \\\\\\\"rif-script_arabic\\\\\\\": \\\\\\\"rif-script_arabic\\\\\\\", \\\\\\\"tat\\\\\\\": \\\\\\\"tt\\\\\\\", \\\\\\\"tav\\\\\\\": \\\\\\\"tav\\\\\\\", \\\\\\\"twb\\\\\\\": \\\\\\\"twb\\\\\\\", \\\\\\\"tbl\\\\\\\": \\\\\\\"tbl\\\\\\\", \\\\\\\"kps\\\\\\\": \\\\\\\"kps\\\\\\\", \\\\\\\"twe\\\\\\\": \\\\\\\"twe\\\\\\\", \\\\\\\"ttc\\\\\\\": \\\\\\\"ttc\\\\\\\", \\\\\\\"kdh\\\\\\\": \\\\\\\"kdh\\\\\\\", \\\\\\\"tes\\\\\\\": \\\\\\\"tes\\\\\\\", \\\\\\\"tex\\\\\\\": \\\\\\\"tex\\\\\\\", \\\\\\\"tee\\\\\\\": \\\\\\\"tee\\\\\\\", \\\\\\\"tpp\\\\\\\": \\\\\\\"tpp\\\\\\\", \\\\\\\"tpt\\\\\\\": \\\\\\\"tpt\\\\\\\", \\\\\\\"stp\\\\\\\": \\\\\\\"stp\\\\\\\", \\\\\\\"tfr\\\\\\\": \\\\\\\"tfr\\\\\\\", \\\\\\\"twu\\\\\\\": \\\\\\\"twu\\\\\\\", \\\\\\\"ter\\\\\\\": \\\\\\\"ter\\\\\\\", \\\\\\\"tew\\\\\\\": \\\\\\\"tew\\\\\\\", \\\\\\\"tha\\\\\\\": \\\\\\\"th\\\\\\\", \\\\\\\"nod\\\\\\\": \\\\\\\"nod\\\\\\\", \\\\\\\"thl\\\\\\\": \\\\\\\"thl\\\\\\\", \\\\\\\"tem\\\\\\\": \\\\\\\"tem\\\\\\\", \\\\\\\"adx\\\\\\\": \\\\\\\"adx\\\\\\\", \\\\\\\"bod\\\\\\\": \\\\\\\"bo\\\\\\\", \\\\\\\"khg\\\\\\\": \\\\\\\"khg\\\\\\\", \\\\\\\"tca\\\\\\\": \\\\\\\"tca\\\\\\\", \\\\\\\"tir\\\\\\\": \\\\\\\"ti\\\\\\\", \\\\\\\"txq\\\\\\\": \\\\\\\"txq\\\\\\\", \\\\\\\"tik\\\\\\\": \\\\\\\"tik\\\\\\\", \\\\\\\"dgr\\\\\\\": \\\\\\\"dgr\\\\\\\", \\\\\\\"tob\\\\\\\": \\\\\\\"tob\\\\\\\", \\\\\\\"tmf\\\\\\\": \\\\\\\"tmf\\\\\\\", \\\\\\\"tng\\\\\\\": \\\\\\\"tng\\\\\\\", \\\\\\\"tlb\\\\\\\": \\\\\\\"tlb\\\\\\\", \\\\\\\"ood\\\\\\\": \\\\\\\"ood\\\\\\\", \\\\\\\"tpi\\\\\\\": \\\\\\\"tpi\\\\\\\", \\\\\\\"jic\\\\\\\": \\\\\\\"jic\\\\\\\", \\\\\\\"lbw\\\\\\\": \\\\\\\"lbw\\\\\\\", \\\\\\\"txa\\\\\\\": \\\\\\\"txa\\\\\\\", \\\\\\\"tom\\\\\\\": \\\\\\\"tom\\\\\\\", \\\\\\\"toh\\\\\\\": \\\\\\\"toh\\\\\\\", \\\\\\\"tnt\\\\\\\": \\\\\\\"tnt\\\\\\\", \\\\\\\"sda\\\\\\\": \\\\\\\"sda\\\\\\\", \\\\\\\"tcs\\\\\\\": \\\\\\\"tcs\\\\\\\", \\\\\\\"toc\\\\\\\": \\\\\\\"toc\\\\\\\", \\\\\\\"tos\\\\\\\": \\\\\\\"tos\\\\\\\", \\\\\\\"neb\\\\\\\": \\\\\\\"neb\\\\\\\", \\\\\\\"trn\\\\\\\": \\\\\\\"trn\\\\\\\", \\\\\\\"trs\\\\\\\": \\\\\\\"trs\\\\\\\", \\\\\\\"trc\\\\\\\": \\\\\\\"trc\\\\\\\", \\\\\\\"tri\\\\\\\": \\\\\\\"tri\\\\\\\", \\\\\\\"cof\\\\\\\": \\\\\\\"cof\\\\\\\", \\\\\\\"tkr\\\\\\\": \\\\\\\"tkr\\\\\\\", \\\\\\\"kdl\\\\\\\": \\\\\\\"kdl\\\\\\\", \\\\\\\"cas\\\\\\\": \\\\\\\"cas\\\\\\\", \\\\\\\"tso\\\\\\\": \\\\\\\"ts\\\\\\\", \\\\\\\"tuo\\\\\\\": \\\\\\\"tuo\\\\\\\", \\\\\\\"iou\\\\\\\": \\\\\\\"iou\\\\\\\", \\\\\\\"tmc\\\\\\\": \\\\\\\"tmc\\\\\\\", \\\\\\\"tuf\\\\\\\": \\\\\\\"tuf\\\\\\\", \\\\\\\"tuk-script_latin\\\\\\\": \\\\\\\"tk\\\\\\\", \\\\\\\"tuk-script_arabic\\\\\\\": \\\\\\\"tk\\\\\\\", \\\\\\\"bov\\\\\\\": \\\\\\\"bov\\\\\\\", \\\\\\\"tue\\\\\\\": \\\\\\\"tue\\\\\\\", \\\\\\\"kcg\\\\\\\": \\\\\\\"kcg\\\\\\\", \\\\\\\"tzh-dialect_bachaj\\\\\\\\u00f3n\\\\\\\": \\\\\\\"tzh-dialect_bachaj\\\\\\\\u00f3n\\\\\\\", \\\\\\\"tzh-dialect_tenejapa\\\\\\\": \\\\\\\"tzh-dialect_tenejapa\\\\\\\", \\\\\\\"tzo-dialect_chenalh\\\\\\\\u00f3\\\\\\\": \\\\\\\"tzo-dialect_chenalh\\\\\\\\u00f3\\\\\\\", \\\\\\\"tzo-dialect_chamula\\\\\\\": \\\\\\\"tzo-dialect_chamula\\\\\\\", \\\\\\\"tzj-dialect_western\\\\\\\": \\\\\\\"tzj-dialect_western\\\\\\\", \\\\\\\"tzj-dialect_eastern\\\\\\\": \\\\\\\"tzj-dialect_eastern\\\\\\\", \\\\\\\"aoz\\\\\\\": \\\\\\\"aoz\\\\\\\", \\\\\\\"udm\\\\\\\": \\\\\\\"udm\\\\\\\", \\\\\\\"udu\\\\\\\": \\\\\\\"udu\\\\\\\", \\\\\\\"ukr\\\\\\\": \\\\\\\"uk\\\\\\\", \\\\\\\"ppk\\\\\\\": \\\\\\\"ppk\\\\\\\", \\\\\\\"ubu\\\\\\\": \\\\\\\"ubu\\\\\\\", \\\\\\\"urk\\\\\\\": \\\\\\\"urk\\\\\\\", \\\\\\\"ura\\\\\\\": \\\\\\\"ura\\\\\\\", \\\\\\\"urt\\\\\\\": \\\\\\\"urt\\\\\\\", \\\\\\\"urd-script_devanagari\\\\\\\": \\\\\\\"ur\\\\\\\", \\\\\\\"urd-script_arabic\\\\\\\": \\\\\\\"ur\\\\\\\", \\\\\\\"urd-script_latin\\\\\\\": \\\\\\\"ur\\\\\\\", \\\\\\\"upv\\\\\\\": \\\\\\\"upv\\\\\\\", \\\\\\\"usp\\\\\\\": \\\\\\\"usp\\\\\\\", \\\\\\\"uig-script_arabic\\\\\\\": \\\\\\\"ug\\\\\\\", \\\\\\\"uig-script_cyrillic\\\\\\\": \\\\\\\"ug\\\\\\\", \\\\\\\"uzb-script_cyrillic\\\\\\\": \\\\\\\"uz\\\\\\\", \\\\\\\"vag\\\\\\\": \\\\\\\"vag\\\\\\\", \\\\\\\"bav\\\\\\\": \\\\\\\"bav\\\\\\\", \\\\\\\"vid\\\\\\\": \\\\\\\"vid\\\\\\\", \\\\\\\"vie\\\\\\\": \\\\\\\"vi\\\\\\\", \\\\\\\"vif\\\\\\\": \\\\\\\"vif\\\\\\\", \\\\\\\"vun\\\\\\\": \\\\\\\"vun\\\\\\\", \\\\\\\"vut\\\\\\\": \\\\\\\"vut\\\\\\\", \\\\\\\"prk\\\\\\\": \\\\\\\"prk\\\\\\\", \\\\\\\"wwa\\\\\\\": \\\\\\\"wwa\\\\\\\", \\\\\\\"rro\\\\\\\": \\\\\\\"rro\\\\\\\", \\\\\\\"bao\\\\\\\": \\\\\\\"bao\\\\\\\", \\\\\\\"waw\\\\\\\": \\\\\\\"waw\\\\\\\", \\\\\\\"lgl\\\\\\\": \\\\\\\"lgl\\\\\\\", \\\\\\\"wlx\\\\\\\": \\\\\\\"wlx\\\\\\\", \\\\\\\"cou\\\\\\\": \\\\\\\"cou\\\\\\\", \\\\\\\"hub\\\\\\\": \\\\\\\"hub\\\\\\\", \\\\\\\"gvc\\\\\\\": \\\\\\\"gvc\\\\\\\", \\\\\\\"mfi\\\\\\\": \\\\\\\"mfi\\\\\\\", \\\\\\\"wap\\\\\\\": \\\\\\\"wap\\\\\\\", \\\\\\\"wba\\\\\\\": \\\\\\\"wba\\\\\\\", \\\\\\\"war\\\\\\\": \\\\\\\"war\\\\\\\", \\\\\\\"way\\\\\\\": \\\\\\\"way\\\\\\\", \\\\\\\"guc\\\\\\\": \\\\\\\"guc\\\\\\\", \\\\\\\"cym\\\\\\\": \\\\\\\"cy\\\\\\\", \\\\\\\"kvw\\\\\\\": \\\\\\\"kvw\\\\\\\", \\\\\\\"tnp\\\\\\\": \\\\\\\"tnp\\\\\\\", \\\\\\\"hto\\\\\\\": \\\\\\\"hto\\\\\\\", \\\\\\\"huu\\\\\\\": \\\\\\\"huu\\\\\\\", \\\\\\\"wal-script_latin\\\\\\\": \\\\\\\"wal-script_latin\\\\\\\", \\\\\\\"wal-script_ethiopic\\\\\\\": \\\\\\\"wal-script_ethiopic\\\\\\\", \\\\\\\"wlo\\\\\\\": \\\\\\\"wlo\\\\\\\", \\\\\\\"noa\\\\\\\": \\\\\\\"noa\\\\\\\", \\\\\\\"wob\\\\\\\": \\\\\\\"wob\\\\\\\", \\\\\\\"kao\\\\\\\": \\\\\\\"kao\\\\\\\", \\\\\\\"xer\\\\\\\": \\\\\\\"xer\\\\\\\", \\\\\\\"yad\\\\\\\": \\\\\\\"yad\\\\\\\", \\\\\\\"yka\\\\\\\": \\\\\\\"yka\\\\\\\", \\\\\\\"sah\\\\\\\": \\\\\\\"sah\\\\\\\", \\\\\\\"yba\\\\\\\": \\\\\\\"yba\\\\\\\", \\\\\\\"yli\\\\\\\": \\\\\\\"yli\\\\\\\", \\\\\\\"nlk\\\\\\\": \\\\\\\"nlk\\\\\\\", \\\\\\\"yal\\\\\\\": \\\\\\\"yal\\\\\\\", \\\\\\\"yam\\\\\\\": \\\\\\\"yam\\\\\\\", \\\\\\\"yat\\\\\\\": \\\\\\\"yat\\\\\\\", \\\\\\\"jmd\\\\\\\": \\\\\\\"jmd\\\\\\\", \\\\\\\"tao\\\\\\\": \\\\\\\"tao\\\\\\\", \\\\\\\"yaa\\\\\\\": \\\\\\\"yaa\\\\\\\", \\\\\\\"ame\\\\\\\": \\\\\\\"ame\\\\\\\", \\\\\\\"guu\\\\\\\": \\\\\\\"guu\\\\\\\", \\\\\\\"yao\\\\\\\": \\\\\\\"yao\\\\\\\", \\\\\\\"yre\\\\\\\": \\\\\\\"yre\\\\\\\", \\\\\\\"yva\\\\\\\": \\\\\\\"yva\\\\\\\", \\\\\\\"ybb\\\\\\\": \\\\\\\"ybb\\\\\\\", \\\\\\\"pib\\\\\\\": \\\\\\\"pib\\\\\\\", \\\\\\\"byr\\\\\\\": \\\\\\\"byr\\\\\\\", \\\\\\\"pil\\\\\\\": \\\\\\\"pil\\\\\\\", \\\\\\\"ycn\\\\\\\": \\\\\\\"ycn\\\\\\\", \\\\\\\"ess\\\\\\\": \\\\\\\"ess\\\\\\\", \\\\\\\"yuz\\\\\\\": \\\\\\\"yuz\\\\\\\", \\\\\\\"atb\\\\\\\": \\\\\\\"atb\\\\\\\", \\\\\\\"zne\\\\\\\": \\\\\\\"zne\\\\\\\", \\\\\\\"zaq\\\\\\\": \\\\\\\"zaq\\\\\\\", \\\\\\\"zpo\\\\\\\": \\\\\\\"zpo\\\\\\\", \\\\\\\"zad\\\\\\\": \\\\\\\"zad\\\\\\\", \\\\\\\"zpc\\\\\\\": \\\\\\\"zpc\\\\\\\", \\\\\\\"zca\\\\\\\": \\\\\\\"zca\\\\\\\", \\\\\\\"zpg\\\\\\\": \\\\\\\"zpg\\\\\\\", \\\\\\\"zai\\\\\\\": \\\\\\\"zai\\\\\\\", \\\\\\\"zpl\\\\\\\": \\\\\\\"zpl\\\\\\\", \\\\\\\"zam\\\\\\\": \\\\\\\"zam\\\\\\\", \\\\\\\"zaw\\\\\\\": \\\\\\\"zaw\\\\\\\", \\\\\\\"zpm\\\\\\\": \\\\\\\"zpm\\\\\\\", \\\\\\\"zac\\\\\\\": \\\\\\\"zac\\\\\\\", \\\\\\\"zao\\\\\\\": \\\\\\\"zao\\\\\\\", \\\\\\\"ztq\\\\\\\": \\\\\\\"ztq\\\\\\\", \\\\\\\"zar\\\\\\\": \\\\\\\"zar\\\\\\\", \\\\\\\"zpt\\\\\\\": \\\\\\\"zpt\\\\\\\", \\\\\\\"zpi\\\\\\\": \\\\\\\"zpi\\\\\\\", \\\\\\\"zas\\\\\\\": \\\\\\\"zas\\\\\\\", \\\\\\\"zaa\\\\\\\": \\\\\\\"zaa\\\\\\\", \\\\\\\"zpz\\\\\\\": \\\\\\\"zpz\\\\\\\", \\\\\\\"zab\\\\\\\": \\\\\\\"zab\\\\\\\", \\\\\\\"zpu\\\\\\\": \\\\\\\"zpu\\\\\\\", \\\\\\\"zae\\\\\\\": \\\\\\\"zae\\\\\\\", \\\\\\\"zty\\\\\\\": \\\\\\\"zty\\\\\\\", \\\\\\\"zav\\\\\\\": \\\\\\\"zav\\\\\\\", \\\\\\\"zza\\\\\\\": \\\\\\\"zza\\\\\\\", \\\\\\\"zyb\\\\\\\": \\\\\\\"zyb\\\\\\\", \\\\\\\"ziw\\\\\\\": \\\\\\\"ziw\\\\\\\", \\\\\\\"zos\\\\\\\": \\\\\\\"zos\\\\\\\", \\\\\\\"gnd\\\\\\\": \\\\\\\"gnd\\\\\\\"},\\\"\""
      },
      {
        "line": 4701,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4702,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 4706,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 4707,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"e.g.\\\\\\\": \\\\\\\"for example\\\\\\\",\\\"\""
      },
      {
        "line": 4711,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 4712,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 4716,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 4717,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"cak-dialect_santodomingoxenacoj\\\\\\\": {\\\\\\\"name\\\\\\\": \\\\\\\"Kaqchikel - dialect Santo Domingo Xenacoj\\\\\\\", \\\\\\\"native_name\\\\\\\": \\\\\\\"Kaqchikel\\\\\\\", \\\\\\\"max_chars\\\\\\\": 142},\\\"\""
      },
      {
        "line": 4721,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 4722,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.18620689655172415,\""
      },
      {
        "line": 4726,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4727,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4731,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4732,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": 24000,\\\"\""
      },
      {
        "line": 4736,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4737,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4741,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4742,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": 24000,\\\"\""
      },
      {
        "line": 4746,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4747,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4751,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4752,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": 22050,\\\"\""
      },
      {
        "line": 4756,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4757,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4761,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4762,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": 22050,\\\"\""
      },
      {
        "line": 4766,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4767,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4771,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4772,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": 16000,\\\"\""
      },
      {
        "line": 4776,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4777,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4781,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4782,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": 16000,\\\"\""
      },
      {
        "line": 4786,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4787,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4791,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4792,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"KumarDahl_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4796,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4797,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4801,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4802,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4806,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4807,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4811,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4812,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"AiExplained_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4816,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4817,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4821,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4822,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4826,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4827,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4831,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4832,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"AsmrRacoon_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4836,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4837,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4841,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4842,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4846,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4847,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4851,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4852,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"BobOdenkirk_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4856,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4857,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4861,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4862,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4866,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4867,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4871,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4872,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"BobRoss_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4876,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4877,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4881,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4882,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4886,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4887,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4891,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4892,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"female\\\\\\\", f\\\\\\\"BrinaPalencia_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4896,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4897,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4901,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4902,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4906,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4907,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4911,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4912,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"BryanCranston_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4916,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4917,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4921,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4922,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4926,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4927,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4931,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4932,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"elder\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"DavidAttenborough_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4936,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4937,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4941,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4942,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4946,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4947,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4951,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4952,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"DeathPussInBoots_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4956,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4957,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4961,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4962,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4966,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4967,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4971,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4972,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"elder\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"DermotCrowley_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4976,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4977,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4981,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4982,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 4986,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4987,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 4991,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4992,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"female\\\\\\\", f\\\\\\\"EvaSeymour_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 4996,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 4997,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5001,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5002,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5006,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5007,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5011,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5012,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"elder\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"GideonOfnirEldenRing_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5016,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5017,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5021,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5022,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5026,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5027,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5031,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5032,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"GhostMW2_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5036,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5037,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5041,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5042,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5046,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5047,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5051,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5052,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"elder\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"JhonButlerASMR_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5056,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5057,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5061,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5062,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5066,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5067,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5071,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5072,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"JhonMulaney_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5076,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5077,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5081,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5082,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5086,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5087,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5091,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5092,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"female\\\\\\\", f\\\\\\\"JillRedfield_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5096,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5097,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5101,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5102,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5106,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5107,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5111,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5112,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"female\\\\\\\", f\\\\\\\"JuliaWhenlan_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5116,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5117,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5121,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5122,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5126,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5127,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5131,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5132,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"elder\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"LeeHorsley_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5136,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5137,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5141,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5142,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5146,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5147,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5151,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5152,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"female\\\\\\\", f\\\\\\\"MelinaEldenRing_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5156,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5157,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5161,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5162,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5166,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5167,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5171,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5172,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"MorganFreeman_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5176,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5177,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5181,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5182,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5186,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5187,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5191,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5192,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"NeilGaiman_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5196,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5197,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5201,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5202,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5206,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5207,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5211,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5212,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"elder\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"RainyDayHeadSpace_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5216,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5217,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5221,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5222,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5226,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5227,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5231,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5232,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"RayPorter_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5236,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5237,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5241,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5242,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5246,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5247,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5251,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5252,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"female\\\\\\\", f\\\\\\\"RelaxForAWhile_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5256,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5257,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5261,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5262,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5266,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5267,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5271,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5272,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"female\\\\\\\", f\\\\\\\"RosamundPike_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5276,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5277,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5281,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5282,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5286,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5287,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5291,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5292,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"female\\\\\\\", f\\\\\\\"ScarlettJohansson_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5296,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5297,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5301,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5302,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5306,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5307,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5311,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5312,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"StanleyParable_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5316,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5317,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5321,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5322,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5326,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5327,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5331,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5332,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"WhisperSalemASMR_{default_xtts_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5336,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5337,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5341,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5342,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_xtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5346,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5347,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5351,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5352,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"voice\\\\\\\": os.path.join(voices_dir, \\\\\\\"eng\\\\\\\", \\\\\\\"adult\\\\\\\", \\\\\\\"male\\\\\\\", f\\\\\\\"KumarDahl_{default_bark_settings['samplerate']}.wav\\\\\\\"),\\\"\""
      },
      {
        "line": 5356,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5357,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5361,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5362,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_bark_settings['samplerate']\\\"\""
      },
      {
        "line": 5366,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5367,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5371,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5372,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": {\\\"\""
      },
      {
        "line": 5376,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5377,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5381,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5382,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"css10/vits\\\\\\\": default_vits_settings['samplerate'],\\\"\""
      },
      {
        "line": 5386,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5387,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5391,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5392,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"custom/vits\\\\\\\": default_vits_settings['samplerate'],\\\"\""
      },
      {
        "line": 5396,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5397,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5401,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5402,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"custom/vits-female\\\\\\\": default_vits_settings['samplerate'],\\\"\""
      },
      {
        "line": 5406,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5407,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5411,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5412,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"cv/vits\\\\\\\": default_vits_settings['samplerate'],\\\"\""
      },
      {
        "line": 5416,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5417,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5421,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5422,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"mai/vits\\\\\\\": default_vits_settings['samplerate'],\\\"\""
      },
      {
        "line": 5426,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5427,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5431,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5432,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"openbible/vits\\\\\\\": default_vits_settings['samplerate'],\\\"\""
      },
      {
        "line": 5436,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5437,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5441,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5442,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"vctk/vits\\\\\\\": default_vits_settings['samplerate'],\\\"\""
      },
      {
        "line": 5446,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5447,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5451,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5452,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"thorsten/vits\\\\\\\": default_vits_settings['samplerate']\\\"\""
      },
      {
        "line": 5456,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5457,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5461,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5462,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_fairseq_settings['samplerate']\\\"\""
      },
      {
        "line": 5466,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5467,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5471,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5472,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": {\\\"\""
      },
      {
        "line": 5476,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5477,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5481,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5482,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"mai/tacotron2-DDC\\\\\\\": default_tacotron_settings['samplerate'],\\\"\""
      },
      {
        "line": 5486,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5487,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5491,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5492,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"thorsten/tacotron2-DDC\\\\\\\": default_tacotron_settings['samplerate'],\\\"\""
      },
      {
        "line": 5496,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5497,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5501,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5502,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"kokoro/tacotron2-DDC\\\\\\\": default_tacotron_settings['samplerate'],\\\"\""
      },
      {
        "line": 5506,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5507,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5511,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5512,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"ljspeech/tacotron2-DDC\\\\\\\": default_tacotron_settings['samplerate'],\\\"\""
      },
      {
        "line": 5516,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5517,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5521,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5522,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"baker/tacotron2-DDC-GST\\\\\\\": default_tacotron_settings['samplerate']\\\"\""
      },
      {
        "line": 5526,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5527,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5531,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5532,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"samplerate\\\\\\\": default_yourtts_settings['samplerate']\\\"\""
      },
      {
        "line": 5536,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 5537,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.018518518518518517,\""
      },
      {
        "line": 5541,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5542,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5546,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5547,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"self.samplerate = models[session['tts_engine']][session['fine_tuned']]['samplerate']\\\"\""
      },
      {
        "line": 5551,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5552,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5556,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5557,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"np.savez(npz_file, audio=audio, sample_rate=self.samplerate)\\\"\""
      },
      {
        "line": 5561,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 5562,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 5566,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 5567,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"log_mel_spectrogram = vggish_input.wavfile_to_examples(self.wav_file)\\\"\""
      },
      {
        "line": 5571,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5572,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5576,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5577,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sample_rate = audio.frame_rate\\\"\""
      },
      {
        "line": 5581,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5582,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5586,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5587,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"samples = np.array(chunk.get_array_of_samples())\\\"\""
      },
      {
        "line": 5591,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5592,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5596,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5597,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"spectrum = np.abs(scipy.fftpack.fft(samples))\\\"\""
      },
      {
        "line": 5601,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 5602,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.058823529411764705,\""
      },
      {
        "line": 5606,
        "keyword": "Coming soon",
        "content": "\"keyword\": \"Coming soon\","
      },
      {
        "line": 5607,
        "keyword": "Coming soon",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Coming soon\\\",\""
      },
      {
        "line": 5611,
        "keyword": "Coming soon",
        "content": "\"keyword\": \"Coming soon\","
      },
      {
        "line": 5612,
        "keyword": "Coming soon",
        "content": "\"content\": \"\\\"content\\\": \\\"print('Other TTS engines coming soon!')\\\"\""
      },
      {
        "line": 5616,
        "keyword": "Coming soon",
        "content": "\"keyword\": \"Coming soon\","
      },
      {
        "line": 5617,
        "keyword": "Coming soon",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Coming soon\\\",\""
      },
      {
        "line": 5621,
        "keyword": "Coming soon",
        "content": "\"keyword\": \"Coming soon\","
      },
      {
        "line": 5622,
        "keyword": "Coming soon",
        "content": "\"content\": \"\\\"content\\\": \\\"print('Other TTS engines coming soon!')\\\"\""
      },
      {
        "line": 5626,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 5627,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.03125,\""
      },
      {
        "line": 5631,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5632,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5636,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5637,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def _safe_multinomial(input, num_samples, replacement=False, *, generator=None, out=None):\\\"\""
      },
      {
        "line": 5641,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5642,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5646,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5647,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return _original_multinomial(input, num_samples, replacement=replacement, generator=generator, out=out)\\\"\""
      },
      {
        "line": 5651,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5652,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5656,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5657,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"self.params[XTTSv2]['sample_rate'] = models[XTTSv2][self.session['fine_tuned']]['samplerate']\\\"\""
      },
      {
        "line": 5661,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5662,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5666,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5667,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"self.params[BARK]['sample_rate'] = models[BARK][self.session['fine_tuned']]['samplerate']\\\"\""
      },
      {
        "line": 5671,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5672,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5676,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5677,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"self.params[VITS]['sample_rate'] = models[VITS][self.session['fine_tuned']]['samplerate'][sub]\\\"\""
      },
      {
        "line": 5681,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5682,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5686,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5687,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"self.params[FAIRSEQ]['sample_rate'] = models[FAIRSEQ][self.session['fine_tuned']]['samplerate']\\\"\""
      },
      {
        "line": 5691,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5692,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5696,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5697,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"self.params[TACOTRON2]['sample_rate'] = models[TACOTRON2][self.session['fine_tuned']]['samplerate'][sub]\\\"\""
      },
      {
        "line": 5701,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5702,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5706,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5707,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"self.params[YOURTTS]['sample_rate'] = models[YOURTTS][self.session['fine_tuned']]['samplerate']\\\"\""
      },
      {
        "line": 5711,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5712,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5716,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5717,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"torchaudio.save(file_path, audio_tensor, default_xtts_settings['samplerate'], format='wav')\\\"\""
      },
      {
        "line": 5721,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5722,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5726,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5727,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"for samplerate in [16000, 24000]:\\\"\""
      },
      {
        "line": 5731,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5732,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5736,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5737,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"output_file = file_path.replace('.wav', f'_{samplerate}.wav')\\\"\""
      },
      {
        "line": 5741,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5742,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5746,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5747,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"if not self._normalize_audio(file_path, output_file, samplerate):\\\"\""
      },
      {
        "line": 5751,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5752,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5756,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5757,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sample_rate, signal = wav.read(voice_path)\\\"\""
      },
      {
        "line": 5761,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5762,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5766,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5767,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"freqs = np.fft.fftfreq(len(fft_spectrum), d=1/sample_rate)\\\"\""
      },
      {
        "line": 5771,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5772,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5776,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5777,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def _trim_audio(self, audio_data, sample_rate, silence_threshold=0.001, buffer_sec=0.007):\\\"\""
      },
      {
        "line": 5781,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5782,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5786,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5787,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"start_index = max(non_silent_indices[0] - int(buffer_sec * sample_rate), 0)\\\"\""
      },
      {
        "line": 5791,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5792,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5796,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5797,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"end_index = non_silent_indices[-1] + int(buffer_sec * sample_rate)\\\"\""
      },
      {
        "line": 5801,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5802,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5806,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5807,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def _normalize_audio(self, input_file, output_file, samplerate):\\\"\""
      },
      {
        "line": 5811,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5812,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5816,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5817,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"'-ar', str(samplerate),\\\"\""
      },
      {
        "line": 5821,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5822,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5826,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5827,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sample_rate = 16000 if self.session['tts_engine'] in [TACOTRON2, VITS] and self.session['voice'] is not None else settings['sample_rate']\\\"\""
      },
      {
        "line": 5831,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5832,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5836,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5837,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"silence_tensor = torch.zeros(1, int(sample_rate * 1.4)) # 1.4 seconds\\\"\""
      },
      {
        "line": 5841,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5842,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5846,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5847,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"-r\\\\\\\", str(settings['sample_rate']), tmp_out_wav,\\\"\""
      },
      {
        "line": 5851,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5852,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5856,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5857,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"settings['sample_rate'] = 16000\\\"\""
      },
      {
        "line": 5861,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5862,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5866,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5867,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"-r\\\\\\\", str(settings['sample_rate']), tmp_out_wav,\\\"\""
      },
      {
        "line": 5871,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5872,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5876,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5877,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"-r\\\\\\\", str(settings['sample_rate']), tmp_out_wav,\\\"\""
      },
      {
        "line": 5881,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5882,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5886,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5887,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"settings['sample_rate'] = 16000\\\"\""
      },
      {
        "line": 5891,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5892,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5896,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5897,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"audio_tensor = self._trim_audio(audio_tensor.squeeze(), sample_rate, 0.001, trim_audio_buffer).unsqueeze(0)\\\"\""
      },
      {
        "line": 5901,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5902,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5906,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5907,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"duration = audio_tensor.shape[-1] / sample_rate\\\"\""
      },
      {
        "line": 5911,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5912,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5916,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5917,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"torchaudio.save(final_sentence, audio_tensor, sample_rate, format=default_audio_proc_format)\\\"\""
      },
      {
        "line": 5921,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 5922,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.043256997455470736,\""
      },
      {
        "line": 5926,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5927,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5931,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5932,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def _safe_multinomial(input, num_samples, replacement=False, *, generator=None, out=None):\\\"\""
      },
      {
        "line": 5936,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5937,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5941,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5942,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return _original_multinomial(input, num_samples, replacement=replacement, generator=generator, out=out)\\\"\""
      },
      {
        "line": 5946,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5947,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5951,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5952,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"settings['sample_rate'] = models[self.session['tts_engine']][self.session['fine_tuned']]['samplerate']\\\"\""
      },
      {
        "line": 5956,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5957,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5961,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5962,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def _wav2npz(self, wav_path, npz_path, sample_rate):\\\"\""
      },
      {
        "line": 5966,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5967,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5971,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5972,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"np.savez(npz_path, audio=audio, sample_rate=sample_rate)\\\"\""
      },
      {
        "line": 5976,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5977,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5981,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5982,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sample_rate, signal = wav.read(voice_path)\\\"\""
      },
      {
        "line": 5986,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5987,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 5991,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5992,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"freqs = np.fft.fftfreq(len(fft_spectrum), d=1/sample_rate)\\\"\""
      },
      {
        "line": 5996,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 5997,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6001,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6002,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def _trim_audio(self, audio_data, sample_rate, silence_threshold=0.001, buffer_sec=0.007):\\\"\""
      },
      {
        "line": 6006,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6007,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6011,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6012,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"start_index = max(non_silent_indices[0] - int(buffer_sec * sample_rate), 0)\\\"\""
      },
      {
        "line": 6016,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6017,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6021,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6022,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"end_index = non_silent_indices[-1] + int(buffer_sec * sample_rate)\\\"\""
      },
      {
        "line": 6026,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6027,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6031,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6032,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"def _normalize_audio(self, input_file, output_file, samplerate):\\\"\""
      },
      {
        "line": 6036,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6037,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6041,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6042,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"'-ar', str(samplerate),\\\"\""
      },
      {
        "line": 6046,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6047,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6051,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6052,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sample_rate = settings['sample_rate']\\\"\""
      },
      {
        "line": 6056,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6057,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6061,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6062,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"silence_tensor = torch.zeros(1, sample_rate * 2)\\\"\""
      },
      {
        "line": 6066,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6067,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6071,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6072,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"audio_tensor = self._trim_audio(audio_tensor.squeeze(), sample_rate, 0.001, trim_audio_buffer).unsqueeze(0)\\\"\""
      },
      {
        "line": 6076,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6077,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6081,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6082,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"duration = audio_tensor.shape[-1] / sample_rate\\\"\""
      },
      {
        "line": 6086,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6087,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6091,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6092,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"torchaudio.save(final_sentence, audio_tensor, sample_rate, format=default_audio_proc_format)\\\"\""
      },
      {
        "line": 6096,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6097,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.03125,\""
      },
      {
        "line": 6101,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6102,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6106,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6107,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"# Example Usage\\\"\""
      },
      {
        "line": 6111,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6112,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.023255813953488372,\""
      },
      {
        "line": 6116,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6117,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6121,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6122,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"echo \\\\\\\"Example:\\\\\\\"\\\"\""
      },
      {
        "line": 6126,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6127,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.016293279022403257,\""
      },
      {
        "line": 6131,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6132,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6136,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6137,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- **<custom_model_URL_ZIP_path>**: URL Path to zip of Model folder. For Example this for the [xtts_David_Attenborough_fine_tune](https://huggingface.co/drewThomasson/xtts_David_Attenborough_fine_tune/tree/main) `https://huggingface.co/drewThomasson/xtts_David_Attenborough_fine_tune/resolve/main/Finished_model_files.zip?download=true`\\\"\""
      },
      {
        "line": 6141,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6142,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6146,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6147,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"URL to download the custom model as a zip file. Optional, but will be used if provided. Examples include David Attenborough's model: 'https://huggingface.co/drewThomasson/xtts_David_Attenborough_fine_tune/resolve/main/Finished_model_files.zip?download=true'. More XTTS fine-tunes can be found on my Hugging Face at 'https://huggingface.co/drewThomasson'.\\\"\""
      },
      {
        "line": 6151,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6152,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6156,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6157,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example usage:\\\"\""
      },
      {
        "line": 6161,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6162,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6166,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6167,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"<summary><strong>Example of using docker in headless mode or modifying anything with the extra parameters + Full guide</strong></summary>\\\"\""
      },
      {
        "line": 6171,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6172,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6176,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6177,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"## Example of using docker in headless mode\\\"\""
      },
      {
        "line": 6181,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6182,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6186,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6187,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"will be used if provided. Examples include David Attenborough's\\\"\""
      },
      {
        "line": 6191,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6192,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6196,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6197,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example: python script.py --headless --ebook path_to_ebook --voice path_to_voice\\\"\""
      },
      {
        "line": 6201,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6202,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6206,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6207,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- **Example Output**: ![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\\\"\""
      },
      {
        "line": 6211,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6212,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.009153318077803204,\""
      },
      {
        "line": 6216,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6217,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6221,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6222,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- \\\\ud83c\\\\udf99\\\\ufe0f \\\\u4f7f\\\\u7528[Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2)\\\\u548c[Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms)\\\\u7684\\\\u9ad8\\\\u8d28\\\\u91cf\\\\u6587\\\\u672c\\\\u8f6c\\\\u8bed\\\\u97f3\\\\u3002\\\"\""
      },
      {
        "line": 6226,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6227,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 6231,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6232,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"--language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\\\\u00e1ncoat\\\\u00e1n, cac-dialect_sanmateoixtat\\\\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\\\\u00edadejes\\\\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\\\\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\\\\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\\\\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng).\\\"\""
      },
      {
        "line": 6236,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6237,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6241,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6242,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example usage:\\\"\""
      },
      {
        "line": 6246,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6247,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6251,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6252,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- **\\\\u793a\\\\u4f8b\\\\u8f93\\\\u51fa**: ![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\\\"\""
      },
      {
        "line": 6256,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6257,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.012684989429175475,\""
      },
      {
        "line": 6261,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6262,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6266,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6267,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"-   [Utilizzo del modello personalizzato senza testa](#example-of-custom-model-zip-upload)\\\"\""
      },
      {
        "line": 6271,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6272,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6276,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6277,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"-   \\\\ud83c\\\\udf99\\\\ufe0f Text-to-Speech di alta qualit\\\\u00e0 con[Coqui XTTSV2](https://huggingface.co/coqui/XTTS-v2)E[Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms)(e altro).\\\"\""
      },
      {
        "line": 6281,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6282,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6286,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6287,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example usage:\\\"\""
      },
      {
        "line": 6291,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6292,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 6296,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6297,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"Questo metodo garantisce coerenza in diversi ambienti e semplifica la configurazione.\\\"\""
      },
      {
        "line": 6301,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6302,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6306,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6307,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"-   **Esempio**![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\\\"\""
      },
      {
        "line": 6311,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6312,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 6316,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6317,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"-   [@shakenbake15 per un migliore metodo di salvataggio dei capitoli](https://github.com/DrewThomasson/ebook2audiobook/issues/8)\\\"\""
      },
      {
        "line": 6321,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6322,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.00980392156862745,\""
      },
      {
        "line": 6326,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6327,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6331,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6332,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- \\\\ud83c\\\\udf99\\\\ufe0f \\\\u064a\\\\u0642\\\\u062f\\\\u0645 \\\\u062a\\\\u062d\\\\u0648\\\\u064a\\\\u0644 \\\\u0627\\\\u0644\\\\u0646\\\\u0635 \\\\u0625\\\\u0644\\\\u0649 \\\\u0643\\\\u0644\\\\u0627\\\\u0645 \\\\u0628\\\\u062c\\\\u0648\\\\u062f\\\\u0629 \\\\u0639\\\\u0627\\\\u0644\\\\u064a\\\\u0629 \\\\u0628\\\\u0627\\\\u0633\\\\u062a\\\\u062e\\\\u062f\\\\u0627\\\\u0645 [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) \\\\u0648 [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms).\\\"\""
      },
      {
        "line": 6336,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6337,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 6341,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6342,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"--language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\\\\u00e1ncoat\\\\u00e1n, cac-dialect_sanmateoixtat\\\\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\\\\u00edadejes\\\\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\\\\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\\\\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\\\\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng).\\\"\""
      },
      {
        "line": 6346,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6347,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6351,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6352,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example usage:\\\"\""
      },
      {
        "line": 6356,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6357,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6361,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6362,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- **\\\\u0645\\\\u062b\\\\u0627\\\\u0644 \\\\u0644\\\\u0644\\\\u0645\\\\u062e\\\\u0631\\\\u062c\\\\u0627\\\\u062a**: ![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\\\"\""
      },
      {
        "line": 6366,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6367,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.006134969325153374,\""
      },
      {
        "line": 6371,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6372,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6376,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6377,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- \\\\ud83c\\\\udf99\\\\ufe0f [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) \\\\ubc0f [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms) \\\\ub4f1 \\\\uace0\\\\ud488\\\\uc9c8 \\\\uc74c\\\\uc131\\\\uc0dd\\\\uc131 \\\\uc5d4\\\\uc9c4 \\\\uc9c0\\\\uc6d0\\\"\""
      },
      {
        "line": 6381,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6382,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6386,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6387,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example usage:\\\"\""
      },
      {
        "line": 6391,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6392,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6396,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6397,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"![\\\\uc608\\\\uc81c](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\\\"\""
      },
      {
        "line": 6401,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6402,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.0025575447570332483,\""
      },
      {
        "line": 6406,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6407,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6411,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6412,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- **\\\\u041f\\\\u0440\\\\u0438\\\\u043c\\\\u0435\\\\u0440 \\\\u0432\\\\u044b\\\\u0432\\\\u043e\\\\u0434\\\\u0430**: ![\\\\u041f\\\\u0440\\\\u0438\\\\u043c\\\\u0435\\\\u0440](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\\\"\""
      },
      {
        "line": 6416,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6417,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.009237875288683603,\""
      },
      {
        "line": 6421,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6422,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6426,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6427,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- \\\\ud83c\\\\udf99\\\\ufe0f \\\\u062a\\\\u0628\\\\u062f\\\\u06cc\\\\u0644 \\\\u06af\\\\u0641\\\\u062a\\\\u0627\\\\u0631 \\\\u0628\\\\u0647 \\\\u0645\\\\u062a\\\\u0646 \\\\u0628\\\\u0627 \\\\u06a9\\\\u06cc\\\\u0641\\\\u06cc\\\\u062a \\\\u0628\\\\u0627\\\\u0644\\\\u0627 \\\\u0647\\\\u0645\\\\u0631\\\\u0627\\\\u0647 \\\\u0628\\\\u0627 [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) \\\\u0648 [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms).\\\"\""
      },
      {
        "line": 6431,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6432,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 6436,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6437,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"--language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\\\\u00e1ncoat\\\\u00e1n, cac-dialect_sanmateoixtat\\\\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\\\\u00edadejes\\\\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\\\\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\\\\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\\\\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng).\\\"\""
      },
      {
        "line": 6441,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6442,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6446,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6447,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"Example usage:\\\"\""
      },
      {
        "line": 6451,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6452,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6456,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6457,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- **\\\\u062e\\\\u0631\\\\u0648\\\\u062c\\\\u06cc \\\\u0645\\\\u062b\\\\u0627\\\\u0644**: ![\\\\u0645\\\\u062b\\\\u0627\\\\u0644](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\\\"\""
      },
      {
        "line": 6461,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6462,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.007281553398058253,\""
      },
      {
        "line": 6466,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6467,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6471,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6472,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- \\\\ud83c\\\\udf99\\\\ufe0f H\\\\u00f6gkvalitativ text-till-tal med [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) och [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms).\\\"\""
      },
      {
        "line": 6476,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6477,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"keyword\\\": \\\"TODO\\\",\""
      },
      {
        "line": 6481,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 6482,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"content\\\": \\\"--language LANGUAGE   Spr\\\\u00e5k f\\\\u00f6r ljudboksomvandlingen. Alternativ: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\\\\u00e1ncoat\\\\u00e1n, cac-dialect_sanmateoixtat\\\\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\\\\u00edadejes\\\\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\\\\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\\\\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\\\\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Standard \\\\u00e4r Engelska (eng).\\\"\""
      },
      {
        "line": 6486,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6487,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6491,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6492,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- **Exempelutdata**: ![Exempel](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\\\"\""
      },
      {
        "line": 6496,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6497,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.017241379310344827,\""
      },
      {
        "line": 6501,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6502,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 6506,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6507,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Append basic firmographic details to a lead (mock implementation)\\\"\""
      },
      {
        "line": 6511,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6512,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.02,\""
      },
      {
        "line": 6516,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6517,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6521,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6522,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"public init(baseURL: URL = URL(string: \\\\\\\"https://signals.example.com\\\\\\\")!,\\\"\""
      },
      {
        "line": 6526,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6527,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.019230769230769232,\""
      },
      {
        "line": 6531,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6532,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6536,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6537,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"public init(baseURL: URL = URL(string: \\\\\\\"https://crm.example.com\\\\\\\")!,\\\"\""
      },
      {
        "line": 6541,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6542,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.06666666666666667,\""
      },
      {
        "line": 6546,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6547,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 6551,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6552,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"private class MockProtocol: URLProtocol {\\\"\""
      },
      {
        "line": 6556,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6557,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 6561,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6562,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let handler = MockProtocol.requestHandler else { return }\\\"\""
      },
      {
        "line": 6566,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6567,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 6571,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6572,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"config.protocolClasses = [MockProtocol.self]\\\"\""
      },
      {
        "line": 6576,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6577,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 6581,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6582,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"MockProtocol.requestHandler = { request in\\\"\""
      },
      {
        "line": 6586,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6587,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.09090909090909091,\""
      },
      {
        "line": 6591,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6592,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6596,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6597,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"let lead = Lead(name: \\\\\\\"Alice\\\\\\\", email: \\\\\\\"a@example.com\\\\\\\", company: \\\\\\\"Acme\\\\\\\", industry: \\\\\\\"Software\\\\\\\", region: \\\\\\\"US\\\\\\\")\\\"\""
      },
      {
        "line": 6601,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6602,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.09090909090909091,\""
      },
      {
        "line": 6606,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6607,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6611,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6612,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"These examples show how to request scene breakdowns and metadata from GPT-4.\\\"\""
      },
      {
        "line": 6616,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6617,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.002564102564102564,\""
      },
      {
        "line": 6621,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6622,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6626,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6627,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"- [ ] Provide multilingual visual cue glossary with usage examples\\\"\""
      },
      {
        "line": 6631,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6632,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.05555555555555555,\""
      },
      {
        "line": 6636,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6637,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 6641,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6642,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"<placeholder placeholderIdentifier=\\\\\\\"IBFirstResponder\\\\\\\" id=\\\\\\\"LaunchFirstResponder\\\\\\\" userLabel=\\\\\\\"First Responder\\\\\\\" sceneMemberID=\\\\\\\"firstResponder\\\\\\\"/>\\\"\""
      },
      {
        "line": 6646,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6647,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.047619047619047616,\""
      },
      {
        "line": 6651,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 6652,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 6656,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 6657,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"<string>Allows recording video content for scenes.</string>\\\"\""
      },
      {
        "line": 6661,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6662,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.046153846153846156,\""
      },
      {
        "line": 6666,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6667,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6671,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6672,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"case .youtube: return URL(string: \\\\\\\"https://example.com/youtube/upload\\\\\\\")!\\\"\""
      },
      {
        "line": 6676,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6677,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6681,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6682,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"case .tiktok: return URL(string: \\\\\\\"https://example.com/tiktok/upload\\\\\\\")!\\\"\""
      },
      {
        "line": 6686,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6687,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6691,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6692,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"case .instagram: return URL(string: \\\\\\\"https://example.com/instagram/upload\\\\\\\")!\\\"\""
      },
      {
        "line": 6696,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6697,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.023255813953488372,\""
      },
      {
        "line": 6701,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6702,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6706,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6707,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"# Sample video URLs and thumbnails for different styles\\\"\""
      },
      {
        "line": 6711,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6712,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6716,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6717,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"SAMPLE_VIDEOS = {\\\"\""
      },
      {
        "line": 6721,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6722,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6726,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6727,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"# Update video status to completed with sample content\\\"\""
      },
      {
        "line": 6731,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6732,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6736,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6737,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"sample_content = random.choice(SAMPLE_VIDEOS.get(style, SAMPLE_VIDEOS[\\\\\\\"realistic\\\\\\\"]))\\\"\""
      },
      {
        "line": 6741,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6742,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6746,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6747,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"video_url\\\\\\\": sample_content[\\\\\\\"video_url\\\\\\\"],\\\"\""
      },
      {
        "line": 6751,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6752,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6756,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6757,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"\\\\\\\"thumbnail_url\\\\\\\": sample_content[\\\\\\\"thumbnail_url\\\\\\\"]\\\"\""
      },
      {
        "line": 6761,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6762,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.36363636363636365,\""
      },
      {
        "line": 6766,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6767,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6771,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6772,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"* Record a short voice sample by generating silent PCM data.\\\"\""
      },
      {
        "line": 6776,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6777,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6781,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6782,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"export async function recordVoice(samplePath, durationMs = 1000) {\\\"\""
      },
      {
        "line": 6786,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6787,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6791,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6792,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"const bytes = Buffer.alloc(16 * durationMs); // fake 16 kHz mono samples\\\"\""
      },
      {
        "line": 6796,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6797,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6801,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6802,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"await fs.writeFile(samplePath, bytes);\\\"\""
      },
      {
        "line": 6806,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6807,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6811,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6812,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"return samplePath;\\\"\""
      },
      {
        "line": 6816,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6817,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6821,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6822,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"* Naively analyze a voice sample by returning its average amplitude.\\\"\""
      },
      {
        "line": 6826,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6827,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6831,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6832,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"export async function analyzeVoice(samplePath) {\\\"\""
      },
      {
        "line": 6836,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6837,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Sample\\\",\""
      },
      {
        "line": 6841,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6842,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"content\\\": \\\"const data = await fs.readFile(samplePath);\\\"\""
      },
      {
        "line": 6846,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6847,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.022727272727272728,\""
      },
      {
        "line": 6851,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6852,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Placeholder\\\",\""
      },
      {
        "line": 6856,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6857,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"content\\\": \\\"/// earlier placeholder with basic persistence utilities.\\\"\""
      },
      {
        "line": 6861,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6862,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.013157894736842105,\""
      },
      {
        "line": 6866,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6867,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Mock\\\",\""
      },
      {
        "line": 6871,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6872,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"content\\\": \\\"/// Begin rendering process (mock implementation)\\\"\""
      },
      {
        "line": 6876,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6877,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.037037037037037035,\""
      },
      {
        "line": 6881,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6882,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6886,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6887,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"public init(baseURL: URL = URL(string: \\\\\\\"https://upload.example.com\\\\\\\")!,\\\"\""
      },
      {
        "line": 6891,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6892,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.01098901098901099,\""
      },
      {
        "line": 6896,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 6897,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Content for\\\",\""
      },
      {
        "line": 6901,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 6902,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"content\\\": \\\"/// be passed to keep track of generated content for continuity checks.\\\"\""
      },
      {
        "line": 6906,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 6907,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"placeholder_percentage\\\": 0.06153846153846154,\""
      },
      {
        "line": 6911,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6912,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6916,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6917,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"private let endpoint = URL(string: \\\\\\\"https://publishing.example.com/upload\\\\\\\")!\\\"\""
      },
      {
        "line": 6921,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6922,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6926,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6927,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let url = URL(string: \\\\\\\"https://publishing.example.com/status/\\\\\\\\(id)\\\\\\\") else {\\\"\""
      },
      {
        "line": 6931,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6932,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6936,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6937,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let url = URL(string: \\\\\\\"https://publishing.example.com/dashboards\\\\\\\") else {\\\"\""
      },
      {
        "line": 6941,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6942,
        "keyword": "Example",
        "content": "\"content\": \"\\\"keyword\\\": \\\"Example\\\",\""
      },
      {
        "line": 6946,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6947,
        "keyword": "Example",
        "content": "\"content\": \"\\\"content\\\": \\\"guard let url = URL(string: \\\\\\\"https://publishing.example.com/connect\\\\\\\") else {\\\"\""
      },
      {
        "line": 6953,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.005115089514066497,"
      },
      {
        "line": 6958,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6959,
        "keyword": "Example",
        "content": "\"content\": \"Copy `.env.example` to `.env` and provide your `OPENAI_API_KEY` before running any app or tests. The shared `OpenAIService` reads this value at runtime.\""
      },
      {
        "line": 6963,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 6964,
        "keyword": "Sample",
        "content": "\"content\": \"Use `scripts/chatterbox_bridge.py` to generate a narrated play from a simple `SPEAKER: line` script. Place `speaker.mp3` samples next to your script and set `CHATTERBOX_API_URL` before running:\""
      },
      {
        "line": 6970,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0026041666666666665,"
      },
      {
        "line": 6975,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 6976,
        "keyword": "Example",
        "content": "\"content\": \"- [ ] Provide multilingual visual cue glossary with usage examples\""
      },
      {
        "line": 6982,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0018030513176144243,"
      },
      {
        "line": 6987,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6988,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\"\""
      },
      {
        "line": 6992,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6993,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\",\""
      },
      {
        "line": 6997,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 6998,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\"\""
      },
      {
        "line": 7002,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7003,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\",\""
      },
      {
        "line": 7007,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7008,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"VoiceLab/node_modules/@jest/environment-jsdom-abstract/node_modules/jest-mock\\\": {\""
      },
      {
        "line": 7012,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7013,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\",\""
      },
      {
        "line": 7017,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7018,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\"\""
      },
      {
        "line": 7022,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7023,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\"\""
      },
      {
        "line": 7027,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7028,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\",\""
      },
      {
        "line": 7032,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7033,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"VoiceLab/node_modules/jest-environment-jsdom/node_modules/jest-mock\\\": {\""
      },
      {
        "line": 7037,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7038,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\",\""
      },
      {
        "line": 7042,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7043,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"VoiceLab/node_modules/jest-mock\\\": {\""
      },
      {
        "line": 7047,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7048,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\",\""
      },
      {
        "line": 7054,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.06666666666666667,"
      },
      {
        "line": 7059,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7060,
        "keyword": "Mock",
        "content": "\"content\": \"command: node mock-tts.js\""
      },
      {
        "line": 7066,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.046153846153846156,"
      },
      {
        "line": 7071,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7072,
        "keyword": "Mock",
        "content": "\"content\": \"- Write unit tests using a mocked OpenAI client.\""
      },
      {
        "line": 7076,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7077,
        "keyword": "Example",
        "content": "\"content\": \"you can reach the maintainers at `support@example.com`.\""
      },
      {
        "line": 7081,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7082,
        "keyword": "Example",
        "content": "\"content\": \"For local development copy `.env.example` to `.env` and supply your `OPENAI_API_KEY`. This file is ignored by git.\""
      },
      {
        "line": 7088,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.004714201532115498,"
      },
      {
        "line": 7093,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7094,
        "keyword": "Example",
        "content": "\"content\": \"\\\"Provide multilingual visual cue glossary with usage examples (`generated/CoreForgeVisual/Provide_multilingual_visual_cue_glossary_with_usage_examples.py`)\\\",\""
      },
      {
        "line": 7098,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 7099,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"`PRACTICAL_PLAN.md` \\\\u2013 initial TODO list across apps.\\\",\""
      },
      {
        "line": 7103,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7104,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"Prompt validation with multiple sample inputs and outputs\\\",\""
      },
      {
        "line": 7108,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7109,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"PromptTemplates.md (AI workflows, sample prompts)\\\",\""
      },
      {
        "line": 7113,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7114,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"Allow users to test voice preview samples per character before rendering\\\",\""
      },
      {
        "line": 7118,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 7119,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"Flag NSFW content for internal moderation or publishing filter logic\\\",\""
      },
      {
        "line": 7123,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 7124,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"Auto-detect safe vs. unsafe content for preview-only versions\\\",\""
      },
      {
        "line": 7128,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7129,
        "keyword": "Example",
        "content": "\"content\": \"\\\"Provide multilingual visual cue glossary with usage examples\\\",\""
      },
      {
        "line": 7135,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.09090909090909091,"
      },
      {
        "line": 7140,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7141,
        "keyword": "Example",
        "content": "\"content\": \"let filing = Filing(title: \\\"Test\\\", date: Date(timeIntervalSince1970: 0), url: URL(string: \\\"https://example.com\\\")!)\""
      },
      {
        "line": 7145,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7146,
        "keyword": "Example",
        "content": "\"content\": \"let filing = Filing(title: \\\"Test\\\", date: Date(), url: URL(string: \\\"https://example.com\\\")!)\""
      },
      {
        "line": 7152,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.2,"
      },
      {
        "line": 7157,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7158,
        "keyword": "Sample",
        "content": "\"content\": \"let data = \\\"Sample\\\".data(using: .utf8)!\""
      },
      {
        "line": 7162,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7163,
        "keyword": "Sample",
        "content": "\"content\": \"XCTAssertEqual(ocr.extractText(from: data), \\\"Sample\\\")\""
      },
      {
        "line": 7169,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.03571428571428571,"
      },
      {
        "line": 7174,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 7175,
        "keyword": "Placeholder",
        "content": "\"content\": \"func testPhase7Placeholders() {\""
      },
      {
        "line": 7181,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.043478260869565216,"
      },
      {
        "line": 7186,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7187,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockEngine: AIEngine {\""
      },
      {
        "line": 7191,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7192,
        "keyword": "Mock",
        "content": "\"content\": \"let service = RealTimeImproviserService(engine: FusionEngine(engine: MockEngine()), context: \\\"Scene\\\")\""
      },
      {
        "line": 7196,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7197,
        "keyword": "Mock",
        "content": "\"content\": \"let service = RealTimeImproviserService(engine: FusionEngine(engine: MockEngine()))\""
      },
      {
        "line": 7203,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.1282051282051282,"
      },
      {
        "line": 7208,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7209,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockURLProtocol: URLProtocol {\""
      },
      {
        "line": 7213,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7214,
        "keyword": "Mock",
        "content": "\"content\": \"if let data = MockURLProtocol.responseData {\""
      },
      {
        "line": 7218,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7219,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.responseData = json\""
      },
      {
        "line": 7223,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7224,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 7228,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7229,
        "keyword": "Example",
        "content": "\"content\": \"let updater = AutoUpdater(updateURL: URL(string: \\\"https://example.com\\\")!, session: session)\""
      },
      {
        "line": 7235,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.05714285714285714,"
      },
      {
        "line": 7240,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7241,
        "keyword": "Sample",
        "content": "\"content\": \"XCTAssertTrue(exporter.exportToMP3(audioData: data, filename: \\\"sample\\\"))\""
      },
      {
        "line": 7245,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7246,
        "keyword": "Sample",
        "content": "\"content\": \"XCTAssertTrue(exporter.exportToWAV(audioData: data, filename: \\\"sample\\\"))\""
      },
      {
        "line": 7252,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.043478260869565216,"
      },
      {
        "line": 7257,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7258,
        "keyword": "Sample",
        "content": "\"content\": \"let tmp = FileManager.default.temporaryDirectory.appendingPathComponent(\\\"sample.txt\\\")\""
      },
      {
        "line": 7264,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.061224489795918366,"
      },
      {
        "line": 7269,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7270,
        "keyword": "Sample",
        "content": "\"content\": \"func testCustomSampleRate() {\""
      },
      {
        "line": 7274,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7275,
        "keyword": "Sample",
        "content": "\"content\": \"engine.synthesize(text: \\\"Hi\\\", with: profile, sampleRate: 22_050) { result in\""
      },
      {
        "line": 7279,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7280,
        "keyword": "Sample",
        "content": "\"content\": \"engine.cloneVoice(from: Data(\\\"sample\\\".utf8), name: \\\"Clone\\\") { profile in\""
      },
      {
        "line": 7286,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0625,"
      },
      {
        "line": 7291,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7292,
        "keyword": "Sample",
        "content": "\"content\": \"let profile = VoiceProfile(name: \\\"Sample\\\")\""
      },
      {
        "line": 7296,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7297,
        "keyword": "Sample",
        "content": "\"content\": \"XCTAssertEqual(client.voiceInfo(id: profile.id)?.name, \\\"Sample\\\")\""
      },
      {
        "line": 7303,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.043478260869565216,"
      },
      {
        "line": 7308,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7309,
        "keyword": "Sample",
        "content": "\"content\": \"let track = pipeline.mix(samples: [\\\"a\\\", \\\"b\\\"])\""
      },
      {
        "line": 7315,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.125,"
      },
      {
        "line": 7320,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7321,
        "keyword": "Sample",
        "content": "\"content\": \"let sample = [\""
      },
      {
        "line": 7325,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7326,
        "keyword": "Sample",
        "content": "\"content\": \"let outline = engine.analyze(books: sample)\""
      },
      {
        "line": 7332,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.1111111111111111,"
      },
      {
        "line": 7337,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7338,
        "keyword": "Sample",
        "content": "\"content\": \"trainer.uploadSample(for: \\\"Hero\\\", filePath: \\\"/path/sample.wav\\\")\""
      },
      {
        "line": 7342,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7343,
        "keyword": "Sample",
        "content": "\"content\": \"trainer.uploadSample(for: \\\"Hero\\\", filePath: \\\"/path/sample.wav\\\")\""
      },
      {
        "line": 7349,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.06818181818181818,"
      },
      {
        "line": 7354,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7355,
        "keyword": "Mock",
        "content": "\"content\": \"private struct MockEngine: AIEngine {\""
      },
      {
        "line": 7359,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7360,
        "keyword": "Mock",
        "content": "\"content\": \"let m1 = MockEngine(label: \\\"A\\\")\""
      },
      {
        "line": 7364,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7365,
        "keyword": "Mock",
        "content": "\"content\": \"let m2 = MockEngine(label: \\\"B\\\")\""
      },
      {
        "line": 7371,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.16666666666666666,"
      },
      {
        "line": 7376,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7377,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockURLProtocol: URLProtocol {\""
      },
      {
        "line": 7381,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7382,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.responseData = json\""
      },
      {
        "line": 7386,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7387,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.statusCode = 200\""
      },
      {
        "line": 7391,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7392,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 7396,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7397,
        "keyword": "Example",
        "content": "\"content\": \"provider.fetchInfo(from: URL(string: \\\"https://example.com/info\\\")!) { info in\""
      },
      {
        "line": 7401,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7402,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.responseData = nil\""
      },
      {
        "line": 7406,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7407,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.statusCode = 500\""
      },
      {
        "line": 7411,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7412,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 7416,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7417,
        "keyword": "Example",
        "content": "\"content\": \"provider.fetchInfo(from: URL(string: \\\"https://example.com/info\\\")!) { info in\""
      },
      {
        "line": 7423,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.17543859649122806,"
      },
      {
        "line": 7428,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7429,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockURLProtocol: URLProtocol {\""
      },
      {
        "line": 7433,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7434,
        "keyword": "Mock",
        "content": "\"content\": \"if let data = MockURLProtocol.responseData {\""
      },
      {
        "line": 7438,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7439,
        "keyword": "Mock",
        "content": "\"content\": \"let response = HTTPURLResponse(url: request.url!, statusCode: MockURLProtocol.status, httpVersion: nil, headerFields: nil)!\""
      },
      {
        "line": 7443,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7444,
        "keyword": "Mock",
        "content": "\"content\": \"let response = HTTPURLResponse(url: request.url!, statusCode: MockURLProtocol.status, httpVersion: nil, headerFields: nil)!\""
      },
      {
        "line": 7448,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7449,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.responseData = Data()\""
      },
      {
        "line": 7453,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7454,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.status = 200\""
      },
      {
        "line": 7458,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7459,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 7463,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7464,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.responseData = json\""
      },
      {
        "line": 7468,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7469,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.status = 200\""
      },
      {
        "line": 7473,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7474,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 7480,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.15555555555555556,"
      },
      {
        "line": 7485,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7486,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockURLProtocol: URLProtocol {\""
      },
      {
        "line": 7490,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7491,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.statusCode = 200\""
      },
      {
        "line": 7495,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7496,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 7500,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7501,
        "keyword": "Example",
        "content": "\"content\": \"manager.postUpdate(\\\"hello\\\", to: URL(string: \\\"https://example.com\\\")!, token: \\\"t\\\") { success in\""
      },
      {
        "line": 7505,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7506,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.statusCode = 400\""
      },
      {
        "line": 7510,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7511,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 7515,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7516,
        "keyword": "Example",
        "content": "\"content\": \"manager.postUpdate(\\\"fail\\\", to: URL(string: \\\"https://example.com\\\")!, token: \\\"t\\\") { success in\""
      },
      {
        "line": 7522,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.004484304932735426,"
      },
      {
        "line": 7527,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7528,
        "keyword": "Sample",
        "content": "\"content\": \"XCTAssertTrue(TrainingPipeline().prepare(samples: [0.1]))\""
      },
      {
        "line": 7534,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.08,"
      },
      {
        "line": 7539,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7540,
        "keyword": "Sample",
        "content": "\"content\": \"func testCustomSampleRateConversion() throws {\""
      },
      {
        "line": 7544,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7545,
        "keyword": "Sample",
        "content": "\"content\": \"let converter = EbookConverter(sampleRate: 22_050)\""
      },
      {
        "line": 7551,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.14285714285714285,"
      },
      {
        "line": 7556,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7557,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockURLProtocol: URLProtocol {\""
      },
      {
        "line": 7561,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7562,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.responseData = json\""
      },
      {
        "line": 7566,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7567,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.fail = false\""
      },
      {
        "line": 7571,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7572,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 7576,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7577,
        "keyword": "Example",
        "content": "\"content\": \"manager.fetchFeed(from: URL(string: \\\"https://example.com/feed\\\")!) { feed in\""
      },
      {
        "line": 7581,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7582,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.responseData = nil\""
      },
      {
        "line": 7586,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7587,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.fail = true\""
      },
      {
        "line": 7591,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7592,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 7596,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7597,
        "keyword": "Example",
        "content": "\"content\": \"manager.fetchFeed(from: URL(string: \\\"https://example.com/feed\\\")!) { feed in\""
      },
      {
        "line": 7601,
        "keyword": "Placeholder",
        "content": "\"Tests/CreatorCoreForgeTests/AudioFeaturePlaceholdersTests.swift\": {"
      },
      {
        "line": 7603,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.03773584905660377,"
      },
      {
        "line": 7608,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 7609,
        "keyword": "Placeholder",
        "content": "\"content\": \"final class AudioFeaturePlaceholdersTests: XCTestCase {\""
      },
      {
        "line": 7613,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 7614,
        "keyword": "Placeholder",
        "content": "\"content\": \"func testPlaceholderInitializers() {\""
      },
      {
        "line": 7620,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.1111111111111111,"
      },
      {
        "line": 7625,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7626,
        "keyword": "Sample",
        "content": "\"content\": \"let url1 = tmpDir.appendingPathComponent(\\\"sample1.txt\\\")\""
      },
      {
        "line": 7630,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7631,
        "keyword": "Sample",
        "content": "\"content\": \"let url2 = tmpDir.appendingPathComponent(\\\"sample2.txt\\\")\""
      },
      {
        "line": 7637,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.041666666666666664,"
      },
      {
        "line": 7642,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7643,
        "keyword": "Sample",
        "content": "\"content\": \"let format = AVAudioFormat(standardFormatWithSampleRate: 44100, channels: 1)!\""
      },
      {
        "line": 7649,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.011764705882352941,"
      },
      {
        "line": 7654,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7655,
        "keyword": "Example",
        "content": "\"content\": \"// Example usage:\""
      },
      {
        "line": 7661,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.06349206349206349,"
      },
      {
        "line": 7666,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7667,
        "keyword": "Sample",
        "content": "\"content\": \"private let sampleRate: Int\""
      },
      {
        "line": 7671,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7672,
        "keyword": "Sample",
        "content": "\"content\": \"sampleRate: Int = 44100,\""
      },
      {
        "line": 7676,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7677,
        "keyword": "Sample",
        "content": "\"content\": \"self.sampleRate = sampleRate\""
      },
      {
        "line": 7681,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7682,
        "keyword": "Sample",
        "content": "\"content\": \"sampleRate: sampleRate) { result in\""
      },
      {
        "line": 7688,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.022727272727272728,"
      },
      {
        "line": 7693,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7694,
        "keyword": "Example",
        "content": "\"content\": \"public init(baseURL: URL = URL(string: \\\"https://sync.example.com\\\")!,\""
      },
      {
        "line": 7700,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.17391304347826086,"
      },
      {
        "line": 7705,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7706,
        "keyword": "Sample",
        "content": "\"content\": \"/// Handles voice sample uploads and retrieval using `VoiceCloneTrainer` and `VoiceMemoryManager`.\""
      },
      {
        "line": 7710,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7711,
        "keyword": "Sample",
        "content": "\"content\": \"/// Upload and clone a voice sample for a character.\""
      },
      {
        "line": 7715,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7716,
        "keyword": "Sample",
        "content": "\"content\": \"public func uploadSample(character: String, sample: Data, completion: @escaping (VoiceProfile) -> Void) {\""
      },
      {
        "line": 7720,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7721,
        "keyword": "Sample",
        "content": "\"content\": \"trainer.train(from: sample, name: character) { profile in\""
      },
      {
        "line": 7727,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.14285714285714285,"
      },
      {
        "line": 7732,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7733,
        "keyword": "Sample",
        "content": "\"content\": \"public func train(from sample: Data, name: String, completion: @escaping (VoiceProfile) -> Void) {\""
      },
      {
        "line": 7737,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7738,
        "keyword": "Sample",
        "content": "\"content\": \"voiceAI.cloneVoice(from: sample, name: name) { profile in\""
      },
      {
        "line": 7744,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.007142857142857143,"
      },
      {
        "line": 7749,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7750,
        "keyword": "Example",
        "content": "\"content\": \"// Example:\""
      },
      {
        "line": 7756,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0847457627118644,"
      },
      {
        "line": 7761,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 7762,
        "keyword": "Placeholder",
        "content": "\"content\": \"/// audio track label, a rendered clip placeholder, and the list of\""
      },
      {
        "line": 7766,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7767,
        "keyword": "Sample",
        "content": "\"content\": \"// Derive pseudo audio sample identifiers from the scene text\""
      },
      {
        "line": 7771,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7772,
        "keyword": "Sample",
        "content": "\"content\": \"let samples = scenes.map { \\\"sound-\\\\($0.hashValue)\\\" }\""
      },
      {
        "line": 7776,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7777,
        "keyword": "Sample",
        "content": "\"content\": \"var processed = audioPipeline.addEcho(to: samples)\""
      },
      {
        "line": 7781,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7782,
        "keyword": "Sample",
        "content": "\"content\": \"let audioTrack = audioPipeline.mix(samples: processed)\""
      },
      {
        "line": 7788,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.18691588785046728,"
      },
      {
        "line": 7793,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7794,
        "keyword": "Sample",
        "content": "\"content\": \"///   - sample: Voice sample data.\""
      },
      {
        "line": 7798,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7799,
        "keyword": "Sample",
        "content": "\"content\": \"public func cloneVoice(from sample: Data, name: String, completion: @escaping (VoiceProfile) -> Void) {\""
      },
      {
        "line": 7803,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7804,
        "keyword": "Sample",
        "content": "\"content\": \"let avg = sample.reduce(0) { $0 + Int($1) } / max(sample.count, 1)\""
      },
      {
        "line": 7808,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 7809,
        "keyword": "Mock",
        "content": "\"content\": \"///   - completion: Returns synthesized audio data (mocked).\""
      },
      {
        "line": 7813,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7814,
        "keyword": "Sample",
        "content": "\"content\": \"sampleRate: Int = 44100,\""
      },
      {
        "line": 7818,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7819,
        "keyword": "Sample",
        "content": "\"content\": \"var samples: [Int16] = []\""
      },
      {
        "line": 7823,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7824,
        "keyword": "Sample",
        "content": "\"content\": \"samples += Self.sineWave(frequency: freq, duration: 0.05, sampleRate: sampleRate)\""
      },
      {
        "line": 7828,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7829,
        "keyword": "Sample",
        "content": "\"content\": \"let data = Self.encodeWAV(samples: samples, sampleRate: sampleRate)\""
      },
      {
        "line": 7833,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7834,
        "keyword": "Sample",
        "content": "\"content\": \"private static func sineWave(frequency: Double, duration: Double, sampleRate: Int) -> [Int16] {\""
      },
      {
        "line": 7838,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7839,
        "keyword": "Sample",
        "content": "\"content\": \"let count = Int(Double(sampleRate) * duration)\""
      },
      {
        "line": 7843,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7844,
        "keyword": "Sample",
        "content": "\"content\": \"let t = Double(i) / Double(sampleRate)\""
      },
      {
        "line": 7848,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7849,
        "keyword": "Sample",
        "content": "\"content\": \"private static func encodeWAV(samples: [Int16], sampleRate: Int) -> Data {\""
      },
      {
        "line": 7853,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7854,
        "keyword": "Sample",
        "content": "\"content\": \"let byteRate = sampleRate * 2\""
      },
      {
        "line": 7858,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7859,
        "keyword": "Sample",
        "content": "\"content\": \"let dataSize = samples.count * 2\""
      },
      {
        "line": 7863,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7864,
        "keyword": "Sample",
        "content": "\"content\": \"var sampleRate32 = UInt32(sampleRate)\""
      },
      {
        "line": 7868,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7869,
        "keyword": "Sample",
        "content": "\"content\": \"data.append(Data(bytes: &sampleRate32, count: 4))\""
      },
      {
        "line": 7873,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7874,
        "keyword": "Sample",
        "content": "\"content\": \"var bitsPerSample: UInt16 = 16\""
      },
      {
        "line": 7878,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7879,
        "keyword": "Sample",
        "content": "\"content\": \"data.append(Data(bytes: &bitsPerSample, count: 2))\""
      },
      {
        "line": 7883,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7884,
        "keyword": "Sample",
        "content": "\"content\": \"samples.forEach { sample in\""
      },
      {
        "line": 7888,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7889,
        "keyword": "Sample",
        "content": "\"content\": \"var s = sample\""
      },
      {
        "line": 7895,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.36363636363636365,"
      },
      {
        "line": 7900,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7901,
        "keyword": "Sample",
        "content": "\"content\": \"/// Applies a simple echo label to each sample identifier.\""
      },
      {
        "line": 7905,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7906,
        "keyword": "Sample",
        "content": "\"content\": \"public func addEcho(to samples: [String]) -> [String] {\""
      },
      {
        "line": 7910,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7911,
        "keyword": "Sample",
        "content": "\"content\": \"samples.flatMap { [$0, \\\"\\\\($0)-echo\\\"] }\""
      },
      {
        "line": 7915,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7916,
        "keyword": "Sample",
        "content": "\"content\": \"public func shiftPitch(of samples: [String], factor: Double) -> [String] {\""
      },
      {
        "line": 7920,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7921,
        "keyword": "Sample",
        "content": "\"content\": \"samples.map { \\\"\\\\($0)|pitch:\\\\(factor)\\\" }\""
      },
      {
        "line": 7925,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7926,
        "keyword": "Sample",
        "content": "\"content\": \"/// Combines processed samples into a single track label.\""
      },
      {
        "line": 7930,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7931,
        "keyword": "Sample",
        "content": "\"content\": \"public func mix(samples: [String]) -> String {\""
      },
      {
        "line": 7935,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7936,
        "keyword": "Sample",
        "content": "\"content\": \"samples.joined(separator: \\\"+\\\")\""
      },
      {
        "line": 7942,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.044444444444444446,"
      },
      {
        "line": 7947,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7948,
        "keyword": "Sample",
        "content": "\"content\": \"sampleRate: Int = 44100,\""
      },
      {
        "line": 7952,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7953,
        "keyword": "Sample",
        "content": "\"content\": \"sampleRate: sampleRate,\""
      },
      {
        "line": 7959,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.11764705882352941,"
      },
      {
        "line": 7964,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7965,
        "keyword": "Sample",
        "content": "\"content\": \"for (i, sample) in track.enumerated() {\""
      },
      {
        "line": 7969,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7970,
        "keyword": "Sample",
        "content": "\"content\": \"result[i] += sample\""
      },
      {
        "line": 7976,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.007575757575757576,"
      },
      {
        "line": 7981,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 7982,
        "keyword": "Example",
        "content": "\"content\": \"// Example extraction code adapted from ZIPFoundation README:\""
      },
      {
        "line": 7988,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.22807017543859648,"
      },
      {
        "line": 7993,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7994,
        "keyword": "Sample",
        "content": "\"content\": \"/// Represents an audio sample used to train a custom voice.\""
      },
      {
        "line": 7998,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 7999,
        "keyword": "Sample",
        "content": "\"content\": \"public struct VoiceSample {\""
      },
      {
        "line": 8003,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8004,
        "keyword": "Sample",
        "content": "\"content\": \"/// Character the sample is associated with.\""
      },
      {
        "line": 8008,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8009,
        "keyword": "Sample",
        "content": "\"content\": \"/// Local file path to the audio sample.\""
      },
      {
        "line": 8013,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8014,
        "keyword": "Sample",
        "content": "\"content\": \"/// Basic engine that tracks uploaded samples and simulates training.\""
      },
      {
        "line": 8018,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8019,
        "keyword": "Sample",
        "content": "\"content\": \"/// Upload a voice sample for a character.\""
      },
      {
        "line": 8023,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8024,
        "keyword": "Sample",
        "content": "\"content\": \"///   - filePath: Path to the sample audio file.\""
      },
      {
        "line": 8028,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8029,
        "keyword": "Sample",
        "content": "\"content\": \"public func uploadSample(for character: String, filePath: String) {\""
      },
      {
        "line": 8033,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8034,
        "keyword": "Sample",
        "content": "\"content\": \"print(\\\"Uploading voice sample for \\\\(character)...\\\")\""
      },
      {
        "line": 8038,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8039,
        "keyword": "Sample",
        "content": "\"content\": \"/// Train a voice using the previously uploaded sample.\""
      },
      {
        "line": 8043,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8044,
        "keyword": "Sample",
        "content": "\"content\": \"guard let samplePath = trainedVoices[character] else {\""
      },
      {
        "line": 8048,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8049,
        "keyword": "Sample",
        "content": "\"content\": \"print(\\\"No sample uploaded for \\\\(character).\\\")\""
      },
      {
        "line": 8053,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8054,
        "keyword": "Sample",
        "content": "\"content\": \"print(\\\"Training voice for \\\\(character) using sample at \\\\(samplePath)...\\\")\""
      },
      {
        "line": 8060,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.017241379310344827,"
      },
      {
        "line": 8065,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8066,
        "keyword": "Placeholder",
        "content": "\"content\": \"/// and generates basic placeholder animation frames.\""
      },
      {
        "line": 8072,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.00558659217877095,"
      },
      {
        "line": 8077,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8078,
        "keyword": "Placeholder",
        "content": "\"content\": \"/// Placeholder implementation when Combine is unavailable.\""
      },
      {
        "line": 8084,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.024390243902439025,"
      },
      {
        "line": 8089,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8090,
        "keyword": "Example",
        "content": "\"content\": \"/// Adapted from SwiftyStoreKit example (MIT License).\""
      },
      {
        "line": 8096,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.00980392156862745,"
      },
      {
        "line": 8101,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8102,
        "keyword": "Example",
        "content": "\"content\": \"// Example:\""
      },
      {
        "line": 8108,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.09090909090909091,"
      },
      {
        "line": 8113,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 8114,
        "keyword": "Mock",
        "content": "\"content\": \"/// Generates alternate emotion branches using a mock quantum selection.\""
      },
      {
        "line": 8120,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.21052631578947367,"
      },
      {
        "line": 8125,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8126,
        "keyword": "Sample",
        "content": "\"content\": \"public func trim(_ samples: [Float], to count: Int) -> [Float] {\""
      },
      {
        "line": 8130,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8131,
        "keyword": "Sample",
        "content": "\"content\": \"Array(samples.prefix(count))\""
      },
      {
        "line": 8135,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8136,
        "keyword": "Sample",
        "content": "\"content\": \"public func prepare(samples: [Float]) -> Bool {\""
      },
      {
        "line": 8140,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8141,
        "keyword": "Sample",
        "content": "\"content\": \"!samples.isEmpty\""
      },
      {
        "line": 8147,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.030303030303030304,"
      },
      {
        "line": 8152,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8153,
        "keyword": "Example",
        "content": "\"content\": \"public init(updateURL: URL = URL(string: \\\"https://example.com/latest.json\\\")!,\""
      },
      {
        "line": 8159,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.008403361344537815,"
      },
      {
        "line": 8164,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8165,
        "keyword": "Example",
        "content": "\"content\": \"// Example usage:\""
      },
      {
        "line": 8171,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.022222222222222223,"
      },
      {
        "line": 8176,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8177,
        "keyword": "Example",
        "content": "\"content\": \"public init(baseURL: URL = URL(string: \\\"https://sync.example.com/library\\\")!,\""
      },
      {
        "line": 8183,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.023255813953488372,"
      },
      {
        "line": 8188,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8189,
        "keyword": "Placeholder",
        "content": "\"content\": \"// Placeholder purchase flow; integrate real StoreKit logic in the app.\""
      },
      {
        "line": 8195,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.017857142857142856,"
      },
      {
        "line": 8200,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8201,
        "keyword": "Example",
        "content": "\"content\": \"// Example usage:\""
      },
      {
        "line": 8207,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.16417910447761194,"
      },
      {
        "line": 8212,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8213,
        "keyword": "Sample",
        "content": "\"content\": \"let sampleRate = 44_100\""
      },
      {
        "line": 8217,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8218,
        "keyword": "Sample",
        "content": "\"content\": \"let frameCount = Int(duration * Double(sampleRate))\""
      },
      {
        "line": 8222,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8223,
        "keyword": "Sample",
        "content": "\"content\": \"var samples = [Int16](repeating: 0, count: frameCount)\""
      },
      {
        "line": 8227,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8228,
        "keyword": "Sample",
        "content": "\"content\": \"let t = Double(i) / Double(sampleRate)\""
      },
      {
        "line": 8232,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8233,
        "keyword": "Sample",
        "content": "\"content\": \"samples[i] = value\""
      },
      {
        "line": 8237,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8238,
        "keyword": "Sample",
        "content": "\"content\": \"let byteCount = samples.count * MemoryLayout<Int16>.size\""
      },
      {
        "line": 8242,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8243,
        "keyword": "Sample",
        "content": "\"content\": \"data.append(UInt32(sampleRate).littleEndianData)\""
      },
      {
        "line": 8247,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8248,
        "keyword": "Sample",
        "content": "\"content\": \"data.append(UInt32(sampleRate * 2).littleEndianData) // byte rate\""
      },
      {
        "line": 8252,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8253,
        "keyword": "Sample",
        "content": "\"content\": \"data.append(UInt16(16).littleEndianData) // bits per sample\""
      },
      {
        "line": 8257,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8258,
        "keyword": "Sample",
        "content": "\"content\": \"// Append samples\""
      },
      {
        "line": 8262,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8263,
        "keyword": "Sample",
        "content": "\"content\": \"samples.withUnsafeBufferPointer { ptr in\""
      },
      {
        "line": 8269,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.008695652173913044,"
      },
      {
        "line": 8274,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8275,
        "keyword": "Example",
        "content": "\"content\": \"// Example usage:\""
      },
      {
        "line": 8281,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.01020408163265306,"
      },
      {
        "line": 8286,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 8287,
        "keyword": "Content for",
        "content": "\"content\": \"/// Flag NSFW content for moderation review.\""
      },
      {
        "line": 8291,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 8292,
        "keyword": "Content for",
        "content": "\"content\": \"/// Detect safe vs unsafe content for previews.\""
      },
      {
        "line": 8298,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.014925373134328358,"
      },
      {
        "line": 8303,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8304,
        "keyword": "Example",
        "content": "\"content\": \"// Example usage:\""
      },
      {
        "line": 8310,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.043478260869565216,"
      },
      {
        "line": 8315,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8316,
        "keyword": "Sample",
        "content": "\"content\": \"After building the project you can run the sample renderer which outputs a short demo animation:\""
      },
      {
        "line": 8322,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.029411764705882353,"
      },
      {
        "line": 8327,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8328,
        "keyword": "Sample",
        "content": "\"content\": \"npm run train-sample\""
      },
      {
        "line": 8334,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.2037037037037037,"
      },
      {
        "line": 8339,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8340,
        "keyword": "Sample",
        "content": "\"content\": \"SAMPLE_RATE = 44100\""
      },
      {
        "line": 8344,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8345,
        "keyword": "Sample",
        "content": "\"content\": \"def write_wave(path: str, samples):\""
      },
      {
        "line": 8349,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8350,
        "keyword": "Sample",
        "content": "\"content\": \"wav.setframerate(SAMPLE_RATE)\""
      },
      {
        "line": 8354,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8355,
        "keyword": "Sample",
        "content": "\"content\": \"for s in samples:\""
      },
      {
        "line": 8359,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8360,
        "keyword": "Sample",
        "content": "\"content\": \"frame_count = int(SAMPLE_RATE * duration)\""
      },
      {
        "line": 8364,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8365,
        "keyword": "Sample",
        "content": "\"content\": \"samples = []\""
      },
      {
        "line": 8369,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8370,
        "keyword": "Sample",
        "content": "\"content\": \"t = i / SAMPLE_RATE\""
      },
      {
        "line": 8374,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8375,
        "keyword": "Sample",
        "content": "\"content\": \"samples.append(math.sin(2 * math.pi * frequency * t) * 0.4)\""
      },
      {
        "line": 8379,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8380,
        "keyword": "Sample",
        "content": "\"content\": \"return samples\""
      },
      {
        "line": 8384,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8385,
        "keyword": "Sample",
        "content": "\"content\": \"samples = generate_music(args.mood, args.duration)\""
      },
      {
        "line": 8389,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8390,
        "keyword": "Sample",
        "content": "\"content\": \"write_wave(out_path, samples)\""
      },
      {
        "line": 8396,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.018518518518518517,"
      },
      {
        "line": 8401,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8402,
        "keyword": "Example",
        "content": "\"content\": \"Adapted from the Requests library examples (Apache-2.0).\""
      },
      {
        "line": 8406,
        "keyword": "Placeholder",
        "content": "\"scripts/placeholder_scan.py\": {"
      },
      {
        "line": 8408,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.2,"
      },
      {
        "line": 8413,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 8414,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"Content for\\\",\""
      },
      {
        "line": 8418,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 8419,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"TODO\\\",\""
      },
      {
        "line": 8423,
        "keyword": "TBD",
        "content": "\"keyword\": \"TBD\","
      },
      {
        "line": 8424,
        "keyword": "TBD",
        "content": "\"content\": \"\\\"TBD\\\",\""
      },
      {
        "line": 8428,
        "keyword": "Coming soon",
        "content": "\"keyword\": \"Coming soon\","
      },
      {
        "line": 8429,
        "keyword": "Coming soon",
        "content": "\"content\": \"\\\"Coming soon\\\",\""
      },
      {
        "line": 8433,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 8434,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"Mock\\\",\""
      },
      {
        "line": 8438,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8439,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"Placeholder\\\",\""
      },
      {
        "line": 8443,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8444,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"Sample\\\",\""
      },
      {
        "line": 8448,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8449,
        "keyword": "Example",
        "content": "\"content\": \"\\\"Example\\\",\""
      },
      {
        "line": 8453,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8454,
        "keyword": "Placeholder",
        "content": "\"content\": \"placeholder_lines = 0\""
      },
      {
        "line": 8458,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8459,
        "keyword": "Placeholder",
        "content": "\"content\": \"placeholder_lines += 1\""
      },
      {
        "line": 8463,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8464,
        "keyword": "Placeholder",
        "content": "\"content\": \"pct = placeholder_lines / total_lines if total_lines else 0\""
      },
      {
        "line": 8468,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8469,
        "keyword": "Placeholder",
        "content": "\"content\": \"'placeholder_percentage': pct,\""
      },
      {
        "line": 8473,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8474,
        "keyword": "Placeholder",
        "content": "\"content\": \"parser = argparse.ArgumentParser(description='Scan repo for placeholder keywords')\""
      },
      {
        "line": 8478,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8479,
        "keyword": "Placeholder",
        "content": "\"content\": \"with open('placeholder_scan_report.json', 'w', encoding='utf-8') as f:\""
      },
      {
        "line": 8483,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8484,
        "keyword": "Placeholder",
        "content": "\"content\": \"print(f'Scanned {len(result)} files. Report written to placeholder_scan_report.json')\""
      },
      {
        "line": 8490,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.3548387096774194,"
      },
      {
        "line": 8495,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8496,
        "keyword": "Sample",
        "content": "\"content\": \"SAMPLE_RATE = 44100\""
      },
      {
        "line": 8500,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8501,
        "keyword": "Sample",
        "content": "\"content\": \"def write_wave(path, samples):\""
      },
      {
        "line": 8505,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8506,
        "keyword": "Sample",
        "content": "\"content\": \"wav.setframerate(SAMPLE_RATE)\""
      },
      {
        "line": 8510,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8511,
        "keyword": "Sample",
        "content": "\"content\": \"for s in samples:\""
      },
      {
        "line": 8515,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8516,
        "keyword": "Sample",
        "content": "\"content\": \"samples = []\""
      },
      {
        "line": 8520,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8521,
        "keyword": "Sample",
        "content": "\"content\": \"for i in range(int(SAMPLE_RATE * duration)):\""
      },
      {
        "line": 8525,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8526,
        "keyword": "Sample",
        "content": "\"content\": \"sweep = math.sin(i / SAMPLE_RATE * 0.5) * 0.3\""
      },
      {
        "line": 8530,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8531,
        "keyword": "Sample",
        "content": "\"content\": \"samples.append(base + sweep)\""
      },
      {
        "line": 8535,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8536,
        "keyword": "Sample",
        "content": "\"content\": \"return samples\""
      },
      {
        "line": 8540,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8541,
        "keyword": "Sample",
        "content": "\"content\": \"samples = []\""
      },
      {
        "line": 8545,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8546,
        "keyword": "Sample",
        "content": "\"content\": \"for i in range(int(SAMPLE_RATE * duration)):\""
      },
      {
        "line": 8550,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8551,
        "keyword": "Sample",
        "content": "\"content\": \"samples.append(noise)\""
      },
      {
        "line": 8555,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8556,
        "keyword": "Sample",
        "content": "\"content\": \"return samples\""
      },
      {
        "line": 8560,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8561,
        "keyword": "Sample",
        "content": "\"content\": \"samples = []\""
      },
      {
        "line": 8565,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8566,
        "keyword": "Sample",
        "content": "\"content\": \"total_samples = int(SAMPLE_RATE * duration)\""
      },
      {
        "line": 8570,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8571,
        "keyword": "Sample",
        "content": "\"content\": \"for i in range(total_samples):\""
      },
      {
        "line": 8575,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8576,
        "keyword": "Sample",
        "content": "\"content\": \"t = i / SAMPLE_RATE\""
      },
      {
        "line": 8580,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8581,
        "keyword": "Sample",
        "content": "\"content\": \"samples.append(value * 0.7)\""
      },
      {
        "line": 8585,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8586,
        "keyword": "Sample",
        "content": "\"content\": \"return samples\""
      },
      {
        "line": 8590,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8591,
        "keyword": "Sample",
        "content": "\"content\": \"samples = []\""
      },
      {
        "line": 8595,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8596,
        "keyword": "Sample",
        "content": "\"content\": \"total_samples = int(SAMPLE_RATE * duration)\""
      },
      {
        "line": 8600,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8601,
        "keyword": "Sample",
        "content": "\"content\": \"for i in range(total_samples):\""
      },
      {
        "line": 8605,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8606,
        "keyword": "Sample",
        "content": "\"content\": \"t = i / SAMPLE_RATE\""
      },
      {
        "line": 8610,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8611,
        "keyword": "Sample",
        "content": "\"content\": \"samples.append(value)\""
      },
      {
        "line": 8615,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8616,
        "keyword": "Sample",
        "content": "\"content\": \"return samples\""
      },
      {
        "line": 8620,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8621,
        "keyword": "Sample",
        "content": "\"content\": \"samples = []\""
      },
      {
        "line": 8625,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8626,
        "keyword": "Sample",
        "content": "\"content\": \"for i in range(int(SAMPLE_RATE * duration)):\""
      },
      {
        "line": 8630,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8631,
        "keyword": "Sample",
        "content": "\"content\": \"base = math.sin(2 * math.pi * 200 * i / SAMPLE_RATE)\""
      },
      {
        "line": 8635,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8636,
        "keyword": "Sample",
        "content": "\"content\": \"envelope = (1 - math.cos(2 * math.pi * i / (SAMPLE_RATE * duration))) / 2\""
      },
      {
        "line": 8640,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8641,
        "keyword": "Sample",
        "content": "\"content\": \"samples.append(base * envelope * 0.4)\""
      },
      {
        "line": 8645,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8646,
        "keyword": "Sample",
        "content": "\"content\": \"return samples\""
      },
      {
        "line": 8650,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8651,
        "keyword": "Sample",
        "content": "\"content\": \"samples = EFFECT_MAP[args.effect](args.duration)\""
      },
      {
        "line": 8655,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8656,
        "keyword": "Sample",
        "content": "\"content\": \"write_wave(args.output, samples)\""
      },
      {
        "line": 8662,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.014705882352941176,"
      },
      {
        "line": 8667,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8668,
        "keyword": "Placeholder",
        "content": "\"content\": \"print(f\\\"Updated {path} with placeholder features to reach 200 per app.\\\")\""
      },
      {
        "line": 8674,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0481283422459893,"
      },
      {
        "line": 8679,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8680,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"\\\"\\\"Return a language-aware placeholder snippet.\\\"\\\"\\\"\""
      },
      {
        "line": 8684,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8685,
        "keyword": "Placeholder",
        "content": "\"content\": \"def _parse_placeholder_line(line: str) -> str | None:\""
      },
      {
        "line": 8689,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8690,
        "keyword": "Placeholder",
        "content": "\"content\": \"def upgrade_placeholders(gen_root: str) -> None:\""
      },
      {
        "line": 8694,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8695,
        "keyword": "Placeholder",
        "content": "\"content\": \"feature = _parse_placeholder_line(first)\""
      },
      {
        "line": 8699,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8700,
        "keyword": "Placeholder",
        "content": "\"content\": \"parser = argparse.ArgumentParser(description=\\\"Generate or upgrade placeholder code files\\\")\""
      },
      {
        "line": 8704,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8705,
        "keyword": "Placeholder",
        "content": "\"content\": \"\\\"--upgrade-placeholders\\\",\""
      },
      {
        "line": 8709,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8710,
        "keyword": "Placeholder",
        "content": "\"content\": \"help=\\\"Replace existing placeholders in the generated folder using OpenAI\\\",\""
      },
      {
        "line": 8714,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8715,
        "keyword": "Placeholder",
        "content": "\"content\": \"if args.upgrade_placeholders:\""
      },
      {
        "line": 8719,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 8720,
        "keyword": "Placeholder",
        "content": "\"content\": \"upgrade_placeholders(os.path.join(repo, \\\"generated\\\"))\""
      },
      {
        "line": 8726,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.07692307692307693,"
      },
      {
        "line": 8731,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8732,
        "keyword": "Example",
        "content": "\"content\": \"Example usage:\""
      },
      {
        "line": 8738,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.008620689655172414,"
      },
      {
        "line": 8743,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8744,
        "keyword": "Sample",
        "content": "\"content\": \"- [x] Prompt validation with multiple sample inputs and outputs\""
      },
      {
        "line": 8748,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8749,
        "keyword": "Sample",
        "content": "\"content\": \"- [x] PromptTemplates.md (AI workflows, sample prompts)\""
      },
      {
        "line": 8753,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 8754,
        "keyword": "Sample",
        "content": "\"content\": \"- [x] Allow users to test voice preview samples per character before rendering\""
      },
      {
        "line": 8758,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 8759,
        "keyword": "Content for",
        "content": "\"content\": \"- [x] Flag NSFW content for internal moderation or publishing filter logic\""
      },
      {
        "line": 8763,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 8764,
        "keyword": "Content for",
        "content": "\"content\": \"- [x] Auto-detect safe vs. unsafe content for preview-only versions\""
      },
      {
        "line": 8770,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.058823529411764705,"
      },
      {
        "line": 8775,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8776,
        "keyword": "Example",
        "content": "\"content\": \"# Example correction:\""
      },
      {
        "line": 8780,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8781,
        "keyword": "Example",
        "content": "\"content\": \"# Example adding extra arguments -> command: [\\\"--share\\\"] or -> command: [\\\"--help\\\"]\""
      },
      {
        "line": 8787,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.01953125,"
      },
      {
        "line": 8792,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8793,
        "keyword": "Example",
        "content": "\"content\": \"**Example**\""
      },
      {
        "line": 8797,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8798,
        "keyword": "Example",
        "content": "\"content\": \"![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\""
      },
      {
        "line": 8802,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8803,
        "keyword": "Example",
        "content": "\"content\": \"- [Headless Custom XTTS Model Usage](#example-of-custom-model-zip-upload)\""
      },
      {
        "line": 8807,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8808,
        "keyword": "Example",
        "content": "\"content\": \"- \\ud83c\\udf99\\ufe0f High-quality text-to-speech with [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) and [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms) (and more).\""
      },
      {
        "line": 8812,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8813,
        "keyword": "Example",
        "content": "\"content\": \"###  Example of Custom Model Zip Upload\""
      },
      {
        "line": 8817,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8818,
        "keyword": "Example",
        "content": "\"content\": \"(must be a .zip file containing the mandatory model files. Example for XTTS: config.json, model.pth, vocab.json and ref.wav)\""
      },
      {
        "line": 8822,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8823,
        "keyword": "Example",
        "content": "\"content\": \"Example usage:\""
      },
      {
        "line": 8827,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8828,
        "keyword": "Example",
        "content": "\"content\": \"For example:\""
      },
      {
        "line": 8832,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8833,
        "keyword": "Example",
        "content": "\"content\": \"- Example: `docker run --pull always athomasson2/ebook2audiobook app.py --script_mode full_docker` - > corrected - > `docker run --pull always athomasson2/ebook2audiobook`\""
      },
      {
        "line": 8837,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8838,
        "keyword": "Example",
        "content": "\"content\": \"Example of adding this fix in the `docker run` command\""
      },
      {
        "line": 8844,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.05,"
      },
      {
        "line": 8849,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8850,
        "keyword": "Example",
        "content": "\"content\": \"# Example correction:\""
      },
      {
        "line": 8854,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8855,
        "keyword": "Example",
        "content": "\"content\": \"# Example adding extra arguments -> command: [\\\"--share\\\"] or -> command: [\\\"--help\\\"]\""
      },
      {
        "line": 8861,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0234375,"
      },
      {
        "line": 8866,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8867,
        "keyword": "Example",
        "content": "\"content\": \"Examples of behavior that contributes to a positive environment for our\""
      },
      {
        "line": 8871,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8872,
        "keyword": "Example",
        "content": "\"content\": \"Examples of unacceptable behavior include:\""
      },
      {
        "line": 8876,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8877,
        "keyword": "Example",
        "content": "\"content\": \"Examples of representing our community include using an official e-mail address,\""
      },
      {
        "line": 8883,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0033333333333333335,"
      },
      {
        "line": 8888,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8889,
        "keyword": "Example",
        "content": "\"content\": \"Example usage:\""
      },
      {
        "line": 8895,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.03125,"
      },
      {
        "line": 8900,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8901,
        "keyword": "Example",
        "content": "\"content\": \"# Example Usage\""
      },
      {
        "line": 8907,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.018867924528301886,"
      },
      {
        "line": 8912,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8913,
        "keyword": "Example",
        "content": "\"content\": \"Example of loop command is seen here\""
      },
      {
        "line": 8919,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0019267822736030828,"
      },
      {
        "line": 8924,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8925,
        "keyword": "Example",
        "content": "\"content\": \"echo \\\"Example: $0 --headless --script_mode full_docker --language eng --tts_engine fairseq\\\"\""
      },
      {
        "line": 8931,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.00980392156862745,"
      },
      {
        "line": 8936,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8937,
        "keyword": "Example",
        "content": "\"content\": \"- \\ud83c\\udf99\\ufe0f \\u064a\\u0642\\u062f\\u0645 \\u062a\\u062d\\u0648\\u064a\\u0644 \\u0627\\u0644\\u0646\\u0635 \\u0625\\u0644\\u0649 \\u0643\\u0644\\u0627\\u0645 \\u0628\\u062c\\u0648\\u062f\\u0629 \\u0639\\u0627\\u0644\\u064a\\u0629 \\u0628\\u0627\\u0633\\u062a\\u062e\\u062f\\u0627\\u0645 [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) \\u0648 [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms).\""
      },
      {
        "line": 8941,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 8942,
        "keyword": "TODO",
        "content": "\"content\": \"--language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\\u00e1ncoat\\u00e1n, cac-dialect_sanmateoixtat\\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\\u00edadejes\\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng).\""
      },
      {
        "line": 8946,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8947,
        "keyword": "Example",
        "content": "\"content\": \"Example usage:\""
      },
      {
        "line": 8951,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8952,
        "keyword": "Example",
        "content": "\"content\": \"- **\\u0645\\u062b\\u0627\\u0644 \\u0644\\u0644\\u0645\\u062e\\u0631\\u062c\\u0627\\u062a**: ![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\""
      },
      {
        "line": 8958,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.009153318077803204,"
      },
      {
        "line": 8963,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8964,
        "keyword": "Example",
        "content": "\"content\": \"- \\ud83c\\udf99\\ufe0f \\u4f7f\\u7528[Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2)\\u548c[Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms)\\u7684\\u9ad8\\u8d28\\u91cf\\u6587\\u672c\\u8f6c\\u8bed\\u97f3\\u3002\""
      },
      {
        "line": 8968,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 8969,
        "keyword": "TODO",
        "content": "\"content\": \"--language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\\u00e1ncoat\\u00e1n, cac-dialect_sanmateoixtat\\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\\u00edadejes\\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng).\""
      },
      {
        "line": 8973,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8974,
        "keyword": "Example",
        "content": "\"content\": \"Example usage:\""
      },
      {
        "line": 8978,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8979,
        "keyword": "Example",
        "content": "\"content\": \"- **\\u793a\\u4f8b\\u8f93\\u51fa**: ![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\""
      },
      {
        "line": 8985,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.007281553398058253,"
      },
      {
        "line": 8990,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 8991,
        "keyword": "Example",
        "content": "\"content\": \"- \\ud83c\\udf99\\ufe0f H\\u00f6gkvalitativ text-till-tal med [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) och [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms).\""
      },
      {
        "line": 8995,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 8996,
        "keyword": "TODO",
        "content": "\"content\": \"--language LANGUAGE   Spr\\u00e5k f\\u00f6r ljudboksomvandlingen. Alternativ: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\\u00e1ncoat\\u00e1n, cac-dialect_sanmateoixtat\\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\\u00edadejes\\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Standard \\u00e4r Engelska (eng).\""
      },
      {
        "line": 9000,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9001,
        "keyword": "Example",
        "content": "\"content\": \"- **Exempelutdata**: ![Exempel](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\""
      },
      {
        "line": 9007,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.012684989429175475,"
      },
      {
        "line": 9012,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9013,
        "keyword": "Example",
        "content": "\"content\": \"-   [Utilizzo del modello personalizzato senza testa](#example-of-custom-model-zip-upload)\""
      },
      {
        "line": 9017,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9018,
        "keyword": "Example",
        "content": "\"content\": \"-   \\ud83c\\udf99\\ufe0f Text-to-Speech di alta qualit\\u00e0 con[Coqui XTTSV2](https://huggingface.co/coqui/XTTS-v2)E[Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms)(e altro).\""
      },
      {
        "line": 9022,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9023,
        "keyword": "Example",
        "content": "\"content\": \"Example usage:\""
      },
      {
        "line": 9027,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 9028,
        "keyword": "TODO",
        "content": "\"content\": \"Questo metodo garantisce coerenza in diversi ambienti e semplifica la configurazione.\""
      },
      {
        "line": 9032,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9033,
        "keyword": "Example",
        "content": "\"content\": \"-   **Esempio**![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\""
      },
      {
        "line": 9037,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 9038,
        "keyword": "TODO",
        "content": "\"content\": \"-   [@shakenbake15 per un migliore metodo di salvataggio dei capitoli](https://github.com/DrewThomasson/ebook2audiobook/issues/8)\""
      },
      {
        "line": 9044,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.009237875288683603,"
      },
      {
        "line": 9049,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9050,
        "keyword": "Example",
        "content": "\"content\": \"- \\ud83c\\udf99\\ufe0f \\u062a\\u0628\\u062f\\u06cc\\u0644 \\u06af\\u0641\\u062a\\u0627\\u0631 \\u0628\\u0647 \\u0645\\u062a\\u0646 \\u0628\\u0627 \\u06a9\\u06cc\\u0641\\u06cc\\u062a \\u0628\\u0627\\u0644\\u0627 \\u0647\\u0645\\u0631\\u0627\\u0647 \\u0628\\u0627 [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) \\u0648 [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms).\""
      },
      {
        "line": 9054,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 9055,
        "keyword": "TODO",
        "content": "\"content\": \"--language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\\u00e1ncoat\\u00e1n, cac-dialect_sanmateoixtat\\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\\u00edadejes\\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng).\""
      },
      {
        "line": 9059,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9060,
        "keyword": "Example",
        "content": "\"content\": \"Example usage:\""
      },
      {
        "line": 9064,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9065,
        "keyword": "Example",
        "content": "\"content\": \"- **\\u062e\\u0631\\u0648\\u062c\\u06cc \\u0645\\u062b\\u0627\\u0644**: ![\\u0645\\u062b\\u0627\\u0644](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\""
      },
      {
        "line": 9071,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0025575447570332483,"
      },
      {
        "line": 9076,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9077,
        "keyword": "Example",
        "content": "\"content\": \"- **\\u041f\\u0440\\u0438\\u043c\\u0435\\u0440 \\u0432\\u044b\\u0432\\u043e\\u0434\\u0430**: ![\\u041f\\u0440\\u0438\\u043c\\u0435\\u0440](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\""
      },
      {
        "line": 9083,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.006134969325153374,"
      },
      {
        "line": 9088,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9089,
        "keyword": "Example",
        "content": "\"content\": \"- \\ud83c\\udf99\\ufe0f [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) \\ubc0f [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms) \\ub4f1 \\uace0\\ud488\\uc9c8 \\uc74c\\uc131\\uc0dd\\uc131 \\uc5d4\\uc9c4 \\uc9c0\\uc6d0\""
      },
      {
        "line": 9093,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9094,
        "keyword": "Example",
        "content": "\"content\": \"Example usage:\""
      },
      {
        "line": 9098,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9099,
        "keyword": "Example",
        "content": "\"content\": \"![\\uc608\\uc81c](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)\""
      },
      {
        "line": 9105,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.18620689655172415,"
      },
      {
        "line": 9110,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9111,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": 24000,\""
      },
      {
        "line": 9115,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9116,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": 24000,\""
      },
      {
        "line": 9120,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9121,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": 22050,\""
      },
      {
        "line": 9125,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9126,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": 22050,\""
      },
      {
        "line": 9130,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9131,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": 16000,\""
      },
      {
        "line": 9135,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9136,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": 16000,\""
      },
      {
        "line": 9140,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9141,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"KumarDahl_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9145,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9146,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9150,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9151,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"AiExplained_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9155,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9156,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9160,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9161,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"AsmrRacoon_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9165,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9166,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9170,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9171,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"BobOdenkirk_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9175,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9176,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9180,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9181,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"BobRoss_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9185,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9186,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9190,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9191,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"female\\\", f\\\"BrinaPalencia_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9195,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9196,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9200,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9201,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"BryanCranston_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9205,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9206,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9210,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9211,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"elder\\\", \\\"male\\\", f\\\"DavidAttenborough_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9215,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9216,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9220,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9221,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"DeathPussInBoots_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9225,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9226,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9230,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9231,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"elder\\\", \\\"male\\\", f\\\"DermotCrowley_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9235,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9236,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9240,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9241,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"female\\\", f\\\"EvaSeymour_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9245,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9246,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9250,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9251,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"elder\\\", \\\"male\\\", f\\\"GideonOfnirEldenRing_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9255,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9256,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9260,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9261,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"GhostMW2_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9265,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9266,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9270,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9271,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"elder\\\", \\\"male\\\", f\\\"JhonButlerASMR_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9275,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9276,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9280,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9281,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"JhonMulaney_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9285,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9286,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9290,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9291,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"female\\\", f\\\"JillRedfield_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9295,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9296,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9300,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9301,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"female\\\", f\\\"JuliaWhenlan_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9305,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9306,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9310,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9311,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"elder\\\", \\\"male\\\", f\\\"LeeHorsley_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9315,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9316,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9320,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9321,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"female\\\", f\\\"MelinaEldenRing_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9325,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9326,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9330,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9331,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"MorganFreeman_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9335,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9336,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9340,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9341,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"NeilGaiman_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9345,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9346,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9350,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9351,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"elder\\\", \\\"male\\\", f\\\"RainyDayHeadSpace_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9355,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9356,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9360,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9361,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"RayPorter_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9365,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9366,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9370,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9371,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"female\\\", f\\\"RelaxForAWhile_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9375,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9376,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9380,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9381,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"female\\\", f\\\"RosamundPike_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9385,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9386,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9390,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9391,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"female\\\", f\\\"ScarlettJohansson_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9395,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9396,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9400,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9401,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"StanleyParable_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9405,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9406,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9410,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9411,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"WhisperSalemASMR_{default_xtts_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9415,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9416,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_xtts_settings['samplerate']\""
      },
      {
        "line": 9420,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9421,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"voice\\\": os.path.join(voices_dir, \\\"eng\\\", \\\"adult\\\", \\\"male\\\", f\\\"KumarDahl_{default_bark_settings['samplerate']}.wav\\\"),\""
      },
      {
        "line": 9425,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9426,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_bark_settings['samplerate']\""
      },
      {
        "line": 9430,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9431,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": {\""
      },
      {
        "line": 9435,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9436,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"css10/vits\\\": default_vits_settings['samplerate'],\""
      },
      {
        "line": 9440,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9441,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"custom/vits\\\": default_vits_settings['samplerate'],\""
      },
      {
        "line": 9445,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9446,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"custom/vits-female\\\": default_vits_settings['samplerate'],\""
      },
      {
        "line": 9450,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9451,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"cv/vits\\\": default_vits_settings['samplerate'],\""
      },
      {
        "line": 9455,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9456,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"mai/vits\\\": default_vits_settings['samplerate'],\""
      },
      {
        "line": 9460,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9461,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"openbible/vits\\\": default_vits_settings['samplerate'],\""
      },
      {
        "line": 9465,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9466,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"vctk/vits\\\": default_vits_settings['samplerate'],\""
      },
      {
        "line": 9470,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9471,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"thorsten/vits\\\": default_vits_settings['samplerate']\""
      },
      {
        "line": 9475,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9476,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_fairseq_settings['samplerate']\""
      },
      {
        "line": 9480,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9481,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": {\""
      },
      {
        "line": 9485,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9486,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"mai/tacotron2-DDC\\\": default_tacotron_settings['samplerate'],\""
      },
      {
        "line": 9490,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9491,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"thorsten/tacotron2-DDC\\\": default_tacotron_settings['samplerate'],\""
      },
      {
        "line": 9495,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9496,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"kokoro/tacotron2-DDC\\\": default_tacotron_settings['samplerate'],\""
      },
      {
        "line": 9500,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9501,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"ljspeech/tacotron2-DDC\\\": default_tacotron_settings['samplerate'],\""
      },
      {
        "line": 9505,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9506,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"baker/tacotron2-DDC-GST\\\": default_tacotron_settings['samplerate']\""
      },
      {
        "line": 9510,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9511,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"samplerate\\\": default_yourtts_settings['samplerate']\""
      },
      {
        "line": 9517,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0017657445556209534,"
      },
      {
        "line": 9522,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 9523,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"fairseq\\\": {\\\"ara\\\": \\\"ar\\\", \\\"ben\\\": \\\"bn\\\", \\\"eng\\\": \\\"en\\\", \\\"fas\\\": \\\"fa\\\", \\\"fra\\\": \\\"fr\\\", \\\"deu\\\": \\\"de\\\", \\\"hin\\\": \\\"hi\\\", \\\"hun\\\": \\\"hu\\\", \\\"ind\\\": \\\"id\\\", \\\"jav\\\": \\\"jv\\\", \\\"kor\\\": \\\"ko\\\", \\\"pol\\\": \\\"pl\\\", \\\"por\\\": \\\"pt\\\", \\\"rus\\\": \\\"ru\\\", \\\"spa\\\": \\\"es\\\", \\\"tam\\\": \\\"ta\\\", \\\"tel\\\": \\\"te\\\", \\\"tur\\\": \\\"tr\\\", \\\"yor\\\": \\\"yo\\\", \\\"abi\\\": \\\"abi\\\", \\\"ace\\\": \\\"ace\\\", \\\"aca\\\": \\\"aca\\\", \\\"acn\\\": \\\"acn\\\", \\\"acr\\\": \\\"acr\\\", \\\"ach\\\": \\\"ach\\\", \\\"acu\\\": \\\"acu\\\", \\\"guq\\\": \\\"guq\\\", \\\"ade\\\": \\\"ade\\\", \\\"adj\\\": \\\"adj\\\", \\\"agd\\\": \\\"agd\\\", \\\"agx\\\": \\\"agx\\\", \\\"agn\\\": \\\"agn\\\", \\\"aha\\\": \\\"aha\\\", \\\"aka\\\": \\\"ak\\\", \\\"knj\\\": \\\"knj\\\", \\\"ake\\\": \\\"ake\\\", \\\"aeu\\\": \\\"aeu\\\", \\\"ahk\\\": \\\"ahk\\\", \\\"bss\\\": \\\"bss\\\", \\\"alj\\\": \\\"alj\\\", \\\"sqi\\\": \\\"sq\\\", \\\"alt\\\": \\\"alt\\\", \\\"alp\\\": \\\"alp\\\", \\\"alz\\\": \\\"alz\\\", \\\"kab\\\": \\\"kab\\\", \\\"amk\\\": \\\"amk\\\", \\\"mmg\\\": \\\"mmg\\\", \\\"amh\\\": \\\"am\\\", \\\"ami\\\": \\\"ami\\\", \\\"azg\\\": \\\"azg\\\", \\\"agg\\\": \\\"agg\\\", \\\"boj\\\": \\\"boj\\\", \\\"cko\\\": \\\"cko\\\", \\\"any\\\": \\\"any\\\", \\\"arl\\\": \\\"arl\\\", \\\"atq\\\": \\\"atq\\\", \\\"luc\\\": \\\"luc\\\", \\\"hyw\\\": \\\"hyw\\\", \\\"apr\\\": \\\"apr\\\", \\\"aia\\\": \\\"aia\\\", \\\"msy\\\": \\\"msy\\\", \\\"cni\\\": \\\"cni\\\", \\\"cjo\\\": \\\"cjo\\\", \\\"cpu\\\": \\\"cpu\\\", \\\"cpb\\\": \\\"cpb\\\", \\\"asm\\\": \\\"as\\\", \\\"asa\\\": \\\"asa\\\", \\\"teo\\\": \\\"teo\\\", \\\"ati\\\": \\\"ati\\\", \\\"djk\\\": \\\"djk\\\", \\\"ava\\\": \\\"av\\\", \\\"avn\\\": \\\"avn\\\", \\\"avu\\\": \\\"avu\\\", \\\"awb\\\": \\\"awb\\\", \\\"kwi\\\": \\\"kwi\\\", \\\"awa\\\": \\\"awa\\\", \\\"agr\\\": \\\"agr\\\", \\\"agu\\\": \\\"agu\\\", \\\"ayr\\\": \\\"ayr\\\", \\\"ayo\\\": \\\"ayo\\\", \\\"abp\\\": \\\"abp\\\", \\\"blx\\\": \\\"blx\\\", \\\"sgb\\\": \\\"sgb\\\", \\\"azj-script_cyrillic\\\": \\\"azj-script_cyrillic\\\", \\\"azj-script_latin\\\": \\\"azj-script_latin\\\", \\\"azb\\\": \\\"azb\\\", \\\"bba\\\": \\\"bba\\\", \\\"bhz\\\": \\\"bhz\\\", \\\"bvc\\\": \\\"bvc\\\", \\\"bfy\\\": \\\"bfy\\\", \\\"bgq\\\": \\\"bgq\\\", \\\"bdq\\\": \\\"bdq\\\", \\\"bdh\\\": \\\"bdh\\\", \\\"bqi\\\": \\\"bqi\\\", \\\"bjw\\\": \\\"bjw\\\", \\\"blz\\\": \\\"blz\\\", \\\"ban\\\": \\\"ban\\\", \\\"bcc-script_latin\\\": \\\"bcc-script_latin\\\", \\\"bcc-script_arabic\\\": \\\"bcc-script_arabic\\\", \\\"bam\\\": \\\"bm\\\", \\\"ptu\\\": \\\"ptu\\\", \\\"bcw\\\": \\\"bcw\\\", \\\"bqj\\\": \\\"bqj\\\", \\\"bno\\\": \\\"bno\\\", \\\"bbb\\\": \\\"bbb\\\", \\\"bfa\\\": \\\"bfa\\\", \\\"bjz\\\": \\\"bjz\\\", \\\"bak\\\": \\\"ba\\\", \\\"eus\\\": \\\"eu\\\", \\\"bsq\\\": \\\"bsq\\\", \\\"akb\\\": \\\"akb\\\", \\\"btd\\\": \\\"btd\\\", \\\"btx\\\": \\\"btx\\\", \\\"bts\\\": \\\"bts\\\", \\\"bbc\\\": \\\"bbc\\\", \\\"bvz\\\": \\\"bvz\\\", \\\"bjv\\\": \\\"bjv\\\", \\\"bep\\\": \\\"bep\\\", \\\"bkv\\\": \\\"bkv\\\", \\\"bzj\\\": \\\"bzj\\\", \\\"bem\\\": \\\"bem\\\", \\\"bng\\\": \\\"bng\\\", \\\"bom\\\": \\\"bom\\\", \\\"btt\\\": \\\"btt\\\", \\\"bha\\\": \\\"bha\\\", \\\"bgw\\\": \\\"bgw\\\", \\\"bht\\\": \\\"bht\\\", \\\"beh\\\": \\\"beh\\\", \\\"sne\\\": \\\"sne\\\", \\\"ubl\\\": \\\"ubl\\\", \\\"bcl\\\": \\\"bcl\\\", \\\"bim\\\": \\\"bim\\\", \\\"bkd\\\": \\\"bkd\\\", \\\"bjr\\\": \\\"bjr\\\", \\\"bfo\\\": \\\"bfo\\\", \\\"biv\\\": \\\"biv\\\", \\\"bib\\\": \\\"bib\\\", \\\"bis\\\": \\\"bi\\\", \\\"bzi\\\": \\\"bzi\\\", \\\"bqp\\\": \\\"bqp\\\", \\\"bpr\\\": \\\"bpr\\\", \\\"bps\\\": \\\"bps\\\", \\\"bwq\\\": \\\"bwq\\\", \\\"bdv\\\": \\\"bdv\\\", \\\"bqc\\\": \\\"bqc\\\", \\\"bus\\\": \\\"bus\\\", \\\"bnp\\\": \\\"bnp\\\", \\\"bmq\\\": \\\"bmq\\\", \\\"bdg\\\": \\\"bdg\\\", \\\"boa\\\": \\\"boa\\\", \\\"ksr\\\": \\\"ksr\\\", \\\"bor\\\": \\\"bor\\\", \\\"bru\\\": \\\"bru\\\", \\\"box\\\": \\\"box\\\", \\\"bzh\\\": \\\"bzh\\\", \\\"bgt\\\": \\\"bgt\\\", \\\"sab\\\": \\\"sab\\\", \\\"bul\\\": \\\"bg\\\", \\\"bwu\\\": \\\"bwu\\\", \\\"bmv\\\": \\\"bmv\\\", \\\"mya\\\": \\\"my\\\", \\\"tte\\\": \\\"tte\\\", \\\"cjp\\\": \\\"cjp\\\", \\\"cbv\\\": \\\"cbv\\\", \\\"kaq\\\": \\\"kaq\\\", \\\"cot\\\": \\\"cot\\\", \\\"cbc\\\": \\\"cbc\\\", \\\"car\\\": \\\"car\\\", \\\"cat\\\": \\\"ca\\\", \\\"ceb\\\": \\\"ceb\\\", \\\"cme\\\": \\\"cme\\\", \\\"cbi\\\": \\\"cbi\\\", \\\"ceg\\\": \\\"ceg\\\", \\\"cly\\\": \\\"cly\\\", \\\"cya\\\": \\\"cya\\\", \\\"che\\\": \\\"ce\\\", \\\"hne\\\": \\\"hne\\\", \\\"nya\\\": \\\"ny\\\", \\\"dig\\\": \\\"dig\\\", \\\"dug\\\": \\\"dug\\\", \\\"bgr\\\": \\\"bgr\\\", \\\"cek\\\": \\\"cek\\\", \\\"cfm\\\": \\\"cfm\\\", \\\"cnh\\\": \\\"cnh\\\", \\\"hlt\\\": \\\"hlt\\\", \\\"mwq\\\": \\\"mwq\\\", \\\"ctd\\\": \\\"ctd\\\", \\\"tcz\\\": \\\"tcz\\\", \\\"zyp\\\": \\\"zyp\\\", \\\"cco\\\": \\\"cco\\\", \\\"cnl\\\": \\\"cnl\\\", \\\"cle\\\": \\\"cle\\\", \\\"chz\\\": \\\"chz\\\", \\\"cpa\\\": \\\"cpa\\\", \\\"cso\\\": \\\"cso\\\", \\\"cnt\\\": \\\"cnt\\\", \\\"cuc\\\": \\\"cuc\\\", \\\"hak\\\": \\\"hak\\\", \\\"nan\\\": \\\"nan\\\", \\\"xnj\\\": \\\"xnj\\\", \\\"cap\\\": \\\"cap\\\", \\\"cax\\\": \\\"cax\\\", \\\"ctg\\\": \\\"ctg\\\", \\\"ctu\\\": \\\"ctu\\\", \\\"chf\\\": \\\"chf\\\", \\\"cce\\\": \\\"cce\\\", \\\"crt\\\": \\\"crt\\\", \\\"crq\\\": \\\"crq\\\", \\\"cac-dialect_sansebasti\\\\u00e1ncoat\\\\u00e1n\\\": \\\"cac-dialect_sansebasti\\\\u00e1ncoat\\\\u00e1n\\\", \\\"cac-dialect_sanmateoixtat\\\\u00e1n\\\": \\\"cac-dialect_sanmateoixtat\\\\u00e1n\\\", \\\"ckt\\\": \\\"ckt\\\", \\\"ncu\\\": \\\"ncu\\\", \\\"cdj\\\": \\\"cdj\\\", \\\"chv\\\": \\\"cv\\\", \\\"caa\\\": \\\"caa\\\", \\\"asg\\\": \\\"asg\\\", \\\"con\\\": \\\"con\\\", \\\"crn\\\": \\\"crn\\\", \\\"cok\\\": \\\"cok\\\", \\\"crk-script_latin\\\": \\\"crk-script_latin\\\", \\\"crk-script_syllabics\\\": \\\"crk-script_syllabics\\\", \\\"crh\\\": \\\"crh\\\", \\\"cui\\\": \\\"cui\\\", \\\"ces\\\": \\\"cs\\\", \\\"dsh\\\": \\\"dsh\\\", \\\"dbq\\\": \\\"dbq\\\", \\\"dga\\\": \\\"dga\\\", \\\"dgi\\\": \\\"dgi\\\", \\\"dgk\\\": \\\"dgk\\\", \\\"dnj-dialect_gweetaawueast\\\": \\\"dnj-dialect_gweetaawueast\\\", \\\"dnj-dialect_blowowest\\\": \\\"dnj-dialect_blowowest\\\", \\\"daa\\\": \\\"daa\\\", \\\"dnt\\\": \\\"dnt\\\", \\\"dnw\\\": \\\"dnw\\\", \\\"dar\\\": \\\"dar\\\", \\\"tcc\\\": \\\"tcc\\\", \\\"dwr\\\": \\\"dwr\\\", \\\"ded\\\": \\\"ded\\\", \\\"mzw\\\": \\\"mzw\\\", \\\"ntr\\\": \\\"ntr\\\", \\\"ddn\\\": \\\"ddn\\\", \\\"des\\\": \\\"des\\\", \\\"dso\\\": \\\"dso\\\", \\\"nfa\\\": \\\"nfa\\\", \\\"dhi\\\": \\\"dhi\\\", \\\"gud\\\": \\\"gud\\\", \\\"did\\\": \\\"did\\\", \\\"mhu\\\": \\\"mhu\\\", \\\"dip\\\": \\\"dip\\\", \\\"dik\\\": \\\"dik\\\", \\\"tbz\\\": \\\"tbz\\\", \\\"dts\\\": \\\"dts\\\", \\\"dos\\\": \\\"dos\\\", \\\"dgo\\\": \\\"dgo\\\", \\\"mvp\\\": \\\"mvp\\\", \\\"jen\\\": \\\"jen\\\", \\\"dzo\\\": \\\"dz\\\", \\\"idd\\\": \\\"idd\\\", \\\"eka\\\": \\\"eka\\\", \\\"cto\\\": \\\"cto\\\", \\\"emp\\\": \\\"emp\\\", \\\"enx\\\": \\\"enx\\\", \\\"sja\\\": \\\"sja\\\", \\\"myv\\\": \\\"myv\\\", \\\"mcq\\\": \\\"mcq\\\", \\\"ese\\\": \\\"ese\\\", \\\"evn\\\": \\\"evn\\\", \\\"eza\\\": \\\"eza\\\", \\\"ewe\\\": \\\"ee\\\", \\\"fal\\\": \\\"fal\\\", \\\"fao\\\": \\\"fo\\\", \\\"far\\\": \\\"far\\\", \\\"fij\\\": \\\"fj\\\", \\\"fin\\\": \\\"fi\\\", \\\"fon\\\": \\\"fon\\\", \\\"frd\\\": \\\"frd\\\", \\\"ful\\\": \\\"ff\\\", \\\"flr\\\": \\\"flr\\\", \\\"gau\\\": \\\"gau\\\", \\\"gbk\\\": \\\"gbk\\\", \\\"gag-script_cyrillic\\\": \\\"gag-script_cyrillic\\\", \\\"gag-script_latin\\\": \\\"gag-script_latin\\\", \\\"gbi\\\": \\\"gbi\\\", \\\"gmv\\\": \\\"gmv\\\", \\\"lug\\\": \\\"lg\\\", \\\"pwg\\\": \\\"pwg\\\", \\\"gbm\\\": \\\"gbm\\\", \\\"cab\\\": \\\"cab\\\", \\\"grt\\\": \\\"grt\\\", \\\"krs\\\": \\\"krs\\\", \\\"gso\\\": \\\"gso\\\", \\\"nlg\\\": \\\"nlg\\\", \\\"gej\\\": \\\"gej\\\", \\\"gri\\\": \\\"gri\\\", \\\"kik\\\": \\\"ki\\\", \\\"acd\\\": \\\"acd\\\", \\\"glk\\\": \\\"glk\\\", \\\"gof-script_latin\\\": \\\"gof-script_latin\\\", \\\"gog\\\": \\\"gog\\\", \\\"gkn\\\": \\\"gkn\\\", \\\"wsg\\\": \\\"wsg\\\", \\\"gjn\\\": \\\"gjn\\\", \\\"gqr\\\": \\\"gqr\\\", \\\"gor\\\": \\\"gor\\\", \\\"gux\\\": \\\"gux\\\", \\\"gbo\\\": \\\"gbo\\\", \\\"ell\\\": \\\"el\\\", \\\"grc\\\": \\\"grc\\\", \\\"guh\\\": \\\"guh\\\", \\\"gub\\\": \\\"gub\\\", \\\"grn\\\": \\\"gn\\\", \\\"gyr\\\": \\\"gyr\\\", \\\"guo\\\": \\\"guo\\\", \\\"gde\\\": \\\"gde\\\", \\\"guj\\\": \\\"gu\\\", \\\"gvl\\\": \\\"gvl\\\", \\\"guk\\\": \\\"guk\\\", \\\"rub\\\": \\\"rub\\\", \\\"dah\\\": \\\"dah\\\", \\\"gwr\\\": \\\"gwr\\\", \\\"gwi\\\": \\\"gwi\\\", \\\"hat\\\": \\\"ht\\\", \\\"hlb\\\": \\\"hlb\\\", \\\"amf\\\": \\\"amf\\\", \\\"hag\\\": \\\"hag\\\", \\\"hnn\\\": \\\"hnn\\\", \\\"bgc\\\": \\\"bgc\\\", \\\"had\\\": \\\"had\\\", \\\"hau\\\": \\\"ha\\\", \\\"hwc\\\": \\\"hwc\\\", \\\"hvn\\\": \\\"hvn\\\", \\\"hay\\\": \\\"hay\\\", \\\"xed\\\": \\\"xed\\\", \\\"heb\\\": \\\"he\\\", \\\"heh\\\": \\\"heh\\\", \\\"hil\\\": \\\"hil\\\", \\\"hif\\\": \\\"hif\\\", \\\"hns\\\": \\\"hns\\\", \\\"hoc\\\": \\\"hoc\\\", \\\"hoy\\\": \\\"hoy\\\", \\\"hus-dialect_westernpotosino\\\": \\\"hus-dialect_westernpotosino\\\", \\\"hus-dialect_centralveracruz\\\": \\\"hus-dialect_centralveracruz\\\", \\\"huv\\\": \\\"huv\\\", \\\"hui\\\": \\\"hui\\\", \\\"hap\\\": \\\"hap\\\", \\\"iba\\\": \\\"iba\\\", \\\"isl\\\": \\\"is\\\", \\\"dbj\\\": \\\"dbj\\\", \\\"ifa\\\": \\\"ifa\\\", \\\"ifb\\\": \\\"ifb\\\", \\\"ifu\\\": \\\"ifu\\\", \\\"ifk\\\": \\\"ifk\\\", \\\"ife\\\": \\\"ife\\\", \\\"ign\\\": \\\"ign\\\", \\\"ikk\\\": \\\"ikk\\\", \\\"iqw\\\": \\\"iqw\\\", \\\"ilb\\\": \\\"ilb\\\", \\\"ilo\\\": \\\"ilo\\\", \\\"imo\\\": \\\"imo\\\", \\\"inb\\\": \\\"inb\\\", \\\"ipi\\\": \\\"ipi\\\", \\\"irk\\\": \\\"irk\\\", \\\"icr\\\": \\\"icr\\\", \\\"itv\\\": \\\"itv\\\", \\\"itl\\\": \\\"itl\\\", \\\"atg\\\": \\\"atg\\\", \\\"ixl-dialect_sanjuancotzal\\\": \\\"ixl-dialect_sanjuancotzal\\\", \\\"ixl-dialect_sangasparchajul\\\": \\\"ixl-dialect_sangasparchajul\\\", \\\"ixl-dialect_santamarianebaj\\\": \\\"ixl-dialect_santamarianebaj\\\", \\\"nca\\\": \\\"nca\\\", \\\"izr\\\": \\\"izr\\\", \\\"izz\\\": \\\"izz\\\", \\\"jac\\\": \\\"jac\\\", \\\"jam\\\": \\\"jam\\\", \\\"jvn\\\": \\\"jvn\\\", \\\"kac\\\": \\\"kac\\\", \\\"dyo\\\": \\\"dyo\\\", \\\"csk\\\": \\\"csk\\\", \\\"adh\\\": \\\"adh\\\", \\\"jun\\\": \\\"jun\\\", \\\"jbu\\\": \\\"jbu\\\", \\\"dyu\\\": \\\"dyu\\\", \\\"bex\\\": \\\"bex\\\", \\\"juy\\\": \\\"juy\\\", \\\"gna\\\": \\\"gna\\\", \\\"urb\\\": \\\"urb\\\", \\\"kbp\\\": \\\"kbp\\\", \\\"cwa\\\": \\\"cwa\\\", \\\"dtp\\\": \\\"dtp\\\", \\\"kbr\\\": \\\"kbr\\\", \\\"cgc\\\": \\\"cgc\\\", \\\"kki\\\": \\\"kki\\\", \\\"kzf\\\": \\\"kzf\\\", \\\"lew\\\": \\\"lew\\\", \\\"cbr\\\": \\\"cbr\\\", \\\"kkj\\\": \\\"kkj\\\", \\\"keo\\\": \\\"keo\\\", \\\"kqe\\\": \\\"kqe\\\", \\\"kak\\\": \\\"kak\\\", \\\"kyb\\\": \\\"kyb\\\", \\\"knb\\\": \\\"knb\\\", \\\"kmd\\\": \\\"kmd\\\", \\\"kml\\\": \\\"kml\\\", \\\"ify\\\": \\\"ify\\\", \\\"xal\\\": \\\"xal\\\", \\\"kbq\\\": \\\"kbq\\\", \\\"kay\\\": \\\"kay\\\", \\\"ktb\\\": \\\"ktb\\\", \\\"hig\\\": \\\"hig\\\", \\\"gam\\\": \\\"gam\\\", \\\"cbu\\\": \\\"cbu\\\", \\\"xnr\\\": \\\"xnr\\\", \\\"kmu\\\": \\\"kmu\\\", \\\"kne\\\": \\\"kne\\\", \\\"kan\\\": \\\"kn\\\", \\\"kby\\\": \\\"kby\\\", \\\"pam\\\": \\\"pam\\\", \\\"cak-dialect_santamar\\\\u00edadejes\\\\u00fas\\\": \\\"cak-dialect_santamar\\\\u00edadejes\\\\u00fas\\\", \\\"cak-dialect_southcentral\\\": \\\"cak-dialect_southcentral\\\", \\\"cak-dialect_yepocapa\\\": \\\"cak-dialect_yepocapa\\\", \\\"cak-dialect_western\\\": \\\"cak-dialect_western\\\", \\\"cak-dialect_santodomingoxenacoj\\\": \\\"cak-dialect_santodomingoxenacoj\\\", \\\"cak-dialect_central\\\": \\\"cak-dialect_central\\\", \\\"xrb\\\": \\\"xrb\\\", \\\"krc\\\": \\\"krc\\\", \\\"kaa\\\": \\\"kaa\\\", \\\"krl\\\": \\\"krl\\\", \\\"pww\\\": \\\"pww\\\", \\\"xsm\\\": \\\"xsm\\\", \\\"cbs\\\": \\\"cbs\\\", \\\"pss\\\": \\\"pss\\\", \\\"kxf\\\": \\\"kxf\\\", \\\"kyz\\\": \\\"kyz\\\", \\\"kyu\\\": \\\"kyu\\\", \\\"txu\\\": \\\"txu\\\", \\\"kaz\\\": \\\"kk\\\", \\\"ndp\\\": \\\"ndp\\\", \\\"kbo\\\": \\\"kbo\\\", \\\"kyq\\\": \\\"kyq\\\", \\\"ken\\\": \\\"ken\\\", \\\"ker\\\": \\\"ker\\\", \\\"xte\\\": \\\"xte\\\", \\\"kyg\\\": \\\"kyg\\\", \\\"kjh\\\": \\\"kjh\\\", \\\"kca\\\": \\\"kca\\\", \\\"khm\\\": \\\"km\\\", \\\"kxm\\\": \\\"kxm\\\", \\\"kjg\\\": \\\"kjg\\\", \\\"nyf\\\": \\\"nyf\\\", \\\"kij\\\": \\\"kij\\\", \\\"kia\\\": \\\"kia\\\", \\\"kqr\\\": \\\"kqr\\\", \\\"kqp\\\": \\\"kqp\\\", \\\"krj\\\": \\\"krj\\\", \\\"zga\\\": \\\"zga\\\", \\\"kin\\\": \\\"rw\\\", \\\"pkb\\\": \\\"pkb\\\", \\\"geb\\\": \\\"geb\\\", \\\"gil\\\": \\\"gil\\\", \\\"kje\\\": \\\"kje\\\", \\\"kss\\\": \\\"kss\\\", \\\"thk\\\": \\\"thk\\\", \\\"klu\\\": \\\"klu\\\", \\\"kyo\\\": \\\"kyo\\\", \\\"kog\\\": \\\"kog\\\", \\\"kfb\\\": \\\"kfb\\\", \\\"kpv\\\": \\\"kpv\\\", \\\"bbo\\\": \\\"bbo\\\", \\\"xon\\\": \\\"xon\\\", \\\"kma\\\": \\\"kma\\\", \\\"kno\\\": \\\"kno\\\", \\\"kxc\\\": \\\"kxc\\\", \\\"ozm\\\": \\\"ozm\\\", \\\"kqy\\\": \\\"kqy\\\", \\\"coe\\\": \\\"coe\\\", \\\"kpq\\\": \\\"kpq\\\", \\\"kpy\\\": \\\"kpy\\\", \\\"kyf\\\": \\\"kyf\\\", \\\"kff-script_telugu\\\": \\\"kff-script_telugu\\\", \\\"kri\\\": \\\"kri\\\", \\\"rop\\\": \\\"rop\\\", \\\"ktj\\\": \\\"ktj\\\", \\\"ted\\\": \\\"ted\\\", \\\"krr\\\": \\\"krr\\\", \\\"kdt\\\": \\\"kdt\\\", \\\"kez\\\": \\\"kez\\\", \\\"cul\\\": \\\"cul\\\", \\\"kle\\\": \\\"kle\\\", \\\"kdi\\\": \\\"kdi\\\", \\\"kue\\\": \\\"kue\\\", \\\"kum\\\": \\\"kum\\\", \\\"kvn\\\": \\\"kvn\\\", \\\"cuk\\\": \\\"cuk\\\", \\\"kdn\\\": \\\"kdn\\\", \\\"xuo\\\": \\\"xuo\\\", \\\"key\\\": \\\"key\\\", \\\"kpz\\\": \\\"kpz\\\", \\\"knk\\\": \\\"knk\\\", \\\"kmr-script_latin\\\": \\\"kmr-script_latin\\\", \\\"kmr-script_arabic\\\": \\\"kmr-script_arabic\\\", \\\"kmr-script_cyrillic\\\": \\\"kmr-script_cyrillic\\\", \\\"xua\\\": \\\"xua\\\", \\\"kru\\\": \\\"kru\\\", \\\"kus\\\": \\\"kus\\\", \\\"kub\\\": \\\"kub\\\", \\\"kdc\\\": \\\"kdc\\\", \\\"kxv\\\": \\\"kxv\\\", \\\"blh\\\": \\\"blh\\\", \\\"cwt\\\": \\\"cwt\\\", \\\"kwd\\\": \\\"kwd\\\", \\\"tnk\\\": \\\"tnk\\\", \\\"kwf\\\": \\\"kwf\\\", \\\"cwe\\\": \\\"cwe\\\", \\\"kyc\\\": \\\"kyc\\\", \\\"tye\\\": \\\"tye\\\", \\\"kir\\\": \\\"ky\\\", \\\"quc-dialect_north\\\": \\\"quc-dialect_north\\\", \\\"quc-dialect_east\\\": \\\"quc-dialect_east\\\", \\\"quc-dialect_central\\\": \\\"quc-dialect_central\\\", \\\"lac\\\": \\\"lac\\\", \\\"lsi\\\": \\\"lsi\\\", \\\"lbj\\\": \\\"lbj\\\", \\\"lhu\\\": \\\"lhu\\\", \\\"las\\\": \\\"las\\\", \\\"lam\\\": \\\"lam\\\", \\\"lns\\\": \\\"lns\\\", \\\"ljp\\\": \\\"ljp\\\", \\\"laj\\\": \\\"laj\\\", \\\"lao\\\": \\\"lo\\\", \\\"lat\\\": \\\"la\\\", \\\"lav\\\": \\\"lv\\\", \\\"law\\\": \\\"law\\\", \\\"lcp\\\": \\\"lcp\\\", \\\"lzz\\\": \\\"lzz\\\", \\\"lln\\\": \\\"lln\\\", \\\"lef\\\": \\\"lef\\\", \\\"acf\\\": \\\"acf\\\", \\\"lww\\\": \\\"lww\\\", \\\"mhx\\\": \\\"mhx\\\", \\\"eip\\\": \\\"eip\\\", \\\"lia\\\": \\\"lia\\\", \\\"lif\\\": \\\"lif\\\", \\\"onb\\\": \\\"onb\\\", \\\"lis\\\": \\\"lis\\\", \\\"loq\\\": \\\"loq\\\", \\\"lob\\\": \\\"lob\\\", \\\"yaz\\\": \\\"yaz\\\", \\\"lok\\\": \\\"lok\\\", \\\"llg\\\": \\\"llg\\\", \\\"ycl\\\": \\\"ycl\\\", \\\"lom\\\": \\\"lom\\\", \\\"ngl\\\": \\\"ngl\\\", \\\"lon\\\": \\\"lon\\\", \\\"lex\\\": \\\"lex\\\", \\\"lgg\\\": \\\"lgg\\\", \\\"ruf\\\": \\\"ruf\\\", \\\"dop\\\": \\\"dop\\\", \\\"lnd\\\": \\\"lnd\\\", \\\"ndy\\\": \\\"ndy\\\", \\\"lwo\\\": \\\"lwo\\\", \\\"lee\\\": \\\"lee\\\", \\\"mev\\\": \\\"mev\\\", \\\"mfz\\\": \\\"mfz\\\", \\\"jmc\\\": \\\"jmc\\\", \\\"myy\\\": \\\"myy\\\", \\\"mbc\\\": \\\"mbc\\\", \\\"mda\\\": \\\"mda\\\", \\\"mad\\\": \\\"mad\\\", \\\"mag\\\": \\\"mag\\\", \\\"ayz\\\": \\\"ayz\\\", \\\"mai\\\": \\\"mai\\\", \\\"mca\\\": \\\"mca\\\", \\\"mcp\\\": \\\"mcp\\\", \\\"mak\\\": \\\"mak\\\", \\\"vmw\\\": \\\"vmw\\\", \\\"mgh\\\": \\\"mgh\\\", \\\"kde\\\": \\\"kde\\\", \\\"mlg\\\": \\\"mg\\\", \\\"zlm\\\": \\\"zlm\\\", \\\"pse\\\": \\\"pse\\\", \\\"mkn\\\": \\\"mkn\\\", \\\"xmm\\\": \\\"xmm\\\", \\\"mal\\\": \\\"ml\\\", \\\"xdy\\\": \\\"xdy\\\", \\\"div\\\": \\\"dv\\\", \\\"mdy\\\": \\\"mdy\\\", \\\"mup\\\": \\\"mup\\\", \\\"mam-dialect_central\\\": \\\"mam-dialect_central\\\", \\\"mam-dialect_northern\\\": \\\"mam-dialect_northern\\\", \\\"mam-dialect_southern\\\": \\\"mam-dialect_southern\\\", \\\"mam-dialect_western\\\": \\\"mam-dialect_western\\\", \\\"mqj\\\": \\\"mqj\\\", \\\"mcu\\\": \\\"mcu\\\", \\\"mzk\\\": \\\"mzk\\\", \\\"maw\\\": \\\"maw\\\", \\\"mjl\\\": \\\"mjl\\\", \\\"mnk\\\": \\\"mnk\\\", \\\"mge\\\": \\\"mge\\\", \\\"mbh\\\": \\\"mbh\\\", \\\"knf\\\": \\\"knf\\\", \\\"mjv\\\": \\\"mjv\\\", \\\"mbt\\\": \\\"mbt\\\", \\\"obo\\\": \\\"obo\\\", \\\"mbb\\\": \\\"mbb\\\", \\\"mzj\\\": \\\"mzj\\\", \\\"nld\\\": \\\"nld\\\", \\\"sjm\\\": \\\"sjm\\\", \\\"mrw\\\": \\\"mrw\\\", \\\"mar\\\": \\\"mr\\\", \\\"mpg\\\": \\\"mpg\\\", \\\"mhr\\\": \\\"mhr\\\", \\\"enb\\\": \\\"enb\\\", \\\"mah\\\": \\\"mh\\\", \\\"myx\\\": \\\"myx\\\", \\\"klv\\\": \\\"klv\\\", \\\"mfh\\\": \\\"mfh\\\", \\\"met\\\": \\\"met\\\", \\\"mcb\\\": \\\"mcb\\\", \\\"mop\\\": \\\"mop\\\", \\\"yua\\\": \\\"yua\\\", \\\"mfy\\\": \\\"mfy\\\", \\\"maz\\\": \\\"maz\\\", \\\"vmy\\\": \\\"vmy\\\", \\\"maq\\\": \\\"maq\\\", \\\"mzi\\\": \\\"mzi\\\", \\\"maj\\\": \\\"maj\\\", \\\"maa-dialect_sanantonio\\\": \\\"maa-dialect_sanantonio\\\", \\\"maa-dialect_sanjer\\\\u00f3nimo\\\": \\\"maa-dialect_sanjer\\\\u00f3nimo\\\", \\\"mhy\\\": \\\"mhy\\\", \\\"mhi\\\": \\\"mhi\\\", \\\"zmz\\\": \\\"zmz\\\", \\\"myb\\\": \\\"myb\\\", \\\"gai\\\": \\\"gai\\\", \\\"mqb\\\": \\\"mqb\\\", \\\"mbu\\\": \\\"mbu\\\", \\\"med\\\": \\\"med\\\", \\\"men\\\": \\\"men\\\", \\\"mee\\\": \\\"mee\\\", \\\"mwv\\\": \\\"mwv\\\", \\\"meq\\\": \\\"meq\\\", \\\"zim\\\": \\\"zim\\\", \\\"mgo\\\": \\\"mgo\\\", \\\"mej\\\": \\\"mej\\\", \\\"mpp\\\": \\\"mpp\\\", \\\"min\\\": \\\"min\\\", \\\"gum\\\": \\\"gum\\\", \\\"mpx\\\": \\\"mpx\\\", \\\"mco\\\": \\\"mco\\\", \\\"mxq\\\": \\\"mxq\\\", \\\"pxm\\\": \\\"pxm\\\", \\\"mto\\\": \\\"mto\\\", \\\"mim\\\": \\\"mim\\\", \\\"xta\\\": \\\"xta\\\", \\\"mbz\\\": \\\"mbz\\\", \\\"mip\\\": \\\"mip\\\", \\\"mib\\\": \\\"mib\\\", \\\"miy\\\": \\\"miy\\\", \\\"mih\\\": \\\"mih\\\", \\\"miz\\\": \\\"miz\\\", \\\"xtd\\\": \\\"xtd\\\", \\\"mxt\\\": \\\"mxt\\\", \\\"xtm\\\": \\\"xtm\\\", \\\"mxv\\\": \\\"mxv\\\", \\\"xtn\\\": \\\"xtn\\\", \\\"mie\\\": \\\"mie\\\", \\\"mil\\\": \\\"mil\\\", \\\"mio\\\": \\\"mio\\\", \\\"mdv\\\": \\\"mdv\\\", \\\"mza\\\": \\\"mza\\\", \\\"mit\\\": \\\"mit\\\", \\\"mxb\\\": \\\"mxb\\\", \\\"mpm\\\": \\\"mpm\\\", \\\"soy\\\": \\\"soy\\\", \\\"cmo-script_latin\\\": \\\"cmo-script_latin\\\", \\\"cmo-script_khmer\\\": \\\"cmo-script_khmer\\\", \\\"mfq\\\": \\\"mfq\\\", \\\"old\\\": \\\"old\\\", \\\"mfk\\\": \\\"mfk\\\", \\\"mif\\\": \\\"mif\\\", \\\"mkl\\\": \\\"mkl\\\", \\\"mox\\\": \\\"mox\\\", \\\"myl\\\": \\\"myl\\\", \\\"mqf\\\": \\\"mqf\\\", \\\"mnw\\\": \\\"mnw\\\", \\\"mon\\\": \\\"mn\\\", \\\"mog\\\": \\\"mog\\\", \\\"mfe\\\": \\\"mfe\\\", \\\"mor\\\": \\\"mor\\\", \\\"mqn\\\": \\\"mqn\\\", \\\"mgd\\\": \\\"mgd\\\", \\\"mtj\\\": \\\"mtj\\\", \\\"cmr\\\": \\\"cmr\\\", \\\"mtd\\\": \\\"mtd\\\", \\\"bmr\\\": \\\"bmr\\\", \\\"moz\\\": \\\"moz\\\", \\\"mzm\\\": \\\"mzm\\\", \\\"mnb\\\": \\\"mnb\\\", \\\"mnf\\\": \\\"mnf\\\", \\\"unr\\\": \\\"unr\\\", \\\"fmu\\\": \\\"fmu\\\", \\\"mur\\\": \\\"mur\\\", \\\"tih\\\": \\\"tih\\\", \\\"muv\\\": \\\"muv\\\", \\\"muy\\\": \\\"muy\\\", \\\"sur\\\": \\\"sur\\\", \\\"moa\\\": \\\"moa\\\", \\\"wmw\\\": \\\"wmw\\\", \\\"tnr\\\": \\\"tnr\\\", \\\"miq\\\": \\\"miq\\\", \\\"mos\\\": \\\"mos\\\", \\\"muh\\\": \\\"muh\\\", \\\"nas\\\": \\\"nas\\\", \\\"mbj\\\": \\\"mbj\\\", \\\"nfr\\\": \\\"nfr\\\", \\\"kfw\\\": \\\"kfw\\\", \\\"nst\\\": \\\"nst\\\", \\\"nag\\\": \\\"nag\\\", \\\"nch\\\": \\\"nch\\\", \\\"nhe\\\": \\\"nhe\\\", \\\"ngu\\\": \\\"ngu\\\", \\\"azz\\\": \\\"azz\\\", \\\"nhx\\\": \\\"nhx\\\", \\\"ncl\\\": \\\"ncl\\\", \\\"nhy\\\": \\\"nhy\\\", \\\"ncj\\\": \\\"ncj\\\", \\\"nsu\\\": \\\"nsu\\\", \\\"npl\\\": \\\"npl\\\", \\\"nuz\\\": \\\"nuz\\\", \\\"nhw\\\": \\\"nhw\\\", \\\"nhi\\\": \\\"nhi\\\", \\\"nlc\\\": \\\"nlc\\\", \\\"nab\\\": \\\"nab\\\", \\\"gld\\\": \\\"gld\\\", \\\"nnb\\\": \\\"nnb\\\", \\\"npy\\\": \\\"npy\\\", \\\"pbb\\\": \\\"pbb\\\", \\\"ntm\\\": \\\"ntm\\\", \\\"nmz\\\": \\\"nmz\\\", \\\"naw\\\": \\\"naw\\\", \\\"nxq\\\": \\\"nxq\\\", \\\"ndj\\\": \\\"ndj\\\", \\\"ndz\\\": \\\"ndz\\\", \\\"ndv\\\": \\\"ndv\\\", \\\"new\\\": \\\"new\\\", \\\"nij\\\": \\\"nij\\\", \\\"sba\\\": \\\"sba\\\", \\\"gng\\\": \\\"gng\\\", \\\"nga\\\": \\\"nga\\\", \\\"nnq\\\": \\\"nnq\\\", \\\"ngp\\\": \\\"ngp\\\", \\\"gym\\\": \\\"gym\\\", \\\"kdj\\\": \\\"kdj\\\", \\\"nia\\\": \\\"nia\\\", \\\"nim\\\": \\\"nim\\\", \\\"nin\\\": \\\"nin\\\", \\\"nko\\\": \\\"nko\\\", \\\"nog\\\": \\\"nog\\\", \\\"lem\\\": \\\"lem\\\", \\\"not\\\": \\\"not\\\", \\\"nhu\\\": \\\"nhu\\\", \\\"nob\\\": \\\"nb\\\", \\\"bud\\\": \\\"bud\\\", \\\"nus\\\": \\\"nus\\\", \\\"yas\\\": \\\"yas\\\", \\\"nnw\\\": \\\"nnw\\\", \\\"nwb\\\": \\\"nwb\\\", \\\"nyy\\\": \\\"nyy\\\", \\\"nyn\\\": \\\"nyn\\\", \\\"rim\\\": \\\"rim\\\", \\\"lid\\\": \\\"lid\\\", \\\"nuj\\\": \\\"nuj\\\", \\\"nyo\\\": \\\"nyo\\\", \\\"nzi\\\": \\\"nzi\\\", \\\"ann\\\": \\\"ann\\\", \\\"ory\\\": \\\"ory\\\", \\\"ojb-script_latin\\\": \\\"ojb-script_latin\\\", \\\"ojb-script_syllabics\\\": \\\"ojb-script_syllabics\\\", \\\"oku\\\": \\\"oku\\\", \\\"bsc\\\": \\\"bsc\\\", \\\"bdu\\\": \\\"bdu\\\", \\\"orm\\\": \\\"om\\\", \\\"ury\\\": \\\"ury\\\", \\\"oss\\\": \\\"os\\\", \\\"ote\\\": \\\"ote\\\", \\\"otq\\\": \\\"otq\\\", \\\"stn\\\": \\\"stn\\\", \\\"sig\\\": \\\"sig\\\", \\\"kfx\\\": \\\"kfx\\\", \\\"bfz\\\": \\\"bfz\\\", \\\"sey\\\": \\\"sey\\\", \\\"pao\\\": \\\"pao\\\", \\\"pau\\\": \\\"pau\\\", \\\"pce\\\": \\\"pce\\\", \\\"plw\\\": \\\"plw\\\", \\\"pmf\\\": \\\"pmf\\\", \\\"pag\\\": \\\"pag\\\", \\\"pap\\\": \\\"pap\\\", \\\"prf\\\": \\\"prf\\\", \\\"pab\\\": \\\"pab\\\", \\\"pbi\\\": \\\"pbi\\\", \\\"pbc\\\": \\\"pbc\\\", \\\"pad\\\": \\\"pad\\\", \\\"ata\\\": \\\"ata\\\", \\\"pez\\\": \\\"pez\\\", \\\"peg\\\": \\\"peg\\\", \\\"pcm\\\": \\\"pcm\\\", \\\"pis\\\": \\\"pis\\\", \\\"pny\\\": \\\"pny\\\", \\\"pir\\\": \\\"pir\\\", \\\"pjt\\\": \\\"pjt\\\", \\\"poy\\\": \\\"poy\\\", \\\"pps\\\": \\\"pps\\\", \\\"pls\\\": \\\"pls\\\", \\\"poi\\\": \\\"poi\\\", \\\"poh-dialect_eastern\\\": \\\"poh-dialect_eastern\\\", \\\"poh-dialect_western\\\": \\\"poh-dialect_western\\\", \\\"prt\\\": \\\"prt\\\", \\\"pui\\\": \\\"pui\\\", \\\"pan\\\": \\\"pa\\\", \\\"tsz\\\": \\\"tsz\\\", \\\"suv\\\": \\\"suv\\\", \\\"lme\\\": \\\"lme\\\", \\\"quy\\\": \\\"quy\\\", \\\"qvc\\\": \\\"qvc\\\", \\\"quz\\\": \\\"quz\\\", \\\"qve\\\": \\\"qve\\\", \\\"qub\\\": \\\"qub\\\", \\\"qvh\\\": \\\"qvh\\\", \\\"qwh\\\": \\\"qwh\\\", \\\"qvw\\\": \\\"qvw\\\", \\\"quf\\\": \\\"quf\\\", \\\"qvm\\\": \\\"qvm\\\", \\\"qul\\\": \\\"qul\\\", \\\"qvn\\\": \\\"qvn\\\", \\\"qxn\\\": \\\"qxn\\\", \\\"qxh\\\": \\\"qxh\\\", \\\"qvs\\\": \\\"qvs\\\", \\\"quh\\\": \\\"quh\\\", \\\"qxo\\\": \\\"qxo\\\", \\\"qxr\\\": \\\"qxr\\\", \\\"qvo\\\": \\\"qvo\\\", \\\"qvz\\\": \\\"qvz\\\", \\\"qxl\\\": \\\"qxl\\\", \\\"quw\\\": \\\"quw\\\", \\\"kjb\\\": \\\"kjb\\\", \\\"kek\\\": \\\"kek\\\", \\\"rah\\\": \\\"rah\\\", \\\"rjs\\\": \\\"rjs\\\", \\\"rai\\\": \\\"rai\\\", \\\"lje\\\": \\\"lje\\\", \\\"rnl\\\": \\\"rnl\\\", \\\"rkt\\\": \\\"rkt\\\", \\\"rap\\\": \\\"rap\\\", \\\"yea\\\": \\\"yea\\\", \\\"raw\\\": \\\"raw\\\", \\\"rej\\\": \\\"rej\\\", \\\"rel\\\": \\\"rel\\\", \\\"ril\\\": \\\"ril\\\", \\\"iri\\\": \\\"iri\\\", \\\"rgu\\\": \\\"rgu\\\", \\\"rhg\\\": \\\"rhg\\\", \\\"rmc-script_latin\\\": \\\"rmc-script_latin\\\", \\\"rmc-script_cyrillic\\\": \\\"rmc-script_cyrillic\\\", \\\"rmo\\\": \\\"rmo\\\", \\\"rmy-script_latin\\\": \\\"rmy-script_latin\\\", \\\"rmy-script_cyrillic\\\": \\\"rmy-script_cyrillic\\\", \\\"ron\\\": \\\"ro\\\", \\\"rol\\\": \\\"rol\\\", \\\"cla\\\": \\\"cla\\\", \\\"rng\\\": \\\"rng\\\", \\\"rug\\\": \\\"rug\\\", \\\"run\\\": \\\"rn\\\", \\\"lsm\\\": \\\"lsm\\\", \\\"spy\\\": \\\"spy\\\", \\\"sck\\\": \\\"sck\\\", \\\"saj\\\": \\\"saj\\\", \\\"sch\\\": \\\"sch\\\", \\\"sml\\\": \\\"sml\\\", \\\"xsb\\\": \\\"xsb\\\", \\\"sbl\\\": \\\"sbl\\\", \\\"saq\\\": \\\"saq\\\", \\\"sbd\\\": \\\"sbd\\\", \\\"smo\\\": \\\"sm\\\", \\\"rav\\\": \\\"rav\\\", \\\"sxn\\\": \\\"sxn\\\", \\\"sag\\\": \\\"sg\\\", \\\"sbp\\\": \\\"sbp\\\", \\\"xsu\\\": \\\"xsu\\\", \\\"srm\\\": \\\"srm\\\", \\\"sas\\\": \\\"sas\\\", \\\"apb\\\": \\\"apb\\\", \\\"sgw\\\": \\\"sgw\\\", \\\"tvw\\\": \\\"tvw\\\", \\\"lip\\\": \\\"lip\\\", \\\"slu\\\": \\\"slu\\\", \\\"snw\\\": \\\"snw\\\", \\\"sea\\\": \\\"sea\\\", \\\"sza\\\": \\\"sza\\\", \\\"seh\\\": \\\"seh\\\", \\\"crs\\\": \\\"crs\\\", \\\"ksb\\\": \\\"ksb\\\", \\\"shn\\\": \\\"shn\\\", \\\"sho\\\": \\\"sho\\\", \\\"mcd\\\": \\\"mcd\\\", \\\"cbt\\\": \\\"cbt\\\", \\\"xsr\\\": \\\"xsr\\\", \\\"shk\\\": \\\"shk\\\", \\\"shp\\\": \\\"shp\\\", \\\"sna\\\": \\\"sn\\\", \\\"cjs\\\": \\\"cjs\\\", \\\"jiv\\\": \\\"jiv\\\", \\\"snp\\\": \\\"snp\\\", \\\"sya\\\": \\\"sya\\\", \\\"sid\\\": \\\"sid\\\", \\\"snn\\\": \\\"snn\\\", \\\"sri\\\": \\\"sri\\\", \\\"srx\\\": \\\"srx\\\", \\\"sil\\\": \\\"sil\\\", \\\"sld\\\": \\\"sld\\\", \\\"akp\\\": \\\"akp\\\", \\\"xog\\\": \\\"xog\\\", \\\"som\\\": \\\"so\\\", \\\"bmu\\\": \\\"bmu\\\", \\\"khq\\\": \\\"khq\\\", \\\"ses\\\": \\\"ses\\\", \\\"mnx\\\": \\\"mnx\\\", \\\"srn\\\": \\\"srn\\\", \\\"sxb\\\": \\\"sxb\\\", \\\"suc\\\": \\\"suc\\\", \\\"tgo\\\": \\\"tgo\\\", \\\"suk\\\": \\\"suk\\\", \\\"sun\\\": \\\"su\\\", \\\"suz\\\": \\\"suz\\\", \\\"sgj\\\": \\\"sgj\\\", \\\"sus\\\": \\\"sus\\\", \\\"swh\\\": \\\"swh\\\", \\\"swe\\\": \\\"sv\\\", \\\"syl\\\": \\\"syl\\\", \\\"dyi\\\": \\\"dyi\\\", \\\"myk\\\": \\\"myk\\\", \\\"spp\\\": \\\"spp\\\", \\\"tap\\\": \\\"tap\\\", \\\"tby\\\": \\\"tby\\\", \\\"tna\\\": \\\"tna\\\", \\\"shi\\\": \\\"shi\\\", \\\"klw\\\": \\\"klw\\\", \\\"tgl\\\": \\\"tl\\\", \\\"tbk\\\": \\\"tbk\\\", \\\"tgj\\\": \\\"tgj\\\", \\\"blt\\\": \\\"blt\\\", \\\"tbg\\\": \\\"tbg\\\", \\\"omw\\\": \\\"omw\\\", \\\"tgk\\\": \\\"tg\\\", \\\"tdj\\\": \\\"tdj\\\", \\\"tbc\\\": \\\"tbc\\\", \\\"tlj\\\": \\\"tlj\\\", \\\"tly\\\": \\\"tly\\\", \\\"ttq-script_tifinagh\\\": \\\"ttq-script_tifinagh\\\", \\\"taj\\\": \\\"taj\\\", \\\"taq\\\": \\\"taq\\\", \\\"tpm\\\": \\\"tpm\\\", \\\"tgp\\\": \\\"tgp\\\", \\\"tnn\\\": \\\"tnn\\\", \\\"tac\\\": \\\"tac\\\", \\\"rif-script_latin\\\": \\\"rif-script_latin\\\", \\\"rif-script_arabic\\\": \\\"rif-script_arabic\\\", \\\"tat\\\": \\\"tt\\\", \\\"tav\\\": \\\"tav\\\", \\\"twb\\\": \\\"twb\\\", \\\"tbl\\\": \\\"tbl\\\", \\\"kps\\\": \\\"kps\\\", \\\"twe\\\": \\\"twe\\\", \\\"ttc\\\": \\\"ttc\\\", \\\"kdh\\\": \\\"kdh\\\", \\\"tes\\\": \\\"tes\\\", \\\"tex\\\": \\\"tex\\\", \\\"tee\\\": \\\"tee\\\", \\\"tpp\\\": \\\"tpp\\\", \\\"tpt\\\": \\\"tpt\\\", \\\"stp\\\": \\\"stp\\\", \\\"tfr\\\": \\\"tfr\\\", \\\"twu\\\": \\\"twu\\\", \\\"ter\\\": \\\"ter\\\", \\\"tew\\\": \\\"tew\\\", \\\"tha\\\": \\\"th\\\", \\\"nod\\\": \\\"nod\\\", \\\"thl\\\": \\\"thl\\\", \\\"tem\\\": \\\"tem\\\", \\\"adx\\\": \\\"adx\\\", \\\"bod\\\": \\\"bo\\\", \\\"khg\\\": \\\"khg\\\", \\\"tca\\\": \\\"tca\\\", \\\"tir\\\": \\\"ti\\\", \\\"txq\\\": \\\"txq\\\", \\\"tik\\\": \\\"tik\\\", \\\"dgr\\\": \\\"dgr\\\", \\\"tob\\\": \\\"tob\\\", \\\"tmf\\\": \\\"tmf\\\", \\\"tng\\\": \\\"tng\\\", \\\"tlb\\\": \\\"tlb\\\", \\\"ood\\\": \\\"ood\\\", \\\"tpi\\\": \\\"tpi\\\", \\\"jic\\\": \\\"jic\\\", \\\"lbw\\\": \\\"lbw\\\", \\\"txa\\\": \\\"txa\\\", \\\"tom\\\": \\\"tom\\\", \\\"toh\\\": \\\"toh\\\", \\\"tnt\\\": \\\"tnt\\\", \\\"sda\\\": \\\"sda\\\", \\\"tcs\\\": \\\"tcs\\\", \\\"toc\\\": \\\"toc\\\", \\\"tos\\\": \\\"tos\\\", \\\"neb\\\": \\\"neb\\\", \\\"trn\\\": \\\"trn\\\", \\\"trs\\\": \\\"trs\\\", \\\"trc\\\": \\\"trc\\\", \\\"tri\\\": \\\"tri\\\", \\\"cof\\\": \\\"cof\\\", \\\"tkr\\\": \\\"tkr\\\", \\\"kdl\\\": \\\"kdl\\\", \\\"cas\\\": \\\"cas\\\", \\\"tso\\\": \\\"ts\\\", \\\"tuo\\\": \\\"tuo\\\", \\\"iou\\\": \\\"iou\\\", \\\"tmc\\\": \\\"tmc\\\", \\\"tuf\\\": \\\"tuf\\\", \\\"tuk-script_latin\\\": \\\"tk\\\", \\\"tuk-script_arabic\\\": \\\"tk\\\", \\\"bov\\\": \\\"bov\\\", \\\"tue\\\": \\\"tue\\\", \\\"kcg\\\": \\\"kcg\\\", \\\"tzh-dialect_bachaj\\\\u00f3n\\\": \\\"tzh-dialect_bachaj\\\\u00f3n\\\", \\\"tzh-dialect_tenejapa\\\": \\\"tzh-dialect_tenejapa\\\", \\\"tzo-dialect_chenalh\\\\u00f3\\\": \\\"tzo-dialect_chenalh\\\\u00f3\\\", \\\"tzo-dialect_chamula\\\": \\\"tzo-dialect_chamula\\\", \\\"tzj-dialect_western\\\": \\\"tzj-dialect_western\\\", \\\"tzj-dialect_eastern\\\": \\\"tzj-dialect_eastern\\\", \\\"aoz\\\": \\\"aoz\\\", \\\"udm\\\": \\\"udm\\\", \\\"udu\\\": \\\"udu\\\", \\\"ukr\\\": \\\"uk\\\", \\\"ppk\\\": \\\"ppk\\\", \\\"ubu\\\": \\\"ubu\\\", \\\"urk\\\": \\\"urk\\\", \\\"ura\\\": \\\"ura\\\", \\\"urt\\\": \\\"urt\\\", \\\"urd-script_devanagari\\\": \\\"ur\\\", \\\"urd-script_arabic\\\": \\\"ur\\\", \\\"urd-script_latin\\\": \\\"ur\\\", \\\"upv\\\": \\\"upv\\\", \\\"usp\\\": \\\"usp\\\", \\\"uig-script_arabic\\\": \\\"ug\\\", \\\"uig-script_cyrillic\\\": \\\"ug\\\", \\\"uzb-script_cyrillic\\\": \\\"uz\\\", \\\"vag\\\": \\\"vag\\\", \\\"bav\\\": \\\"bav\\\", \\\"vid\\\": \\\"vid\\\", \\\"vie\\\": \\\"vi\\\", \\\"vif\\\": \\\"vif\\\", \\\"vun\\\": \\\"vun\\\", \\\"vut\\\": \\\"vut\\\", \\\"prk\\\": \\\"prk\\\", \\\"wwa\\\": \\\"wwa\\\", \\\"rro\\\": \\\"rro\\\", \\\"bao\\\": \\\"bao\\\", \\\"waw\\\": \\\"waw\\\", \\\"lgl\\\": \\\"lgl\\\", \\\"wlx\\\": \\\"wlx\\\", \\\"cou\\\": \\\"cou\\\", \\\"hub\\\": \\\"hub\\\", \\\"gvc\\\": \\\"gvc\\\", \\\"mfi\\\": \\\"mfi\\\", \\\"wap\\\": \\\"wap\\\", \\\"wba\\\": \\\"wba\\\", \\\"war\\\": \\\"war\\\", \\\"way\\\": \\\"way\\\", \\\"guc\\\": \\\"guc\\\", \\\"cym\\\": \\\"cy\\\", \\\"kvw\\\": \\\"kvw\\\", \\\"tnp\\\": \\\"tnp\\\", \\\"hto\\\": \\\"hto\\\", \\\"huu\\\": \\\"huu\\\", \\\"wal-script_latin\\\": \\\"wal-script_latin\\\", \\\"wal-script_ethiopic\\\": \\\"wal-script_ethiopic\\\", \\\"wlo\\\": \\\"wlo\\\", \\\"noa\\\": \\\"noa\\\", \\\"wob\\\": \\\"wob\\\", \\\"kao\\\": \\\"kao\\\", \\\"xer\\\": \\\"xer\\\", \\\"yad\\\": \\\"yad\\\", \\\"yka\\\": \\\"yka\\\", \\\"sah\\\": \\\"sah\\\", \\\"yba\\\": \\\"yba\\\", \\\"yli\\\": \\\"yli\\\", \\\"nlk\\\": \\\"nlk\\\", \\\"yal\\\": \\\"yal\\\", \\\"yam\\\": \\\"yam\\\", \\\"yat\\\": \\\"yat\\\", \\\"jmd\\\": \\\"jmd\\\", \\\"tao\\\": \\\"tao\\\", \\\"yaa\\\": \\\"yaa\\\", \\\"ame\\\": \\\"ame\\\", \\\"guu\\\": \\\"guu\\\", \\\"yao\\\": \\\"yao\\\", \\\"yre\\\": \\\"yre\\\", \\\"yva\\\": \\\"yva\\\", \\\"ybb\\\": \\\"ybb\\\", \\\"pib\\\": \\\"pib\\\", \\\"byr\\\": \\\"byr\\\", \\\"pil\\\": \\\"pil\\\", \\\"ycn\\\": \\\"ycn\\\", \\\"ess\\\": \\\"ess\\\", \\\"yuz\\\": \\\"yuz\\\", \\\"atb\\\": \\\"atb\\\", \\\"zne\\\": \\\"zne\\\", \\\"zaq\\\": \\\"zaq\\\", \\\"zpo\\\": \\\"zpo\\\", \\\"zad\\\": \\\"zad\\\", \\\"zpc\\\": \\\"zpc\\\", \\\"zca\\\": \\\"zca\\\", \\\"zpg\\\": \\\"zpg\\\", \\\"zai\\\": \\\"zai\\\", \\\"zpl\\\": \\\"zpl\\\", \\\"zam\\\": \\\"zam\\\", \\\"zaw\\\": \\\"zaw\\\", \\\"zpm\\\": \\\"zpm\\\", \\\"zac\\\": \\\"zac\\\", \\\"zao\\\": \\\"zao\\\", \\\"ztq\\\": \\\"ztq\\\", \\\"zar\\\": \\\"zar\\\", \\\"zpt\\\": \\\"zpt\\\", \\\"zpi\\\": \\\"zpi\\\", \\\"zas\\\": \\\"zas\\\", \\\"zaa\\\": \\\"zaa\\\", \\\"zpz\\\": \\\"zpz\\\", \\\"zab\\\": \\\"zab\\\", \\\"zpu\\\": \\\"zpu\\\", \\\"zae\\\": \\\"zae\\\", \\\"zty\\\": \\\"zty\\\", \\\"zav\\\": \\\"zav\\\", \\\"zza\\\": \\\"zza\\\", \\\"zyb\\\": \\\"zyb\\\", \\\"ziw\\\": \\\"ziw\\\", \\\"zos\\\": \\\"zos\\\", \\\"gnd\\\": \\\"gnd\\\"},\""
      },
      {
        "line": 9527,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9528,
        "keyword": "Example",
        "content": "\"content\": \"\\\"e.g.\\\": \\\"for example\\\",\""
      },
      {
        "line": 9532,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 9533,
        "keyword": "TODO",
        "content": "\"content\": \"\\\"cak-dialect_santodomingoxenacoj\\\": {\\\"name\\\": \\\"Kaqchikel - dialect Santo Domingo Xenacoj\\\", \\\"native_name\\\": \\\"Kaqchikel\\\", \\\"max_chars\\\": 142},\""
      },
      {
        "line": 9539,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.058823529411764705,"
      },
      {
        "line": 9544,
        "keyword": "Coming soon",
        "content": "\"keyword\": \"Coming soon\","
      },
      {
        "line": 9545,
        "keyword": "Coming soon",
        "content": "\"content\": \"print('Other TTS engines coming soon!')\""
      },
      {
        "line": 9549,
        "keyword": "Coming soon",
        "content": "\"keyword\": \"Coming soon\","
      },
      {
        "line": 9550,
        "keyword": "Coming soon",
        "content": "\"content\": \"print('Other TTS engines coming soon!')\""
      },
      {
        "line": 9556,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.018518518518518517,"
      },
      {
        "line": 9561,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9562,
        "keyword": "Sample",
        "content": "\"content\": \"self.samplerate = models[session['tts_engine']][session['fine_tuned']]['samplerate']\""
      },
      {
        "line": 9566,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9567,
        "keyword": "Sample",
        "content": "\"content\": \"np.savez(npz_file, audio=audio, sample_rate=self.samplerate)\""
      },
      {
        "line": 9571,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9572,
        "keyword": "Example",
        "content": "\"content\": \"log_mel_spectrogram = vggish_input.wavfile_to_examples(self.wav_file)\""
      },
      {
        "line": 9576,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9577,
        "keyword": "Sample",
        "content": "\"content\": \"sample_rate = audio.frame_rate\""
      },
      {
        "line": 9581,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9582,
        "keyword": "Sample",
        "content": "\"content\": \"samples = np.array(chunk.get_array_of_samples())\""
      },
      {
        "line": 9586,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9587,
        "keyword": "Sample",
        "content": "\"content\": \"spectrum = np.abs(scipy.fftpack.fft(samples))\""
      },
      {
        "line": 9593,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.03125,"
      },
      {
        "line": 9598,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9599,
        "keyword": "Sample",
        "content": "\"content\": \"def _safe_multinomial(input, num_samples, replacement=False, *, generator=None, out=None):\""
      },
      {
        "line": 9603,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9604,
        "keyword": "Sample",
        "content": "\"content\": \"return _original_multinomial(input, num_samples, replacement=replacement, generator=generator, out=out)\""
      },
      {
        "line": 9608,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9609,
        "keyword": "Sample",
        "content": "\"content\": \"self.params[XTTSv2]['sample_rate'] = models[XTTSv2][self.session['fine_tuned']]['samplerate']\""
      },
      {
        "line": 9613,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9614,
        "keyword": "Sample",
        "content": "\"content\": \"self.params[BARK]['sample_rate'] = models[BARK][self.session['fine_tuned']]['samplerate']\""
      },
      {
        "line": 9618,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9619,
        "keyword": "Sample",
        "content": "\"content\": \"self.params[VITS]['sample_rate'] = models[VITS][self.session['fine_tuned']]['samplerate'][sub]\""
      },
      {
        "line": 9623,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9624,
        "keyword": "Sample",
        "content": "\"content\": \"self.params[FAIRSEQ]['sample_rate'] = models[FAIRSEQ][self.session['fine_tuned']]['samplerate']\""
      },
      {
        "line": 9628,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9629,
        "keyword": "Sample",
        "content": "\"content\": \"self.params[TACOTRON2]['sample_rate'] = models[TACOTRON2][self.session['fine_tuned']]['samplerate'][sub]\""
      },
      {
        "line": 9633,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9634,
        "keyword": "Sample",
        "content": "\"content\": \"self.params[YOURTTS]['sample_rate'] = models[YOURTTS][self.session['fine_tuned']]['samplerate']\""
      },
      {
        "line": 9638,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9639,
        "keyword": "Sample",
        "content": "\"content\": \"torchaudio.save(file_path, audio_tensor, default_xtts_settings['samplerate'], format='wav')\""
      },
      {
        "line": 9643,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9644,
        "keyword": "Sample",
        "content": "\"content\": \"for samplerate in [16000, 24000]:\""
      },
      {
        "line": 9648,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9649,
        "keyword": "Sample",
        "content": "\"content\": \"output_file = file_path.replace('.wav', f'_{samplerate}.wav')\""
      },
      {
        "line": 9653,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9654,
        "keyword": "Sample",
        "content": "\"content\": \"if not self._normalize_audio(file_path, output_file, samplerate):\""
      },
      {
        "line": 9658,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9659,
        "keyword": "Sample",
        "content": "\"content\": \"sample_rate, signal = wav.read(voice_path)\""
      },
      {
        "line": 9663,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9664,
        "keyword": "Sample",
        "content": "\"content\": \"freqs = np.fft.fftfreq(len(fft_spectrum), d=1/sample_rate)\""
      },
      {
        "line": 9668,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9669,
        "keyword": "Sample",
        "content": "\"content\": \"def _trim_audio(self, audio_data, sample_rate, silence_threshold=0.001, buffer_sec=0.007):\""
      },
      {
        "line": 9673,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9674,
        "keyword": "Sample",
        "content": "\"content\": \"start_index = max(non_silent_indices[0] - int(buffer_sec * sample_rate), 0)\""
      },
      {
        "line": 9678,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9679,
        "keyword": "Sample",
        "content": "\"content\": \"end_index = non_silent_indices[-1] + int(buffer_sec * sample_rate)\""
      },
      {
        "line": 9683,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9684,
        "keyword": "Sample",
        "content": "\"content\": \"def _normalize_audio(self, input_file, output_file, samplerate):\""
      },
      {
        "line": 9688,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9689,
        "keyword": "Sample",
        "content": "\"content\": \"'-ar', str(samplerate),\""
      },
      {
        "line": 9693,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9694,
        "keyword": "Sample",
        "content": "\"content\": \"sample_rate = 16000 if self.session['tts_engine'] in [TACOTRON2, VITS] and self.session['voice'] is not None else settings['sample_rate']\""
      },
      {
        "line": 9698,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9699,
        "keyword": "Sample",
        "content": "\"content\": \"silence_tensor = torch.zeros(1, int(sample_rate * 1.4)) # 1.4 seconds\""
      },
      {
        "line": 9703,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9704,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"-r\\\", str(settings['sample_rate']), tmp_out_wav,\""
      },
      {
        "line": 9708,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9709,
        "keyword": "Sample",
        "content": "\"content\": \"settings['sample_rate'] = 16000\""
      },
      {
        "line": 9713,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9714,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"-r\\\", str(settings['sample_rate']), tmp_out_wav,\""
      },
      {
        "line": 9718,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9719,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"-r\\\", str(settings['sample_rate']), tmp_out_wav,\""
      },
      {
        "line": 9723,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9724,
        "keyword": "Sample",
        "content": "\"content\": \"settings['sample_rate'] = 16000\""
      },
      {
        "line": 9728,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9729,
        "keyword": "Sample",
        "content": "\"content\": \"audio_tensor = self._trim_audio(audio_tensor.squeeze(), sample_rate, 0.001, trim_audio_buffer).unsqueeze(0)\""
      },
      {
        "line": 9733,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9734,
        "keyword": "Sample",
        "content": "\"content\": \"duration = audio_tensor.shape[-1] / sample_rate\""
      },
      {
        "line": 9738,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9739,
        "keyword": "Sample",
        "content": "\"content\": \"torchaudio.save(final_sentence, audio_tensor, sample_rate, format=default_audio_proc_format)\""
      },
      {
        "line": 9745,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.043256997455470736,"
      },
      {
        "line": 9750,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9751,
        "keyword": "Sample",
        "content": "\"content\": \"def _safe_multinomial(input, num_samples, replacement=False, *, generator=None, out=None):\""
      },
      {
        "line": 9755,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9756,
        "keyword": "Sample",
        "content": "\"content\": \"return _original_multinomial(input, num_samples, replacement=replacement, generator=generator, out=out)\""
      },
      {
        "line": 9760,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9761,
        "keyword": "Sample",
        "content": "\"content\": \"settings['sample_rate'] = models[self.session['tts_engine']][self.session['fine_tuned']]['samplerate']\""
      },
      {
        "line": 9765,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9766,
        "keyword": "Sample",
        "content": "\"content\": \"def _wav2npz(self, wav_path, npz_path, sample_rate):\""
      },
      {
        "line": 9770,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9771,
        "keyword": "Sample",
        "content": "\"content\": \"np.savez(npz_path, audio=audio, sample_rate=sample_rate)\""
      },
      {
        "line": 9775,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9776,
        "keyword": "Sample",
        "content": "\"content\": \"sample_rate, signal = wav.read(voice_path)\""
      },
      {
        "line": 9780,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9781,
        "keyword": "Sample",
        "content": "\"content\": \"freqs = np.fft.fftfreq(len(fft_spectrum), d=1/sample_rate)\""
      },
      {
        "line": 9785,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9786,
        "keyword": "Sample",
        "content": "\"content\": \"def _trim_audio(self, audio_data, sample_rate, silence_threshold=0.001, buffer_sec=0.007):\""
      },
      {
        "line": 9790,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9791,
        "keyword": "Sample",
        "content": "\"content\": \"start_index = max(non_silent_indices[0] - int(buffer_sec * sample_rate), 0)\""
      },
      {
        "line": 9795,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9796,
        "keyword": "Sample",
        "content": "\"content\": \"end_index = non_silent_indices[-1] + int(buffer_sec * sample_rate)\""
      },
      {
        "line": 9800,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9801,
        "keyword": "Sample",
        "content": "\"content\": \"def _normalize_audio(self, input_file, output_file, samplerate):\""
      },
      {
        "line": 9805,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9806,
        "keyword": "Sample",
        "content": "\"content\": \"'-ar', str(samplerate),\""
      },
      {
        "line": 9810,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9811,
        "keyword": "Sample",
        "content": "\"content\": \"sample_rate = settings['sample_rate']\""
      },
      {
        "line": 9815,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9816,
        "keyword": "Sample",
        "content": "\"content\": \"silence_tensor = torch.zeros(1, sample_rate * 2)\""
      },
      {
        "line": 9820,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9821,
        "keyword": "Sample",
        "content": "\"content\": \"audio_tensor = self._trim_audio(audio_tensor.squeeze(), sample_rate, 0.001, trim_audio_buffer).unsqueeze(0)\""
      },
      {
        "line": 9825,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9826,
        "keyword": "Sample",
        "content": "\"content\": \"duration = audio_tensor.shape[-1] / sample_rate\""
      },
      {
        "line": 9830,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 9831,
        "keyword": "Sample",
        "content": "\"content\": \"torchaudio.save(final_sentence, audio_tensor, sample_rate, format=default_audio_proc_format)\""
      },
      {
        "line": 9837,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.022727272727272728,"
      },
      {
        "line": 9842,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 9843,
        "keyword": "Placeholder",
        "content": "\"content\": \"/// earlier placeholder with basic persistence utilities.\""
      },
      {
        "line": 9849,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.01098901098901099,"
      },
      {
        "line": 9854,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 9855,
        "keyword": "Content for",
        "content": "\"content\": \"/// be passed to keep track of generated content for continuity checks.\""
      },
      {
        "line": 9861,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.06153846153846154,"
      },
      {
        "line": 9866,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9867,
        "keyword": "Example",
        "content": "\"content\": \"private let endpoint = URL(string: \\\"https://publishing.example.com/upload\\\")!\""
      },
      {
        "line": 9871,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9872,
        "keyword": "Example",
        "content": "\"content\": \"guard let url = URL(string: \\\"https://publishing.example.com/status/\\\\(id)\\\") else {\""
      },
      {
        "line": 9876,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9877,
        "keyword": "Example",
        "content": "\"content\": \"guard let url = URL(string: \\\"https://publishing.example.com/dashboards\\\") else {\""
      },
      {
        "line": 9881,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9882,
        "keyword": "Example",
        "content": "\"content\": \"guard let url = URL(string: \\\"https://publishing.example.com/connect\\\") else {\""
      },
      {
        "line": 9888,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.09090909090909091,"
      },
      {
        "line": 9893,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9894,
        "keyword": "Example",
        "content": "\"content\": \"These examples show how to request scene breakdowns and metadata from GPT-4.\""
      },
      {
        "line": 9900,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.002564102564102564,"
      },
      {
        "line": 9905,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9906,
        "keyword": "Example",
        "content": "\"content\": \"- [ ] Provide multilingual visual cue glossary with usage examples\""
      },
      {
        "line": 9912,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.046153846153846156,"
      },
      {
        "line": 9917,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9918,
        "keyword": "Example",
        "content": "\"content\": \"case .youtube: return URL(string: \\\"https://example.com/youtube/upload\\\")!\""
      },
      {
        "line": 9922,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9923,
        "keyword": "Example",
        "content": "\"content\": \"case .tiktok: return URL(string: \\\"https://example.com/tiktok/upload\\\")!\""
      },
      {
        "line": 9927,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9928,
        "keyword": "Example",
        "content": "\"content\": \"case .instagram: return URL(string: \\\"https://example.com/instagram/upload\\\")!\""
      },
      {
        "line": 9934,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.10810810810810811,"
      },
      {
        "line": 9939,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 9940,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockProtocol: URLProtocol {\""
      },
      {
        "line": 9944,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 9945,
        "keyword": "Mock",
        "content": "\"content\": \"guard let handler = MockProtocol.requestHandler else { return }\""
      },
      {
        "line": 9949,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 9950,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockProtocol.self]\""
      },
      {
        "line": 9954,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 9955,
        "keyword": "Mock",
        "content": "\"content\": \"MockProtocol.requestHandler = { request in\""
      },
      {
        "line": 9959,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9960,
        "keyword": "Example",
        "content": "\"content\": \"return AdminService(baseURL: URL(string: \\\"https://example.com\\\")!, session: session)\""
      },
      {
        "line": 9964,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 9965,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockProtocol.self]\""
      },
      {
        "line": 9969,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 9970,
        "keyword": "Mock",
        "content": "\"content\": \"MockProtocol.requestHandler = { request in\""
      },
      {
        "line": 9974,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 9975,
        "keyword": "Example",
        "content": "\"content\": \"let service = AdminService(baseURL: URL(string: \\\"https://example.com\\\")!, session: session)\""
      },
      {
        "line": 9981,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.10204081632653061,"
      },
      {
        "line": 9986,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 9987,
        "keyword": "Mock",
        "content": "\"content\": \"func testGenerateStrategyMock() {\""
      },
      {
        "line": 9991,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 9992,
        "keyword": "Mock",
        "content": "\"content\": \"class MockProtocol: URLProtocol {\""
      },
      {
        "line": 9996,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 9997,
        "keyword": "Mock",
        "content": "\"content\": \"guard let handler = MockProtocol.requestHandler else { return }\""
      },
      {
        "line": 10001,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10002,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockProtocol.self]\""
      },
      {
        "line": 10006,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10007,
        "keyword": "Mock",
        "content": "\"content\": \"MockProtocol.requestHandler = { request in\""
      },
      {
        "line": 10013,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.10714285714285714,"
      },
      {
        "line": 10018,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10019,
        "keyword": "Mock",
        "content": "\"content\": \"private final class MockSyncManager: MarketPriceFetching {\""
      },
      {
        "line": 10023,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10024,
        "keyword": "Mock",
        "content": "\"content\": \"let scanner = MultiMarketScanner(syncManager: MockSyncManager())\""
      },
      {
        "line": 10028,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10029,
        "keyword": "Mock",
        "content": "\"content\": \"let scanner = MultiMarketScanner(syncManager: MockSyncManager())\""
      },
      {
        "line": 10035,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.10204081632653061,"
      },
      {
        "line": 10040,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10041,
        "keyword": "Mock",
        "content": "\"content\": \"func testSendPromptMock() {\""
      },
      {
        "line": 10045,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10046,
        "keyword": "Mock",
        "content": "\"content\": \"class MockProtocol: URLProtocol {\""
      },
      {
        "line": 10050,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10051,
        "keyword": "Mock",
        "content": "\"content\": \"guard let handler = MockProtocol.requestHandler else { return }\""
      },
      {
        "line": 10055,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10056,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockProtocol.self]\""
      },
      {
        "line": 10060,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10061,
        "keyword": "Mock",
        "content": "\"content\": \"MockProtocol.requestHandler = { request in\""
      },
      {
        "line": 10065,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10066,
        "keyword": "Mock",
        "content": "\"content\": \"func testFetchEmbeddingMock() {\""
      },
      {
        "line": 10070,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10071,
        "keyword": "Mock",
        "content": "\"content\": \"class MockProtocol: URLProtocol {\""
      },
      {
        "line": 10075,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10076,
        "keyword": "Mock",
        "content": "\"content\": \"guard let handler = MockProtocol.requestHandler else { return }\""
      },
      {
        "line": 10080,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10081,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockProtocol.self]\""
      },
      {
        "line": 10085,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10086,
        "keyword": "Mock",
        "content": "\"content\": \"MockProtocol.requestHandler = { request in\""
      },
      {
        "line": 10092,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.10869565217391304,"
      },
      {
        "line": 10097,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10098,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockProtocol: URLProtocol {\""
      },
      {
        "line": 10102,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10103,
        "keyword": "Mock",
        "content": "\"content\": \"guard let handler = MockProtocol.requestHandler else { return }\""
      },
      {
        "line": 10107,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10108,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockProtocol.self]\""
      },
      {
        "line": 10112,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10113,
        "keyword": "Mock",
        "content": "\"content\": \"MockProtocol.requestHandler = { request in\""
      },
      {
        "line": 10117,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10118,
        "keyword": "Example",
        "content": "\"content\": \"let service = ReportingService(baseURL: URL(string: \\\"https://example.com\\\")!, session: session)\""
      },
      {
        "line": 10124,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.10810810810810811,"
      },
      {
        "line": 10129,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10130,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockURLProtocol: URLProtocol {\""
      },
      {
        "line": 10134,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10135,
        "keyword": "Mock",
        "content": "\"content\": \"if let data = MockURLProtocol.responseData {\""
      },
      {
        "line": 10139,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10140,
        "keyword": "Mock",
        "content": "\"content\": \"MockURLProtocol.responseData = json\""
      },
      {
        "line": 10144,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10145,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockURLProtocol.self]\""
      },
      {
        "line": 10151,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.05555555555555555,"
      },
      {
        "line": 10156,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10157,
        "keyword": "Mock",
        "content": "\"content\": \"/// Executes mock shadow trades based on whale wallet activity.\""
      },
      {
        "line": 10161,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10162,
        "keyword": "Mock",
        "content": "\"content\": \"/// Perform a mock trade following a whale wallet signal.\""
      },
      {
        "line": 10168,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.045454545454545456,"
      },
      {
        "line": 10173,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10174,
        "keyword": "Example",
        "content": "\"content\": \"let updater = AutoUpdater(updateURL: url ?? URL(string: \\\"https://example.com/latest.json\\\")!,\""
      },
      {
        "line": 10180,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.023255813953488372,"
      },
      {
        "line": 10185,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10186,
        "keyword": "Sample",
        "content": "\"content\": \"# Sample video URLs and thumbnails for different styles\""
      },
      {
        "line": 10190,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10191,
        "keyword": "Sample",
        "content": "\"content\": \"SAMPLE_VIDEOS = {\""
      },
      {
        "line": 10195,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10196,
        "keyword": "Sample",
        "content": "\"content\": \"# Update video status to completed with sample content\""
      },
      {
        "line": 10200,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10201,
        "keyword": "Sample",
        "content": "\"content\": \"sample_content = random.choice(SAMPLE_VIDEOS.get(style, SAMPLE_VIDEOS[\\\"realistic\\\"]))\""
      },
      {
        "line": 10205,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10206,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"video_url\\\": sample_content[\\\"video_url\\\"],\""
      },
      {
        "line": 10210,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10211,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"thumbnail_url\\\": sample_content[\\\"thumbnail_url\\\"]\""
      },
      {
        "line": 10217,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.06666666666666667,"
      },
      {
        "line": 10222,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10223,
        "keyword": "Mock",
        "content": "\"content\": \"private class MockProtocol: URLProtocol {\""
      },
      {
        "line": 10227,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10228,
        "keyword": "Mock",
        "content": "\"content\": \"guard let handler = MockProtocol.requestHandler else { return }\""
      },
      {
        "line": 10232,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10233,
        "keyword": "Mock",
        "content": "\"content\": \"config.protocolClasses = [MockProtocol.self]\""
      },
      {
        "line": 10237,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10238,
        "keyword": "Mock",
        "content": "\"content\": \"MockProtocol.requestHandler = { request in\""
      },
      {
        "line": 10244,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.09090909090909091,"
      },
      {
        "line": 10249,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10250,
        "keyword": "Example",
        "content": "\"content\": \"let lead = Lead(name: \\\"Alice\\\", email: \\\"a@example.com\\\", company: \\\"Acme\\\", industry: \\\"Software\\\", region: \\\"US\\\")\""
      },
      {
        "line": 10256,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.02,"
      },
      {
        "line": 10261,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10262,
        "keyword": "Example",
        "content": "\"content\": \"public init(baseURL: URL = URL(string: \\\"https://signals.example.com\\\")!,\""
      },
      {
        "line": 10268,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.017241379310344827,"
      },
      {
        "line": 10273,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10274,
        "keyword": "Mock",
        "content": "\"content\": \"/// Append basic firmographic details to a lead (mock implementation)\""
      },
      {
        "line": 10280,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.019230769230769232,"
      },
      {
        "line": 10285,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10286,
        "keyword": "Example",
        "content": "\"content\": \"public init(baseURL: URL = URL(string: \\\"https://crm.example.com\\\")!,\""
      },
      {
        "line": 10292,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.36363636363636365,"
      },
      {
        "line": 10297,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10298,
        "keyword": "Sample",
        "content": "\"content\": \"* Record a short voice sample by generating silent PCM data.\""
      },
      {
        "line": 10302,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10303,
        "keyword": "Sample",
        "content": "\"content\": \"export async function recordVoice(samplePath, durationMs = 1000) {\""
      },
      {
        "line": 10307,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10308,
        "keyword": "Sample",
        "content": "\"content\": \"const bytes = Buffer.alloc(16 * durationMs); // fake 16 kHz mono samples\""
      },
      {
        "line": 10312,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10313,
        "keyword": "Sample",
        "content": "\"content\": \"await fs.writeFile(samplePath, bytes);\""
      },
      {
        "line": 10317,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10318,
        "keyword": "Sample",
        "content": "\"content\": \"return samplePath;\""
      },
      {
        "line": 10322,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10323,
        "keyword": "Sample",
        "content": "\"content\": \"* Naively analyze a voice sample by returning its average amplitude.\""
      },
      {
        "line": 10327,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10328,
        "keyword": "Sample",
        "content": "\"content\": \"export async function analyzeVoice(samplePath) {\""
      },
      {
        "line": 10332,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10333,
        "keyword": "Sample",
        "content": "\"content\": \"const data = await fs.readFile(samplePath);\""
      },
      {
        "line": 10339,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.018867924528301886,"
      },
      {
        "line": 10344,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10345,
        "keyword": "Example",
        "content": "\"content\": \"Adapted from the Requests library examples (Apache-2.0).\""
      },
      {
        "line": 10351,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.018691588785046728,"
      },
      {
        "line": 10356,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10357,
        "keyword": "Placeholder",
        "content": "\"content\": \"Use `scripts/generate_placeholder_icons.py` to create required icon sizes.\""
      },
      {
        "line": 10361,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10362,
        "keyword": "Sample",
        "content": "\"content\": \"- Run `../../scripts/fetch_plugins.sh` to download sample plugins before building.\""
      },
      {
        "line": 10368,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.16666666666666666,"
      },
      {
        "line": 10373,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10374,
        "keyword": "Sample",
        "content": "\"content\": \"- Run `../../scripts/fetch_plugins.sh` from the repo root to download sample plugins before building.\""
      },
      {
        "line": 10380,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.058823529411764705,"
      },
      {
        "line": 10385,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10386,
        "keyword": "Mock",
        "content": "\"content\": \"/// This mock implementation only stores IDs for demonstration.\""
      },
      {
        "line": 10392,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.01818181818181818,"
      },
      {
        "line": 10397,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10398,
        "keyword": "Example",
        "content": "\"content\": \"/// XOR operation based on the provided password so the examples\""
      },
      {
        "line": 10404,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.4,"
      },
      {
        "line": 10409,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10410,
        "keyword": "Example",
        "content": "\"content\": \"{\\\"name\\\": \\\"Trap Loop\\\", \\\"url\\\": \\\"https://example.com/trap_loop.mp3\\\"},\""
      },
      {
        "line": 10414,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10415,
        "keyword": "Example",
        "content": "\"content\": \"{\\\"name\\\": \\\"Lo-Fi Chill\\\", \\\"url\\\": \\\"https://example.com/lofi_chill.mp3\\\"}\""
      },
      {
        "line": 10421,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.08333333333333333,"
      },
      {
        "line": 10426,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10427,
        "keyword": "Example",
        "content": "\"content\": \"// Randomized test for example purposes\""
      },
      {
        "line": 10433,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.058823529411764705,"
      },
      {
        "line": 10438,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10439,
        "keyword": "Mock",
        "content": "\"content\": \"/// Split-test hooks and rank by mock virality score\""
      },
      {
        "line": 10445,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.013157894736842105,"
      },
      {
        "line": 10450,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10451,
        "keyword": "Mock",
        "content": "\"content\": \"/// Begin rendering process (mock implementation)\""
      },
      {
        "line": 10457,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.037037037037037035,"
      },
      {
        "line": 10462,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10463,
        "keyword": "Example",
        "content": "\"content\": \"public init(baseURL: URL = URL(string: \\\"https://upload.example.com\\\")!,\""
      },
      {
        "line": 10469,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.5,"
      },
      {
        "line": 10474,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 10475,
        "keyword": "Content for",
        "content": "\"content\": \"# Auto-generated for Flag NSFW content for internal moderation or publishing filter logic\""
      },
      {
        "line": 10479,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 10480,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"\\\"\\\"Flag NSFW content for internal moderation or publishing filter logic\\\"\\\"\\\"\""
      },
      {
        "line": 10484,
        "keyword": "Sample",
        "content": "\"generated/CoreForgeAudio/Prompt_validation_with_multiple_sample_inputs_and_outputs.py\": {"
      },
      {
        "line": 10486,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.5,"
      },
      {
        "line": 10491,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10492,
        "keyword": "Sample",
        "content": "\"content\": \"# Auto-generated for Prompt validation with multiple sample inputs and outputs\""
      },
      {
        "line": 10496,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10497,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"\\\"\\\"Prompt validation with multiple sample inputs and outputs\\\"\\\"\\\"\""
      },
      {
        "line": 10503,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.5,"
      },
      {
        "line": 10508,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 10509,
        "keyword": "Content for",
        "content": "\"content\": \"# Auto-generated for Auto-detect safe vs. unsafe content for preview-only versions\""
      },
      {
        "line": 10513,
        "keyword": "Content for",
        "content": "\"keyword\": \"Content for\","
      },
      {
        "line": 10514,
        "keyword": "Content for",
        "content": "\"content\": \"\\\"\\\"\\\"Auto-detect safe vs. unsafe content for preview-only versions\\\"\\\"\\\"\""
      },
      {
        "line": 10518,
        "keyword": "Sample",
        "content": "\"generated/CoreForgeAudio/PromptTemplates_md_AI_workflows_sample_prompts.py\": {"
      },
      {
        "line": 10520,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.5,"
      },
      {
        "line": 10525,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10526,
        "keyword": "Sample",
        "content": "\"content\": \"# Auto-generated for PromptTemplates.md (AI workflows, sample prompts)\""
      },
      {
        "line": 10530,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10531,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"\\\"\\\"PromptTemplates.md (AI workflows, sample prompts)\\\"\\\"\\\"\""
      },
      {
        "line": 10537,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.21428571428571427,"
      },
      {
        "line": 10542,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10543,
        "keyword": "Sample",
        "content": "\"content\": \"def apply_singing_tone(samples: Iterable[float], tone: float) -> List[float]:\""
      },
      {
        "line": 10547,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10548,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"\\\"\\\"Apply a simple tone multiplier to audio sample amplitudes.\\\"\\\"\\\"\""
      },
      {
        "line": 10552,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10553,
        "keyword": "Sample",
        "content": "\"content\": \"return [max(min(s * tone, 1.0), -1.0) for s in samples]\""
      },
      {
        "line": 10557,
        "keyword": "Sample",
        "content": "\"generated/CoreForgeAudio/Allow_users_to_test_voice_preview_samples_per_character_before_rendering.py\": {"
      },
      {
        "line": 10559,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.5,"
      },
      {
        "line": 10564,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10565,
        "keyword": "Sample",
        "content": "\"content\": \"# Auto-generated for Allow users to test voice preview samples per character before rendering\""
      },
      {
        "line": 10569,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10570,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"\\\"\\\"Allow users to test voice preview samples per character before rendering\\\"\\\"\\\"\""
      },
      {
        "line": 10574,
        "keyword": "Example",
        "content": "\"generated/CoreForgeVisual/Provide_multilingual_visual_cue_glossary_with_usage_examples.py\": {"
      },
      {
        "line": 10576,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.5,"
      },
      {
        "line": 10581,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10582,
        "keyword": "Example",
        "content": "\"content\": \"# Auto-generated for Provide multilingual visual cue glossary with usage examples\""
      },
      {
        "line": 10586,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10587,
        "keyword": "Example",
        "content": "\"content\": \"\\\"\\\"\\\"Provide multilingual visual cue glossary with usage examples\\\"\\\"\\\"\""
      },
      {
        "line": 10593,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.004201680672268907,"
      },
      {
        "line": 10598,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10599,
        "keyword": "Placeholder",
        "content": "\"content\": \"The file `scripts/ensure_200_features.py` now auto-generates placeholder\""
      },
      {
        "line": 10605,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.002079002079002079,"
      },
      {
        "line": 10610,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10611,
        "keyword": "Example",
        "content": "\"content\": \"- Provide multilingual visual cue glossary with usage examples\""
      },
      {
        "line": 10617,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0020942408376963353,"
      },
      {
        "line": 10622,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10623,
        "keyword": "Sample",
        "content": "\"content\": \"- Prompt validation with multiple sample inputs and outputs\""
      },
      {
        "line": 10627,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10628,
        "keyword": "Sample",
        "content": "\"content\": \"- PromptTemplates.md (AI workflows, sample prompts)\""
      },
      {
        "line": 10634,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.1875,"
      },
      {
        "line": 10639,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10640,
        "keyword": "Sample",
        "content": "\"content\": \"`VoiceTrainer` provides a lightweight way to upload audio samples and generate custom voices entirely offline.\""
      },
      {
        "line": 10644,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10645,
        "keyword": "Sample",
        "content": "\"content\": \"trainer.uploadSample(for: \\\"Hero\\\", filePath: \\\"/path/hero.wav\\\")\""
      },
      {
        "line": 10649,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10650,
        "keyword": "Sample",
        "content": "\"content\": \"Use `listTrainedVoices()` to print all available custom voices. Samples can be shared between apps via `VoiceMemoryManager`.\""
      },
      {
        "line": 10656,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.009174311926605505,"
      },
      {
        "line": 10661,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 10662,
        "keyword": "TODO",
        "content": "\"content\": \"# Practical Approach and Initial TODO List\""
      },
      {
        "line": 10668,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.08,"
      },
      {
        "line": 10673,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 10674,
        "keyword": "TODO",
        "content": "\"content\": \"- `PRACTICAL_PLAN.md` \\u2013 initial TODO list across apps.\""
      },
      {
        "line": 10678,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10679,
        "keyword": "Placeholder",
        "content": "\"content\": \"- `auto_code_bot.py` \\u2013 generates placeholder code files for missing features. It now includes an offline mode and a `--upgrade-placeholders` option to replace stubs with OpenAI-generated code when an API key is available.\""
      },
      {
        "line": 10685,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.21052631578947367,"
      },
      {
        "line": 10690,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10691,
        "keyword": "Placeholder",
        "content": "\"content\": \"`auto_code_bot.py` scans the repository for incomplete features listed in `AGENTS.md` files. For each missing task it now generates a language-specific placeholder file under the `generated/` directory. When the `openai` package is installed and `OPENAI_API_KEY` is set, the bot attempts to generate code with OpenAI. Without OpenAI, it creates an advanced offline stub that detects the desired language (Swift, Kotlin, TypeScript, or Python) and builds a minimal class or function skeleton. The script also performs a quick syntax check on all Python files and comments out any lines that fail to compile so the project can build entirely offline.\""
      },
      {
        "line": 10695,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10696,
        "keyword": "Placeholder",
        "content": "\"content\": \"To replace existing placeholder files with new code generated via OpenAI, run:\""
      },
      {
        "line": 10700,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10701,
        "keyword": "Placeholder",
        "content": "\"content\": \"python scripts/auto_code_bot.py --upgrade-placeholders\""
      },
      {
        "line": 10705,
        "keyword": "Example",
        "content": "\"keyword\": \"Example\","
      },
      {
        "line": 10706,
        "keyword": "Example",
        "content": "\"content\": \"Generated filenames now match the detected language. For example, a Swift feature results in `feature.swift`, while a Python task becomes `feature.py`. Every run also scans existing Python files and comments out lines with syntax errors to keep the repository importable when offline.\""
      },
      {
        "line": 10712,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.09090909090909091,"
      },
      {
        "line": 10717,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10718,
        "keyword": "Placeholder",
        "content": "\"content\": \"- Apps avoid spammy functionality or placeholder content (Guideline 4.3) and include only finalized, user-facing features.\""
      },
      {
        "line": 10724,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.038461538461538464,"
      },
      {
        "line": 10729,
        "keyword": "TODO",
        "content": "\"keyword\": \"TODO\","
      },
      {
        "line": 10730,
        "keyword": "TODO",
        "content": "\"content\": \"- `PRACTICAL_PLAN.md` \\u2013 initial TODO list across apps.\""
      },
      {
        "line": 10736,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.2,"
      },
      {
        "line": 10741,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10742,
        "keyword": "Mock",
        "content": "\"content\": \"jest.mock('./src/ttsService', () => ({\""
      },
      {
        "line": 10746,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10747,
        "keyword": "Mock",
        "content": "\"content\": \"jest.mock('./src/vaultService', () => ({\""
      },
      {
        "line": 10753,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.09090909090909091,"
      },
      {
        "line": 10758,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10759,
        "keyword": "Sample",
        "content": "\"content\": \"See `scripts/train-sample.ts` for a CLI example that trains a sample model.\""
      },
      {
        "line": 10765,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0020776522529541617,"
      },
      {
        "line": 10770,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10771,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\"\""
      },
      {
        "line": 10775,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10776,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\",\""
      },
      {
        "line": 10780,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10781,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\"\""
      },
      {
        "line": 10785,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10786,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\",\""
      },
      {
        "line": 10790,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10791,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"node_modules/@jest/environment-jsdom-abstract/node_modules/jest-mock\\\": {\""
      },
      {
        "line": 10795,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10796,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"resolved\\\": \\\"https://registry.npmjs.org/jest-mock/-/jest-mock-30.0.2.tgz\\\",\""
      },
      {
        "line": 10800,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10801,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\",\""
      },
      {
        "line": 10805,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10806,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\"\""
      },
      {
        "line": 10810,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10811,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\"\""
      },
      {
        "line": 10815,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10816,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"30.0.2\\\",\""
      },
      {
        "line": 10820,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10821,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"node_modules/jest-environment-jsdom/node_modules/jest-mock\\\": {\""
      },
      {
        "line": 10825,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10826,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"resolved\\\": \\\"https://registry.npmjs.org/jest-mock/-/jest-mock-30.0.2.tgz\\\",\""
      },
      {
        "line": 10830,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10831,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\",\""
      },
      {
        "line": 10835,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10836,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"node_modules/jest-mock\\\": {\""
      },
      {
        "line": 10840,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10841,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"resolved\\\": \\\"https://registry.npmjs.org/jest-mock/-/jest-mock-29.7.0.tgz\\\",\""
      },
      {
        "line": 10845,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10846,
        "keyword": "Mock",
        "content": "\"content\": \"\\\"jest-mock\\\": \\\"^29.7.0\\\",\""
      },
      {
        "line": 10852,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.030303030303030304,"
      },
      {
        "line": 10857,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10858,
        "keyword": "Sample",
        "content": "\"content\": \"\\\"train-sample\\\": \\\"ts-node scripts/train-sample.ts\\\"\""
      },
      {
        "line": 10862,
        "keyword": "Sample",
        "content": "\"VoiceLab/scripts/train-sample.ts\": {"
      },
      {
        "line": 10864,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.25,"
      },
      {
        "line": 10869,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10870,
        "keyword": "Sample",
        "content": "\"content\": \"const sample = new Blob(['audio']);\""
      },
      {
        "line": 10874,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10875,
        "keyword": "Sample",
        "content": "\"content\": \"const model = await engine.trainVoiceModel(sample, 'sample-speaker');\""
      },
      {
        "line": 10881,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.16666666666666666,"
      },
      {
        "line": 10886,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10887,
        "keyword": "Sample",
        "content": "\"content\": \"const sample = new Blob(['audio']);\""
      },
      {
        "line": 10891,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10892,
        "keyword": "Sample",
        "content": "\"content\": \"const model = await engine.trainVoiceModel(sample, 'speaker1');\""
      },
      {
        "line": 10896,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10897,
        "keyword": "Sample",
        "content": "\"content\": \"const metrics = await new VoiceAnalyticsService().analyze(sample);\""
      },
      {
        "line": 10903,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.25,"
      },
      {
        "line": 10908,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10909,
        "keyword": "Sample",
        "content": "\"content\": \"const text = 'Title: Sample Book\\\\nAuthor: Jane Doe\\\\n\\\\nChapter 1\\\\nHello\\\\n\\\\nChapter 2\\\\nWorld';\""
      },
      {
        "line": 10913,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10914,
        "keyword": "Sample",
        "content": "\"content\": \"const file = new File([text], 'sample.txt');\""
      },
      {
        "line": 10918,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10919,
        "keyword": "Sample",
        "content": "\"content\": \"expect(book.title).toBe('Sample Book');\""
      },
      {
        "line": 10925,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.04,"
      },
      {
        "line": 10930,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10931,
        "keyword": "Mock",
        "content": "\"content\": \"global.fetch = jest.fn().mockResolvedValue({\""
      },
      {
        "line": 10937,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.15384615384615385,"
      },
      {
        "line": 10942,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10943,
        "keyword": "Placeholder",
        "content": "\"content\": \"<input value={word} onChange={e => setWord(e.target.value)} placeholder=\\\"word\\\" />\""
      },
      {
        "line": 10947,
        "keyword": "Placeholder",
        "content": "\"keyword\": \"Placeholder\","
      },
      {
        "line": 10948,
        "keyword": "Placeholder",
        "content": "\"content\": \"<input value={phoneme} onChange={e => setPhoneme(e.target.value)} placeholder=\\\"phoneme\\\" />\""
      },
      {
        "line": 10954,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.07692307692307693,"
      },
      {
        "line": 10959,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10960,
        "keyword": "Sample",
        "content": "\"content\": \"* suitable for unit tests and sample exports.\""
      },
      {
        "line": 10966,
        "keyword": "Placeholder",
        "content": "\"placeholder_percentage\": 0.0625,"
      },
      {
        "line": 10971,
        "keyword": "Sample",
        "content": "\"keyword\": \"Sample\","
      },
      {
        "line": 10972,
        "keyword": "Sample",
        "content": "\"content\": \"async trainVoiceModel(sampleAudio: Blob, speakerId: string): Promise<VoiceModel> {\""
      },
      {
        "line": 10976,
        "keyword": "Mock",
        "content": "\"keyword\": \"Mock\","
      },
      {
        "line": 10977,
        "keyword": "Mock",
        "content": "\"content\": \"// mock training delay\""
      }
    ]
  },
  "README.md": {
    "total_lines": 391,
    "placeholder_percentage": 0.005115089514066497,
    "flagged": false,
    "occurrences": [
      {
        "line": 307,
        "keyword": "Example",
        "content": "Copy `.env.example` to `.env` and provide your `OPENAI_API_KEY` before running any app or tests. The shared `OpenAIService` reads this value at runtime."
      },
      {
        "line": 364,
        "keyword": "Sample",
        "content": "Use `scripts/chatterbox_bridge.py` to generate a narrated play from a simple `SPEAKER: line` script. Place `speaker.mp3` samples next to your script and set `CHATTERBOX_API_URL` before running:"
      }
    ]
  },
  "AGENTS.md": {
    "total_lines": 384,
    "placeholder_percentage": 0.0026041666666666665,
    "flagged": false,
    "occurrences": [
      {
        "line": 283,
        "keyword": "Example",
        "content": "- [ ] Provide multilingual visual cue glossary with usage examples"
      }
    ]
  },
  "package-lock.json": {
    "total_lines": 7210,
    "placeholder_percentage": 0.0018030513176144243,
    "flagged": false,
    "occurrences": [
      {
        "line": 1382,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\""
      },
      {
        "line": 1398,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\","
      },
      {
        "line": 1422,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\""
      },
      {
        "line": 1437,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\","
      },
      {
        "line": 1529,
        "keyword": "Mock",
        "content": "\"VoiceLab/node_modules/@jest/environment-jsdom-abstract/node_modules/jest-mock\": {"
      },
      {
        "line": 1614,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\","
      },
      {
        "line": 1629,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\""
      },
      {
        "line": 4797,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\""
      },
      {
        "line": 4812,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\","
      },
      {
        "line": 4904,
        "keyword": "Mock",
        "content": "\"VoiceLab/node_modules/jest-environment-jsdom/node_modules/jest-mock\": {"
      },
      {
        "line": 4966,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\","
      },
      {
        "line": 5050,
        "keyword": "Mock",
        "content": "\"VoiceLab/node_modules/jest-mock\": {"
      },
      {
        "line": 5169,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\","
      }
    ]
  },
  "docker-compose.yml": {
    "total_lines": 15,
    "placeholder_percentage": 0.06666666666666667,
    "flagged": false,
    "occurrences": [
      {
        "line": 15,
        "keyword": "Mock",
        "content": "command: node mock-tts.js"
      }
    ]
  },
  "OpenAI-Integration.md": {
    "total_lines": 65,
    "placeholder_percentage": 0.046153846153846156,
    "flagged": false,
    "occurrences": [
      {
        "line": 25,
        "keyword": "Mock",
        "content": "- Write unit tests using a mocked OpenAI client."
      },
      {
        "line": 50,
        "keyword": "Example",
        "content": "you can reach the maintainers at `support@example.com`."
      },
      {
        "line": 57,
        "keyword": "Example",
        "content": "For local development copy `.env.example` to `.env` and supply your `OPENAI_API_KEY`. This file is ignored by git."
      }
    ]
  },
  "feature_audit_report.json": {
    "total_lines": 1697,
    "placeholder_percentage": 0.004714201532115498,
    "flagged": false,
    "occurrences": [
      {
        "line": 246,
        "keyword": "Example",
        "content": "\"Provide multilingual visual cue glossary with usage examples (`generated/CoreForgeVisual/Provide_multilingual_visual_cue_glossary_with_usage_examples.py`)\","
      },
      {
        "line": 329,
        "keyword": "TODO",
        "content": "\"`PRACTICAL_PLAN.md` \\u2013 initial TODO list across apps.\","
      },
      {
        "line": 496,
        "keyword": "Sample",
        "content": "\"Prompt validation with multiple sample inputs and outputs\","
      },
      {
        "line": 507,
        "keyword": "Sample",
        "content": "\"PromptTemplates.md (AI workflows, sample prompts)\","
      },
      {
        "line": 754,
        "keyword": "Sample",
        "content": "\"Allow users to test voice preview samples per character before rendering\","
      },
      {
        "line": 884,
        "keyword": "Content for",
        "content": "\"Flag NSFW content for internal moderation or publishing filter logic\","
      },
      {
        "line": 885,
        "keyword": "Content for",
        "content": "\"Auto-detect safe vs. unsafe content for preview-only versions\","
      },
      {
        "line": 1621,
        "keyword": "Example",
        "content": "\"Provide multilingual visual cue glossary with usage examples\","
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/FilingsDatabaseTests.swift": {
    "total_lines": 22,
    "placeholder_percentage": 0.09090909090909091,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Example",
        "content": "let filing = Filing(title: \"Test\", date: Date(timeIntervalSince1970: 0), url: URL(string: \"https://example.com\")!)"
      },
      {
        "line": 17,
        "keyword": "Example",
        "content": "let filing = Filing(title: \"Test\", date: Date(), url: URL(string: \"https://example.com\")!)"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/OCRScanModeTests.swift": {
    "total_lines": 10,
    "placeholder_percentage": 0.2,
    "flagged": false,
    "occurrences": [
      {
        "line": 7,
        "keyword": "Sample",
        "content": "let data = \"Sample\".data(using: .utf8)!"
      },
      {
        "line": 8,
        "keyword": "Sample",
        "content": "XCTAssertEqual(ocr.extractText(from: data), \"Sample\")"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/NSFWPhase7FeatureTests.swift": {
    "total_lines": 28,
    "placeholder_percentage": 0.03571428571428571,
    "flagged": false,
    "occurrences": [
      {
        "line": 5,
        "keyword": "Placeholder",
        "content": "func testPhase7Placeholders() {"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/RealTimeImproviserServiceTests.swift": {
    "total_lines": 69,
    "placeholder_percentage": 0.043478260869565216,
    "flagged": false,
    "occurrences": [
      {
        "line": 5,
        "keyword": "Mock",
        "content": "private class MockEngine: AIEngine {"
      },
      {
        "line": 24,
        "keyword": "Mock",
        "content": "let service = RealTimeImproviserService(engine: FusionEngine(engine: MockEngine()), context: \"Scene\")"
      },
      {
        "line": 34,
        "keyword": "Mock",
        "content": "let service = RealTimeImproviserService(engine: FusionEngine(engine: MockEngine()))"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/AutoUpdaterTests.swift": {
    "total_lines": 39,
    "placeholder_percentage": 0.1282051282051282,
    "flagged": false,
    "occurrences": [
      {
        "line": 9,
        "keyword": "Mock",
        "content": "private class MockURLProtocol: URLProtocol {"
      },
      {
        "line": 14,
        "keyword": "Mock",
        "content": "if let data = MockURLProtocol.responseData {"
      },
      {
        "line": 26,
        "keyword": "Mock",
        "content": "MockURLProtocol.responseData = json"
      },
      {
        "line": 28,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      },
      {
        "line": 30,
        "keyword": "Example",
        "content": "let updater = AutoUpdater(updateURL: URL(string: \"https://example.com\")!, session: session)"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/AudioExporterTests.swift": {
    "total_lines": 35,
    "placeholder_percentage": 0.05714285714285714,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Sample",
        "content": "XCTAssertTrue(exporter.exportToMP3(audioData: data, filename: \"sample\"))"
      },
      {
        "line": 14,
        "keyword": "Sample",
        "content": "XCTAssertTrue(exporter.exportToWAV(audioData: data, filename: \"sample\"))"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/DocumentParserTests.swift": {
    "total_lines": 23,
    "placeholder_percentage": 0.043478260869565216,
    "flagged": false,
    "occurrences": [
      {
        "line": 7,
        "keyword": "Sample",
        "content": "let tmp = FileManager.default.temporaryDirectory.appendingPathComponent(\"sample.txt\")"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/LocalVoiceAITests.swift": {
    "total_lines": 49,
    "placeholder_percentage": 0.061224489795918366,
    "flagged": false,
    "occurrences": [
      {
        "line": 21,
        "keyword": "Sample",
        "content": "func testCustomSampleRate() {"
      },
      {
        "line": 25,
        "keyword": "Sample",
        "content": "engine.synthesize(text: \"Hi\", with: profile, sampleRate: 22_050) { result in"
      },
      {
        "line": 41,
        "keyword": "Sample",
        "content": "engine.cloneVoice(from: Data(\"sample\".utf8), name: \"Clone\") { profile in"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/LocalElevenLabsClientTests.swift": {
    "total_lines": 32,
    "placeholder_percentage": 0.0625,
    "flagged": false,
    "occurrences": [
      {
        "line": 12,
        "keyword": "Sample",
        "content": "let profile = VoiceProfile(name: \"Sample\")"
      },
      {
        "line": 14,
        "keyword": "Sample",
        "content": "XCTAssertEqual(client.voiceInfo(id: profile.id)?.name, \"Sample\")"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/AudioEffectsPipelineTests.swift": {
    "total_lines": 23,
    "placeholder_percentage": 0.043478260869565216,
    "flagged": false,
    "occurrences": [
      {
        "line": 19,
        "keyword": "Sample",
        "content": "let track = pipeline.mix(samples: [\"a\", \"b\"])"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/BestsellerStructureEngineTests.swift": {
    "total_lines": 16,
    "placeholder_percentage": 0.125,
    "flagged": false,
    "occurrences": [
      {
        "line": 6,
        "keyword": "Sample",
        "content": "let sample = ["
      },
      {
        "line": 11,
        "keyword": "Sample",
        "content": "let outline = engine.analyze(books: sample)"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/VoiceTrainerTests.swift": {
    "total_lines": 18,
    "placeholder_percentage": 0.1111111111111111,
    "flagged": false,
    "occurrences": [
      {
        "line": 7,
        "keyword": "Sample",
        "content": "trainer.uploadSample(for: \"Hero\", filePath: \"/path/sample.wav\")"
      },
      {
        "line": 13,
        "keyword": "Sample",
        "content": "trainer.uploadSample(for: \"Hero\", filePath: \"/path/sample.wav\")"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/FusionEngineAdvancedTests.swift": {
    "total_lines": 44,
    "placeholder_percentage": 0.06818181818181818,
    "flagged": false,
    "occurrences": [
      {
        "line": 5,
        "keyword": "Mock",
        "content": "private struct MockEngine: AIEngine {"
      },
      {
        "line": 32,
        "keyword": "Mock",
        "content": "let m1 = MockEngine(label: \"A\")"
      },
      {
        "line": 33,
        "keyword": "Mock",
        "content": "let m2 = MockEngine(label: \"B\")"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/NetworkInfoProviderTests.swift": {
    "total_lines": 54,
    "placeholder_percentage": 0.16666666666666666,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Mock",
        "content": "private class MockURLProtocol: URLProtocol {"
      },
      {
        "line": 26,
        "keyword": "Mock",
        "content": "MockURLProtocol.responseData = json"
      },
      {
        "line": 27,
        "keyword": "Mock",
        "content": "MockURLProtocol.statusCode = 200"
      },
      {
        "line": 29,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      },
      {
        "line": 33,
        "keyword": "Example",
        "content": "provider.fetchInfo(from: URL(string: \"https://example.com/info\")!) { info in"
      },
      {
        "line": 41,
        "keyword": "Mock",
        "content": "MockURLProtocol.responseData = nil"
      },
      {
        "line": 42,
        "keyword": "Mock",
        "content": "MockURLProtocol.statusCode = 500"
      },
      {
        "line": 44,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      },
      {
        "line": 48,
        "keyword": "Example",
        "content": "provider.fetchInfo(from: URL(string: \"https://example.com/info\")!) { info in"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/LibrarySyncTests.swift": {
    "total_lines": 57,
    "placeholder_percentage": 0.17543859649122806,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Mock",
        "content": "private class MockURLProtocol: URLProtocol {"
      },
      {
        "line": 14,
        "keyword": "Mock",
        "content": "if let data = MockURLProtocol.responseData {"
      },
      {
        "line": 15,
        "keyword": "Mock",
        "content": "let response = HTTPURLResponse(url: request.url!, statusCode: MockURLProtocol.status, httpVersion: nil, headerFields: nil)!"
      },
      {
        "line": 19,
        "keyword": "Mock",
        "content": "let response = HTTPURLResponse(url: request.url!, statusCode: MockURLProtocol.status, httpVersion: nil, headerFields: nil)!"
      },
      {
        "line": 28,
        "keyword": "Mock",
        "content": "MockURLProtocol.responseData = Data()"
      },
      {
        "line": 29,
        "keyword": "Mock",
        "content": "MockURLProtocol.status = 200"
      },
      {
        "line": 31,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      },
      {
        "line": 44,
        "keyword": "Mock",
        "content": "MockURLProtocol.responseData = json"
      },
      {
        "line": 45,
        "keyword": "Mock",
        "content": "MockURLProtocol.status = 200"
      },
      {
        "line": 47,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/SocialMediaManagerTests.swift": {
    "total_lines": 45,
    "placeholder_percentage": 0.15555555555555556,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Mock",
        "content": "private class MockURLProtocol: URLProtocol {"
      },
      {
        "line": 21,
        "keyword": "Mock",
        "content": "MockURLProtocol.statusCode = 200"
      },
      {
        "line": 23,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      },
      {
        "line": 26,
        "keyword": "Example",
        "content": "manager.postUpdate(\"hello\", to: URL(string: \"https://example.com\")!, token: \"t\") { success in"
      },
      {
        "line": 34,
        "keyword": "Mock",
        "content": "MockURLProtocol.statusCode = 400"
      },
      {
        "line": 36,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      },
      {
        "line": 39,
        "keyword": "Example",
        "content": "manager.postUpdate(\"fail\", to: URL(string: \"https://example.com\")!, token: \"t\") { success in"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/PracticalPlanFeatureTests.swift": {
    "total_lines": 223,
    "placeholder_percentage": 0.004484304932735426,
    "flagged": false,
    "occurrences": [
      {
        "line": 191,
        "keyword": "Sample",
        "content": "XCTAssertTrue(TrainingPipeline().prepare(samples: [0.1]))"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/EbookConverterTests.swift": {
    "total_lines": 25,
    "placeholder_percentage": 0.08,
    "flagged": false,
    "occurrences": [
      {
        "line": 16,
        "keyword": "Sample",
        "content": "func testCustomSampleRateConversion() throws {"
      },
      {
        "line": 18,
        "keyword": "Sample",
        "content": "let converter = EbookConverter(sampleRate: 22_050)"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/RealTimeFeedManagerTests.swift": {
    "total_lines": 63,
    "placeholder_percentage": 0.14285714285714285,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Mock",
        "content": "private class MockURLProtocol: URLProtocol {"
      },
      {
        "line": 30,
        "keyword": "Mock",
        "content": "MockURLProtocol.responseData = json"
      },
      {
        "line": 31,
        "keyword": "Mock",
        "content": "MockURLProtocol.fail = false"
      },
      {
        "line": 33,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      },
      {
        "line": 38,
        "keyword": "Example",
        "content": "manager.fetchFeed(from: URL(string: \"https://example.com/feed\")!) { feed in"
      },
      {
        "line": 50,
        "keyword": "Mock",
        "content": "MockURLProtocol.responseData = nil"
      },
      {
        "line": 51,
        "keyword": "Mock",
        "content": "MockURLProtocol.fail = true"
      },
      {
        "line": 53,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      },
      {
        "line": 57,
        "keyword": "Example",
        "content": "manager.fetchFeed(from: URL(string: \"https://example.com/feed\")!) { feed in"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/AudioFeaturePlaceholdersTests.swift": {
    "total_lines": 53,
    "placeholder_percentage": 0.03773584905660377,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Placeholder",
        "content": "final class AudioFeaturePlaceholdersTests: XCTestCase {"
      },
      {
        "line": 5,
        "keyword": "Placeholder",
        "content": "func testPlaceholderInitializers() {"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/BatchImportToolTests.swift": {
    "total_lines": 18,
    "placeholder_percentage": 0.1111111111111111,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Sample",
        "content": "let url1 = tmpDir.appendingPathComponent(\"sample1.txt\")"
      },
      {
        "line": 9,
        "keyword": "Sample",
        "content": "let url2 = tmpDir.appendingPathComponent(\"sample2.txt\")"
      }
    ]
  },
  "Tests/CreatorCoreForgeTests/VoiceTimbreModulatorTests.swift": {
    "total_lines": 24,
    "placeholder_percentage": 0.041666666666666664,
    "flagged": false,
    "occurrences": [
      {
        "line": 16,
        "keyword": "Sample",
        "content": "let format = AVAudioFormat(standardFormatWithSampleRate: 44100, channels: 1)!"
      }
    ]
  },
  "Sources/CreatorCoreForge/SceneAtmosphereBuilder.swift": {
    "total_lines": 85,
    "placeholder_percentage": 0.011764705882352941,
    "flagged": false,
    "occurrences": [
      {
        "line": 84,
        "keyword": "Example",
        "content": "// Example usage:"
      }
    ]
  },
  "Sources/CreatorCoreForge/EbookConverter.swift": {
    "total_lines": 63,
    "placeholder_percentage": 0.06349206349206349,
    "flagged": false,
    "occurrences": [
      {
        "line": 18,
        "keyword": "Sample",
        "content": "private let sampleRate: Int"
      },
      {
        "line": 22,
        "keyword": "Sample",
        "content": "sampleRate: Int = 44100,"
      },
      {
        "line": 26,
        "keyword": "Sample",
        "content": "self.sampleRate = sampleRate"
      },
      {
        "line": 47,
        "keyword": "Sample",
        "content": "sampleRate: sampleRate) { result in"
      }
    ]
  },
  "Sources/CreatorCoreForge/SettingsSync.swift": {
    "total_lines": 44,
    "placeholder_percentage": 0.022727272727272728,
    "flagged": false,
    "occurrences": [
      {
        "line": 13,
        "keyword": "Example",
        "content": "public init(baseURL: URL = URL(string: \"https://sync.example.com\")!,"
      }
    ]
  },
  "Sources/CreatorCoreForge/VoiceManager.swift": {
    "total_lines": 23,
    "placeholder_percentage": 0.17391304347826086,
    "flagged": false,
    "occurrences": [
      {
        "line": 3,
        "keyword": "Sample",
        "content": "/// Handles voice sample uploads and retrieval using `VoiceCloneTrainer` and `VoiceMemoryManager`."
      },
      {
        "line": 10,
        "keyword": "Sample",
        "content": "/// Upload and clone a voice sample for a character."
      },
      {
        "line": 11,
        "keyword": "Sample",
        "content": "public func uploadSample(character: String, sample: Data, completion: @escaping (VoiceProfile) -> Void) {"
      },
      {
        "line": 12,
        "keyword": "Sample",
        "content": "trainer.train(from: sample, name: character) { profile in"
      }
    ]
  },
  "Sources/CreatorCoreForge/VoiceCloneTrainer.swift": {
    "total_lines": 14,
    "placeholder_percentage": 0.14285714285714285,
    "flagged": false,
    "occurrences": [
      {
        "line": 9,
        "keyword": "Sample",
        "content": "public func train(from sample: Data, name: String, completion: @escaping (VoiceProfile) -> Void) {"
      },
      {
        "line": 10,
        "keyword": "Sample",
        "content": "voiceAI.cloneVoice(from: sample, name: name) { profile in"
      }
    ]
  },
  "Sources/CreatorCoreForge/MemoryPinning.swift": {
    "total_lines": 140,
    "placeholder_percentage": 0.007142857142857143,
    "flagged": false,
    "occurrences": [
      {
        "line": 139,
        "keyword": "Example",
        "content": "// Example:"
      }
    ]
  },
  "Sources/CreatorCoreForge/UniversalMediaGenerator.swift": {
    "total_lines": 59,
    "placeholder_percentage": 0.0847457627118644,
    "flagged": false,
    "occurrences": [
      {
        "line": 35,
        "keyword": "Placeholder",
        "content": "/// audio track label, a rendered clip placeholder, and the list of"
      },
      {
        "line": 42,
        "keyword": "Sample",
        "content": "// Derive pseudo audio sample identifiers from the scene text"
      },
      {
        "line": 43,
        "keyword": "Sample",
        "content": "let samples = scenes.map { \"sound-\\($0.hashValue)\" }"
      },
      {
        "line": 44,
        "keyword": "Sample",
        "content": "var processed = audioPipeline.addEcho(to: samples)"
      },
      {
        "line": 46,
        "keyword": "Sample",
        "content": "let audioTrack = audioPipeline.mix(samples: processed)"
      }
    ]
  },
  "Sources/CreatorCoreForge/LocalVoiceAI.swift": {
    "total_lines": 107,
    "placeholder_percentage": 0.18691588785046728,
    "flagged": false,
    "occurrences": [
      {
        "line": 28,
        "keyword": "Sample",
        "content": "///   - sample: Voice sample data."
      },
      {
        "line": 31,
        "keyword": "Sample",
        "content": "public func cloneVoice(from sample: Data, name: String, completion: @escaping (VoiceProfile) -> Void) {"
      },
      {
        "line": 33,
        "keyword": "Sample",
        "content": "let avg = sample.reduce(0) { $0 + Int($1) } / max(sample.count, 1)"
      },
      {
        "line": 44,
        "keyword": "Mock",
        "content": "///   - completion: Returns synthesized audio data (mocked)."
      },
      {
        "line": 48,
        "keyword": "Sample",
        "content": "sampleRate: Int = 44100,"
      },
      {
        "line": 51,
        "keyword": "Sample",
        "content": "var samples: [Int16] = []"
      },
      {
        "line": 55,
        "keyword": "Sample",
        "content": "samples += Self.sineWave(frequency: freq, duration: 0.05, sampleRate: sampleRate)"
      },
      {
        "line": 57,
        "keyword": "Sample",
        "content": "let data = Self.encodeWAV(samples: samples, sampleRate: sampleRate)"
      },
      {
        "line": 62,
        "keyword": "Sample",
        "content": "private static func sineWave(frequency: Double, duration: Double, sampleRate: Int) -> [Int16] {"
      },
      {
        "line": 63,
        "keyword": "Sample",
        "content": "let count = Int(Double(sampleRate) * duration)"
      },
      {
        "line": 65,
        "keyword": "Sample",
        "content": "let t = Double(i) / Double(sampleRate)"
      },
      {
        "line": 71,
        "keyword": "Sample",
        "content": "private static func encodeWAV(samples: [Int16], sampleRate: Int) -> Data {"
      },
      {
        "line": 73,
        "keyword": "Sample",
        "content": "let byteRate = sampleRate * 2"
      },
      {
        "line": 74,
        "keyword": "Sample",
        "content": "let dataSize = samples.count * 2"
      },
      {
        "line": 88,
        "keyword": "Sample",
        "content": "var sampleRate32 = UInt32(sampleRate)"
      },
      {
        "line": 89,
        "keyword": "Sample",
        "content": "data.append(Data(bytes: &sampleRate32, count: 4))"
      },
      {
        "line": 94,
        "keyword": "Sample",
        "content": "var bitsPerSample: UInt16 = 16"
      },
      {
        "line": 95,
        "keyword": "Sample",
        "content": "data.append(Data(bytes: &bitsPerSample, count: 2))"
      },
      {
        "line": 101,
        "keyword": "Sample",
        "content": "samples.forEach { sample in"
      },
      {
        "line": 102,
        "keyword": "Sample",
        "content": "var s = sample"
      }
    ]
  },
  "Sources/CreatorCoreForge/AudioEffectsPipeline.swift": {
    "total_lines": 22,
    "placeholder_percentage": 0.36363636363636365,
    "flagged": false,
    "occurrences": [
      {
        "line": 7,
        "keyword": "Sample",
        "content": "/// Applies a simple echo label to each sample identifier."
      },
      {
        "line": 8,
        "keyword": "Sample",
        "content": "public func addEcho(to samples: [String]) -> [String] {"
      },
      {
        "line": 9,
        "keyword": "Sample",
        "content": "samples.flatMap { [$0, \"\\($0)-echo\"] }"
      },
      {
        "line": 13,
        "keyword": "Sample",
        "content": "public func shiftPitch(of samples: [String], factor: Double) -> [String] {"
      },
      {
        "line": 14,
        "keyword": "Sample",
        "content": "samples.map { \"\\($0)|pitch:\\(factor)\" }"
      },
      {
        "line": 17,
        "keyword": "Sample",
        "content": "/// Combines processed samples into a single track label."
      },
      {
        "line": 18,
        "keyword": "Sample",
        "content": "public func mix(samples: [String]) -> String {"
      },
      {
        "line": 19,
        "keyword": "Sample",
        "content": "samples.joined(separator: \"+\")"
      }
    ]
  },
  "Sources/CreatorCoreForge/LocalElevenLabsClient.swift": {
    "total_lines": 45,
    "placeholder_percentage": 0.044444444444444446,
    "flagged": false,
    "occurrences": [
      {
        "line": 29,
        "keyword": "Sample",
        "content": "sampleRate: Int = 44100,"
      },
      {
        "line": 37,
        "keyword": "Sample",
        "content": "sampleRate: sampleRate,"
      }
    ]
  },
  "Sources/CreatorCoreForge/MultiTrackEditor.swift": {
    "total_lines": 17,
    "placeholder_percentage": 0.11764705882352941,
    "flagged": false,
    "occurrences": [
      {
        "line": 11,
        "keyword": "Sample",
        "content": "for (i, sample) in track.enumerated() {"
      },
      {
        "line": 12,
        "keyword": "Sample",
        "content": "result[i] += sample"
      }
    ]
  },
  "Sources/CreatorCoreForge/BookImporter.swift": {
    "total_lines": 132,
    "placeholder_percentage": 0.007575757575757576,
    "flagged": false,
    "occurrences": [
      {
        "line": 53,
        "keyword": "Example",
        "content": "// Example extraction code adapted from ZIPFoundation README:"
      }
    ]
  },
  "Sources/CreatorCoreForge/VoiceTrainer.swift": {
    "total_lines": 57,
    "placeholder_percentage": 0.22807017543859648,
    "flagged": false,
    "occurrences": [
      {
        "line": 3,
        "keyword": "Sample",
        "content": "/// Represents an audio sample used to train a custom voice."
      },
      {
        "line": 4,
        "keyword": "Sample",
        "content": "public struct VoiceSample {"
      },
      {
        "line": 5,
        "keyword": "Sample",
        "content": "/// Character the sample is associated with."
      },
      {
        "line": 7,
        "keyword": "Sample",
        "content": "/// Local file path to the audio sample."
      },
      {
        "line": 11,
        "keyword": "Sample",
        "content": "/// Basic engine that tracks uploaded samples and simulates training."
      },
      {
        "line": 17,
        "keyword": "Sample",
        "content": "/// Upload a voice sample for a character."
      },
      {
        "line": 20,
        "keyword": "Sample",
        "content": "///   - filePath: Path to the sample audio file."
      },
      {
        "line": 21,
        "keyword": "Sample",
        "content": "public func uploadSample(for character: String, filePath: String) {"
      },
      {
        "line": 22,
        "keyword": "Sample",
        "content": "print(\"Uploading voice sample for \\(character)...\")"
      },
      {
        "line": 26,
        "keyword": "Sample",
        "content": "/// Train a voice using the previously uploaded sample."
      },
      {
        "line": 31,
        "keyword": "Sample",
        "content": "guard let samplePath = trainedVoices[character] else {"
      },
      {
        "line": 32,
        "keyword": "Sample",
        "content": "print(\"No sample uploaded for \\(character).\")"
      },
      {
        "line": 35,
        "keyword": "Sample",
        "content": "print(\"Training voice for \\(character) using sample at \\(samplePath)...\")"
      }
    ]
  },
  "Sources/CreatorCoreForge/SceneGapFiller.swift": {
    "total_lines": 58,
    "placeholder_percentage": 0.017241379310344827,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Placeholder",
        "content": "/// and generates basic placeholder animation frames."
      }
    ]
  },
  "Sources/CreatorCoreForge/OfflineDownloadQueue.swift": {
    "total_lines": 179,
    "placeholder_percentage": 0.00558659217877095,
    "flagged": false,
    "occurrences": [
      {
        "line": 118,
        "keyword": "Placeholder",
        "content": "/// Placeholder implementation when Combine is unavailable."
      }
    ]
  },
  "Sources/CreatorCoreForge/BuildMonetizationManager.swift": {
    "total_lines": 41,
    "placeholder_percentage": 0.024390243902439025,
    "flagged": false,
    "occurrences": [
      {
        "line": 7,
        "keyword": "Example",
        "content": "/// Adapted from SwiftyStoreKit example (MIT License)."
      }
    ]
  },
  "Sources/CreatorCoreForge/EmotionalArcTracker.swift": {
    "total_lines": 102,
    "placeholder_percentage": 0.00980392156862745,
    "flagged": false,
    "occurrences": [
      {
        "line": 101,
        "keyword": "Example",
        "content": "// Example:"
      }
    ]
  },
  "Sources/CreatorCoreForge/QuantumAIExtension.swift": {
    "total_lines": 11,
    "placeholder_percentage": 0.09090909090909091,
    "flagged": false,
    "occurrences": [
      {
        "line": 3,
        "keyword": "Mock",
        "content": "/// Generates alternate emotion branches using a mock quantum selection."
      }
    ]
  },
  "Sources/CreatorCoreForge/CoreForgeVoiceLab_MissingFeatures.swift": {
    "total_lines": 19,
    "placeholder_percentage": 0.21052631578947367,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Sample",
        "content": "public func trim(_ samples: [Float], to count: Int) -> [Float] {"
      },
      {
        "line": 5,
        "keyword": "Sample",
        "content": "Array(samples.prefix(count))"
      },
      {
        "line": 10,
        "keyword": "Sample",
        "content": "public func prepare(samples: [Float]) -> Bool {"
      },
      {
        "line": 11,
        "keyword": "Sample",
        "content": "!samples.isEmpty"
      }
    ]
  },
  "Sources/CreatorCoreForge/AutoUpdater.swift": {
    "total_lines": 33,
    "placeholder_percentage": 0.030303030303030304,
    "flagged": false,
    "occurrences": [
      {
        "line": 11,
        "keyword": "Example",
        "content": "public init(updateURL: URL = URL(string: \"https://example.com/latest.json\")!,"
      }
    ]
  },
  "Sources/CreatorCoreForge/ThemeManager.swift": {
    "total_lines": 119,
    "placeholder_percentage": 0.008403361344537815,
    "flagged": false,
    "occurrences": [
      {
        "line": 118,
        "keyword": "Example",
        "content": "// Example usage:"
      }
    ]
  },
  "Sources/CreatorCoreForge/LibrarySync.swift": {
    "total_lines": 45,
    "placeholder_percentage": 0.022222222222222223,
    "flagged": false,
    "occurrences": [
      {
        "line": 11,
        "keyword": "Example",
        "content": "public init(baseURL: URL = URL(string: \"https://sync.example.com/library\")!,"
      }
    ]
  },
  "Sources/CreatorCoreForge/NSFWPaywallManager.swift": {
    "total_lines": 43,
    "placeholder_percentage": 0.023255813953488372,
    "flagged": false,
    "occurrences": [
      {
        "line": 19,
        "keyword": "Placeholder",
        "content": "// Placeholder purchase flow; integrate real StoreKit logic in the app."
      }
    ]
  },
  "Sources/CreatorCoreForge/EmotionArcVisualizer.swift": {
    "total_lines": 56,
    "placeholder_percentage": 0.017857142857142856,
    "flagged": false,
    "occurrences": [
      {
        "line": 54,
        "keyword": "Example",
        "content": "// Example usage:"
      }
    ]
  },
  "Sources/CreatorCoreForge/AdaptiveMusicGenerator.swift": {
    "total_lines": 67,
    "placeholder_percentage": 0.16417910447761194,
    "flagged": false,
    "occurrences": [
      {
        "line": 13,
        "keyword": "Sample",
        "content": "let sampleRate = 44_100"
      },
      {
        "line": 24,
        "keyword": "Sample",
        "content": "let frameCount = Int(duration * Double(sampleRate))"
      },
      {
        "line": 25,
        "keyword": "Sample",
        "content": "var samples = [Int16](repeating: 0, count: frameCount)"
      },
      {
        "line": 27,
        "keyword": "Sample",
        "content": "let t = Double(i) / Double(sampleRate)"
      },
      {
        "line": 29,
        "keyword": "Sample",
        "content": "samples[i] = value"
      },
      {
        "line": 34,
        "keyword": "Sample",
        "content": "let byteCount = samples.count * MemoryLayout<Int16>.size"
      },
      {
        "line": 41,
        "keyword": "Sample",
        "content": "data.append(UInt32(sampleRate).littleEndianData)"
      },
      {
        "line": 42,
        "keyword": "Sample",
        "content": "data.append(UInt32(sampleRate * 2).littleEndianData) // byte rate"
      },
      {
        "line": 44,
        "keyword": "Sample",
        "content": "data.append(UInt16(16).littleEndianData) // bits per sample"
      },
      {
        "line": 48,
        "keyword": "Sample",
        "content": "// Append samples"
      },
      {
        "line": 49,
        "keyword": "Sample",
        "content": "samples.withUnsafeBufferPointer { ptr in"
      }
    ]
  },
  "Sources/CreatorCoreForge/NSFWHabitBehaviorSimulator.swift": {
    "total_lines": 115,
    "placeholder_percentage": 0.008695652173913044,
    "flagged": false,
    "occurrences": [
      {
        "line": 110,
        "keyword": "Example",
        "content": "// Example usage:"
      }
    ]
  },
  "Sources/CreatorCoreForge/NSFWPhase7.swift": {
    "total_lines": 196,
    "placeholder_percentage": 0.01020408163265306,
    "flagged": false,
    "occurrences": [
      {
        "line": 148,
        "keyword": "Content for",
        "content": "/// Flag NSFW content for moderation review."
      },
      {
        "line": 157,
        "keyword": "Content for",
        "content": "/// Detect safe vs unsafe content for previews."
      }
    ]
  },
  "Sources/CreatorCoreForge/ConsentTracker.swift": {
    "total_lines": 67,
    "placeholder_percentage": 0.014925373134328358,
    "flagged": false,
    "occurrences": [
      {
        "line": 65,
        "keyword": "Example",
        "content": "// Example usage:"
      }
    ]
  },
  "VisualLab/README.md": {
    "total_lines": 23,
    "placeholder_percentage": 0.043478260869565216,
    "flagged": false,
    "occurrences": [
      {
        "line": 14,
        "keyword": "Sample",
        "content": "After building the project you can run the sample renderer which outputs a short demo animation:"
      }
    ]
  },
  ".github/workflows/ci.yml": {
    "total_lines": 34,
    "placeholder_percentage": 0.029411764705882353,
    "flagged": false,
    "occurrences": [
      {
        "line": 25,
        "keyword": "Sample",
        "content": "npm run train-sample"
      }
    ]
  },
  "scripts/generate_adaptive_music.py": {
    "total_lines": 54,
    "placeholder_percentage": 0.2037037037037037,
    "flagged": false,
    "occurrences": [
      {
        "line": 13,
        "keyword": "Sample",
        "content": "SAMPLE_RATE = 44100"
      },
      {
        "line": 21,
        "keyword": "Sample",
        "content": "def write_wave(path: str, samples):"
      },
      {
        "line": 25,
        "keyword": "Sample",
        "content": "wav.setframerate(SAMPLE_RATE)"
      },
      {
        "line": 27,
        "keyword": "Sample",
        "content": "for s in samples:"
      },
      {
        "line": 34,
        "keyword": "Sample",
        "content": "frame_count = int(SAMPLE_RATE * duration)"
      },
      {
        "line": 35,
        "keyword": "Sample",
        "content": "samples = []"
      },
      {
        "line": 37,
        "keyword": "Sample",
        "content": "t = i / SAMPLE_RATE"
      },
      {
        "line": 38,
        "keyword": "Sample",
        "content": "samples.append(math.sin(2 * math.pi * frequency * t) * 0.4)"
      },
      {
        "line": 39,
        "keyword": "Sample",
        "content": "return samples"
      },
      {
        "line": 49,
        "keyword": "Sample",
        "content": "samples = generate_music(args.mood, args.duration)"
      },
      {
        "line": 50,
        "keyword": "Sample",
        "content": "write_wave(out_path, samples)"
      }
    ]
  },
  "scripts/pull_plugins.py": {
    "total_lines": 54,
    "placeholder_percentage": 0.018518518518518517,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Example",
        "content": "Adapted from the Requests library examples (Apache-2.0)."
      }
    ]
  },
  "scripts/placeholder_scan.py": {
    "total_lines": 75,
    "placeholder_percentage": 0.2,
    "flagged": false,
    "occurrences": [
      {
        "line": 7,
        "keyword": "Content for",
        "content": "\"Content for\","
      },
      {
        "line": 8,
        "keyword": "TODO",
        "content": "\"TODO\","
      },
      {
        "line": 9,
        "keyword": "TBD",
        "content": "\"TBD\","
      },
      {
        "line": 10,
        "keyword": "Coming soon",
        "content": "\"Coming soon\","
      },
      {
        "line": 11,
        "keyword": "Mock",
        "content": "\"Mock\","
      },
      {
        "line": 12,
        "keyword": "Placeholder",
        "content": "\"Placeholder\","
      },
      {
        "line": 13,
        "keyword": "Sample",
        "content": "\"Sample\","
      },
      {
        "line": 14,
        "keyword": "Example",
        "content": "\"Example\","
      },
      {
        "line": 20,
        "keyword": "Placeholder",
        "content": "placeholder_lines = 0"
      },
      {
        "line": 28,
        "keyword": "Placeholder",
        "content": "placeholder_lines += 1"
      },
      {
        "line": 32,
        "keyword": "Placeholder",
        "content": "pct = placeholder_lines / total_lines if total_lines else 0"
      },
      {
        "line": 57,
        "keyword": "Placeholder",
        "content": "'placeholder_percentage': pct,"
      },
      {
        "line": 65,
        "keyword": "Placeholder",
        "content": "parser = argparse.ArgumentParser(description='Scan repo for placeholder keywords')"
      },
      {
        "line": 70,
        "keyword": "Placeholder",
        "content": "with open('placeholder_scan_report.json', 'w', encoding='utf-8') as f:"
      },
      {
        "line": 72,
        "keyword": "Placeholder",
        "content": "print(f'Scanned {len(result)} files. Report written to placeholder_scan_report.json')"
      }
    ]
  },
  "scripts/generate_sound_effects.py": {
    "total_lines": 93,
    "placeholder_percentage": 0.3548387096774194,
    "flagged": false,
    "occurrences": [
      {
        "line": 13,
        "keyword": "Sample",
        "content": "SAMPLE_RATE = 44100"
      },
      {
        "line": 15,
        "keyword": "Sample",
        "content": "def write_wave(path, samples):"
      },
      {
        "line": 19,
        "keyword": "Sample",
        "content": "wav.setframerate(SAMPLE_RATE)"
      },
      {
        "line": 21,
        "keyword": "Sample",
        "content": "for s in samples:"
      },
      {
        "line": 27,
        "keyword": "Sample",
        "content": "samples = []"
      },
      {
        "line": 28,
        "keyword": "Sample",
        "content": "for i in range(int(SAMPLE_RATE * duration)):"
      },
      {
        "line": 30,
        "keyword": "Sample",
        "content": "sweep = math.sin(i / SAMPLE_RATE * 0.5) * 0.3"
      },
      {
        "line": 31,
        "keyword": "Sample",
        "content": "samples.append(base + sweep)"
      },
      {
        "line": 32,
        "keyword": "Sample",
        "content": "return samples"
      },
      {
        "line": 35,
        "keyword": "Sample",
        "content": "samples = []"
      },
      {
        "line": 36,
        "keyword": "Sample",
        "content": "for i in range(int(SAMPLE_RATE * duration)):"
      },
      {
        "line": 40,
        "keyword": "Sample",
        "content": "samples.append(noise)"
      },
      {
        "line": 41,
        "keyword": "Sample",
        "content": "return samples"
      },
      {
        "line": 44,
        "keyword": "Sample",
        "content": "samples = []"
      },
      {
        "line": 46,
        "keyword": "Sample",
        "content": "total_samples = int(SAMPLE_RATE * duration)"
      },
      {
        "line": 47,
        "keyword": "Sample",
        "content": "for i in range(total_samples):"
      },
      {
        "line": 48,
        "keyword": "Sample",
        "content": "t = i / SAMPLE_RATE"
      },
      {
        "line": 52,
        "keyword": "Sample",
        "content": "samples.append(value * 0.7)"
      },
      {
        "line": 53,
        "keyword": "Sample",
        "content": "return samples"
      },
      {
        "line": 56,
        "keyword": "Sample",
        "content": "samples = []"
      },
      {
        "line": 57,
        "keyword": "Sample",
        "content": "total_samples = int(SAMPLE_RATE * duration)"
      },
      {
        "line": 58,
        "keyword": "Sample",
        "content": "for i in range(total_samples):"
      },
      {
        "line": 59,
        "keyword": "Sample",
        "content": "t = i / SAMPLE_RATE"
      },
      {
        "line": 62,
        "keyword": "Sample",
        "content": "samples.append(value)"
      },
      {
        "line": 63,
        "keyword": "Sample",
        "content": "return samples"
      },
      {
        "line": 66,
        "keyword": "Sample",
        "content": "samples = []"
      },
      {
        "line": 67,
        "keyword": "Sample",
        "content": "for i in range(int(SAMPLE_RATE * duration)):"
      },
      {
        "line": 68,
        "keyword": "Sample",
        "content": "base = math.sin(2 * math.pi * 200 * i / SAMPLE_RATE)"
      },
      {
        "line": 69,
        "keyword": "Sample",
        "content": "envelope = (1 - math.cos(2 * math.pi * i / (SAMPLE_RATE * duration))) / 2"
      },
      {
        "line": 70,
        "keyword": "Sample",
        "content": "samples.append(base * envelope * 0.4)"
      },
      {
        "line": 71,
        "keyword": "Sample",
        "content": "return samples"
      },
      {
        "line": 88,
        "keyword": "Sample",
        "content": "samples = EFFECT_MAP[args.effect](args.duration)"
      },
      {
        "line": 89,
        "keyword": "Sample",
        "content": "write_wave(args.output, samples)"
      }
    ]
  },
  "scripts/ensure_200_features.py": {
    "total_lines": 68,
    "placeholder_percentage": 0.014705882352941176,
    "flagged": false,
    "occurrences": [
      {
        "line": 66,
        "keyword": "Placeholder",
        "content": "print(f\"Updated {path} with placeholder features to reach 200 per app.\")"
      }
    ]
  },
  "scripts/auto_code_bot.py": {
    "total_lines": 187,
    "placeholder_percentage": 0.0481283422459893,
    "flagged": false,
    "occurrences": [
      {
        "line": 17,
        "keyword": "Placeholder",
        "content": "\"\"\"Return a language-aware placeholder snippet.\"\"\""
      },
      {
        "line": 144,
        "keyword": "Placeholder",
        "content": "def _parse_placeholder_line(line: str) -> str | None:"
      },
      {
        "line": 151,
        "keyword": "Placeholder",
        "content": "def upgrade_placeholders(gen_root: str) -> None:"
      },
      {
        "line": 160,
        "keyword": "Placeholder",
        "content": "feature = _parse_placeholder_line(first)"
      },
      {
        "line": 171,
        "keyword": "Placeholder",
        "content": "parser = argparse.ArgumentParser(description=\"Generate or upgrade placeholder code files\")"
      },
      {
        "line": 173,
        "keyword": "Placeholder",
        "content": "\"--upgrade-placeholders\","
      },
      {
        "line": 175,
        "keyword": "Placeholder",
        "content": "help=\"Replace existing placeholders in the generated folder using OpenAI\","
      },
      {
        "line": 181,
        "keyword": "Placeholder",
        "content": "if args.upgrade_placeholders:"
      },
      {
        "line": 182,
        "keyword": "Placeholder",
        "content": "upgrade_placeholders(os.path.join(repo, \"generated\"))"
      }
    ]
  },
  "apps/README.md": {
    "total_lines": 13,
    "placeholder_percentage": 0.07692307692307693,
    "flagged": false,
    "occurrences": [
      {
        "line": 9,
        "keyword": "Example",
        "content": "Example usage:"
      }
    ]
  },
  "apps/CoreForgeAudio/AGENTS.md": {
    "total_lines": 580,
    "placeholder_percentage": 0.008620689655172414,
    "flagged": false,
    "occurrences": [
      {
        "line": 64,
        "keyword": "Sample",
        "content": "- [x] Prompt validation with multiple sample inputs and outputs"
      },
      {
        "line": 83,
        "keyword": "Sample",
        "content": "- [x] PromptTemplates.md (AI workflows, sample prompts)"
      },
      {
        "line": 385,
        "keyword": "Sample",
        "content": "- [x] Allow users to test voice preview samples per character before rendering"
      },
      {
        "line": 527,
        "keyword": "Content for",
        "content": "- [x] Flag NSFW content for internal moderation or publishing filter logic"
      },
      {
        "line": 528,
        "keyword": "Content for",
        "content": "- [x] Auto-detect safe vs. unsafe content for preview-only versions"
      }
    ]
  },
  "apps/ebook2audiobook/podman-compose.yml": {
    "total_lines": 34,
    "placeholder_percentage": 0.058823529411764705,
    "flagged": false,
    "occurrences": [
      {
        "line": 30,
        "keyword": "Example",
        "content": "# Example correction:"
      },
      {
        "line": 34,
        "keyword": "Example",
        "content": "# Example adding extra arguments -> command: [\"--share\"] or -> command: [\"--help\"]"
      }
    ]
  },
  "apps/ebook2audiobook/README.md": {
    "total_lines": 512,
    "placeholder_percentage": 0.01953125,
    "flagged": false,
    "occurrences": [
      {
        "line": 58,
        "keyword": "Example",
        "content": "**Example**"
      },
      {
        "line": 60,
        "keyword": "Example",
        "content": "![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)"
      },
      {
        "line": 84,
        "keyword": "Example",
        "content": "- [Headless Custom XTTS Model Usage](#example-of-custom-model-zip-upload)"
      },
      {
        "line": 107,
        "keyword": "Example",
        "content": "- \ud83c\udf99\ufe0f High-quality text-to-speech with [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) and [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms) (and more)."
      },
      {
        "line": 205,
        "keyword": "Example",
        "content": "###  Example of Custom Model Zip Upload"
      },
      {
        "line": 206,
        "keyword": "Example",
        "content": "(must be a .zip file containing the mandatory model files. Example for XTTS: config.json, model.pth, vocab.json and ref.wav)"
      },
      {
        "line": 322,
        "keyword": "Example",
        "content": "Example usage:"
      },
      {
        "line": 380,
        "keyword": "Example",
        "content": "For example:"
      },
      {
        "line": 444,
        "keyword": "Example",
        "content": "- Example: `docker run --pull always athomasson2/ebook2audiobook app.py --script_mode full_docker` - > corrected - > `docker run --pull always athomasson2/ebook2audiobook`"
      },
      {
        "line": 451,
        "keyword": "Example",
        "content": "Example of adding this fix in the `docker run` command"
      }
    ]
  },
  "apps/ebook2audiobook/docker-compose.yml": {
    "total_lines": 40,
    "placeholder_percentage": 0.05,
    "flagged": false,
    "occurrences": [
      {
        "line": 36,
        "keyword": "Example",
        "content": "# Example correction:"
      },
      {
        "line": 40,
        "keyword": "Example",
        "content": "# Example adding extra arguments -> command: [\"--share\"] or -> command: [\"--help\"]"
      }
    ]
  },
  "apps/ebook2audiobook/CODE_OF_CONDUCT.md": {
    "total_lines": 128,
    "placeholder_percentage": 0.0234375,
    "flagged": false,
    "occurrences": [
      {
        "line": 17,
        "keyword": "Example",
        "content": "Examples of behavior that contributes to a positive environment for our"
      },
      {
        "line": 28,
        "keyword": "Example",
        "content": "Examples of unacceptable behavior include:"
      },
      {
        "line": 55,
        "keyword": "Example",
        "content": "Examples of representing our community include using an official e-mail address,"
      }
    ]
  },
  "apps/ebook2audiobook/app.py": {
    "total_lines": 300,
    "placeholder_percentage": 0.0033333333333333335,
    "flagged": false,
    "occurrences": [
      {
        "line": 121,
        "keyword": "Example",
        "content": "Example usage:"
      }
    ]
  },
  "apps/ebook2audiobook/tools/normalize_wav_file.py": {
    "total_lines": 32,
    "placeholder_percentage": 0.03125,
    "flagged": false,
    "occurrences": [
      {
        "line": 29,
        "keyword": "Example",
        "content": "# Example Usage"
      }
    ]
  },
  "apps/ebook2audiobook/.github/workflows/README.md": {
    "total_lines": 53,
    "placeholder_percentage": 0.018867924528301886,
    "flagged": false,
    "occurrences": [
      {
        "line": 15,
        "keyword": "Example",
        "content": "Example of loop command is seen here"
      }
    ]
  },
  "apps/ebook2audiobook/.github/workflows/lite-test-ubuntu-headless.yml": {
    "total_lines": 519,
    "placeholder_percentage": 0.0019267822736030828,
    "flagged": false,
    "occurrences": [
      {
        "line": 186,
        "keyword": "Example",
        "content": "echo \"Example: $0 --headless --script_mode full_docker --language eng --tts_engine fairseq\""
      }
    ]
  },
  "apps/ebook2audiobook/readme/README_AR.md": {
    "total_lines": 408,
    "placeholder_percentage": 0.00980392156862745,
    "flagged": false,
    "occurrences": [
      {
        "line": 61,
        "keyword": "Example",
        "content": "- \ud83c\udf99\ufe0f \u064a\u0642\u062f\u0645 \u062a\u062d\u0648\u064a\u0644 \u0627\u0644\u0646\u0635 \u0625\u0644\u0649 \u0643\u0644\u0627\u0645 \u0628\u062c\u0648\u062f\u0629 \u0639\u0627\u0644\u064a\u0629 \u0628\u0627\u0633\u062a\u062e\u062f\u0627\u0645 [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) \u0648 [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms)."
      },
      {
        "line": 201,
        "keyword": "TODO",
        "content": "--language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\u00e1ncoat\u00e1n, cac-dialect_sanmateoixtat\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\u00edadejes\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng)."
      },
      {
        "line": 220,
        "keyword": "Example",
        "content": "Example usage:"
      },
      {
        "line": 381,
        "keyword": "Example",
        "content": "- **\u0645\u062b\u0627\u0644 \u0644\u0644\u0645\u062e\u0631\u062c\u0627\u062a**: ![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)"
      }
    ]
  },
  "apps/ebook2audiobook/readme/README_CN.md": {
    "total_lines": 437,
    "placeholder_percentage": 0.009153318077803204,
    "flagged": false,
    "occurrences": [
      {
        "line": 69,
        "keyword": "Example",
        "content": "- \ud83c\udf99\ufe0f \u4f7f\u7528[Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2)\u548c[Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms)\u7684\u9ad8\u8d28\u91cf\u6587\u672c\u8f6c\u8bed\u97f3\u3002"
      },
      {
        "line": 208,
        "keyword": "TODO",
        "content": "--language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\u00e1ncoat\u00e1n, cac-dialect_sanmateoixtat\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\u00edadejes\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng)."
      },
      {
        "line": 227,
        "keyword": "Example",
        "content": "Example usage:"
      },
      {
        "line": 411,
        "keyword": "Example",
        "content": "- **\u793a\u4f8b\u8f93\u51fa**: ![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)"
      }
    ]
  },
  "apps/ebook2audiobook/readme/README_SWE.md": {
    "total_lines": 412,
    "placeholder_percentage": 0.007281553398058253,
    "flagged": false,
    "occurrences": [
      {
        "line": 65,
        "keyword": "Example",
        "content": "- \ud83c\udf99\ufe0f H\u00f6gkvalitativ text-till-tal med [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) och [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms)."
      },
      {
        "line": 199,
        "keyword": "TODO",
        "content": "--language LANGUAGE   Spr\u00e5k f\u00f6r ljudboksomvandlingen. Alternativ: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\u00e1ncoat\u00e1n, cac-dialect_sanmateoixtat\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\u00edadejes\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Standard \u00e4r Engelska (eng)."
      },
      {
        "line": 386,
        "keyword": "Example",
        "content": "- **Exempelutdata**: ![Exempel](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)"
      }
    ]
  },
  "apps/ebook2audiobook/readme/README.it.md": {
    "total_lines": 473,
    "placeholder_percentage": 0.012684989429175475,
    "flagged": false,
    "occurrences": [
      {
        "line": 46,
        "keyword": "Example",
        "content": "-   [Utilizzo del modello personalizzato senza testa](#example-of-custom-model-zip-upload)"
      },
      {
        "line": 70,
        "keyword": "Example",
        "content": "-   \ud83c\udf99\ufe0f Text-to-Speech di alta qualit\u00e0 con[Coqui XTTSV2](https://huggingface.co/coqui/XTTS-v2)E[Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms)(e altro)."
      },
      {
        "line": 271,
        "keyword": "Example",
        "content": "Example usage:"
      },
      {
        "line": 289,
        "keyword": "TODO",
        "content": "Questo metodo garantisce coerenza in diversi ambienti e semplifica la configurazione."
      },
      {
        "line": 442,
        "keyword": "Example",
        "content": "-   **Esempio**![Example](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)"
      },
      {
        "line": 465,
        "keyword": "TODO",
        "content": "-   [@shakenbake15 per un migliore metodo di salvataggio dei capitoli](https://github.com/DrewThomasson/ebook2audiobook/issues/8)"
      }
    ]
  },
  "apps/ebook2audiobook/readme/README_FA.md": {
    "total_lines": 433,
    "placeholder_percentage": 0.009237875288683603,
    "flagged": false,
    "occurrences": [
      {
        "line": 73,
        "keyword": "Example",
        "content": "- \ud83c\udf99\ufe0f \u062a\u0628\u062f\u06cc\u0644 \u06af\u0641\u062a\u0627\u0631 \u0628\u0647 \u0645\u062a\u0646 \u0628\u0627 \u06a9\u06cc\u0641\u06cc\u062a \u0628\u0627\u0644\u0627 \u0647\u0645\u0631\u0627\u0647 \u0628\u0627 [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) \u0648 [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms)."
      },
      {
        "line": 211,
        "keyword": "TODO",
        "content": "--language LANGUAGE   Language for the audiobook conversion. Options: eng, zho, spa, fra, por, rus, ind, hin, ben, yor, ara, jav, jpn, kor, deu, ita, fas, tam, tel, tur, pol, hun, nld, zzzz, abi, ace, aca, acn, acr, ach, acu, guq, ade, adj, agd, agx, agn, aha, aka, knj, ake, aeu, ahk, bss, alj, sqi, alt, alp, alz, kab, amk, mmg, amh, ami, azg, agg, boj, cko, any, arl, atq, luc, hyw, apr, aia, msy, cni, cjo, cpu, cpb, asm, asa, teo, ati, djk, ava, avn, avu, awb, kwi, awa, agr, agu, ayr, ayo, abp, blx, sgb, azj-script_cyrillic, azj-script_latin, azb, bba, bhz, bvc, bfy, bgq, bdq, bdh, bqi, bjw, blz, ban, bcc-script_latin, bcc-script_arabic, bam, ptu, bcw, bqj, bno, bbb, bfa, bjz, bak, eus, bsq, akb, btd, btx, bts, bbc, bvz, bjv, bep, bkv, bzj, bem, bng, bom, btt, bha, bgw, bht, beh, sne, ubl, bcl, bim, bkd, bjr, bfo, biv, bib, bis, bzi, bqp, bpr, bps, bwq, bdv, bqc, bus, bnp, bmq, bdg, boa, ksr, bor, bru, box, bzh, bgt, sab, bul, bwu, bmv, mya, tte, cjp, cbv, kaq, cot, cbc, car, cat, ceb, cme, cbi, ceg, cly, cya, che, hne, nya, dig, dug, bgr, cek, cfm, cnh, hlt, mwq, ctd, tcz, zyp, cco, cnl, cle, chz, cpa, cso, cnt, cuc, hak, nan, xnj, cap, cax, ctg, ctu, chf, cce, crt, crq, cac-dialect_sansebasti\u00e1ncoat\u00e1n, cac-dialect_sanmateoixtat\u00e1n, ckt, ncu, cdj, chv, caa, asg, con, crn, cok, crk-script_latin, crk-script_syllabics, crh, hrv, cui, ces, dan, dsh, dbq, dga, dgi, dgk, dnj-dialect_gweetaawueast, dnj-dialect_blowowest, daa, dnt, dnw, dar, tcc, dwr, ded, mzw, ntr, ddn, des, dso, nfa, dhi, gud, did, mhu, dip, dik, tbz, dts, dos, dgo, mvp, jen, dzo, idd, eka, cto, emp, enx, sja, myv, mcq, ese, evn, eza, ewe, fal, fao, far, fij, fin, fon, frd, ful, flr, gau, gbk, gag-script_cyrillic, gag-script_latin, gbi, gmv, lug, pwg, gbm, cab, grt, krs, gso, nlg, gej, gri, kik, acd, glk, gof-script_latin, gog, gkn, wsg, gjn, gqr, gor, gux, gbo, ell, grc, guh, gub, grn, gyr, guo, gde, guj, gvl, guk, rub, dah, gwr, gwi, hat, hlb, amf, hag, hnn, bgc, had, hau, hwc, hvn, hay, xed, heb, heh, hil, hif, hns, hoc, hoy, hus-dialect_westernpotosino, hus-dialect_centralveracruz, huv, hui, hap, iba, isl, dbj, ifa, ifb, ifu, ifk, ife, ign, ikk, iqw, ilb, ilo, imo, inb, ipi, irk, icr, itv, itl, atg, ixl-dialect_sanjuancotzal, ixl-dialect_sangasparchajul, ixl-dialect_santamarianebaj, nca, izr, izz, jac, jam, jvn, kac, dyo, csk, adh, jun, jbu, dyu, bex, juy, gna, urb, kbp, cwa, dtp, kbr, cgc, kki, kzf, lew, cbr, kkj, keo, kqe, kak, kyb, knb, kmd, kml, ify, xal, kbq, kay, ktb, hig, gam, cbu, xnr, kmu, kne, kan, kby, pam, cak-dialect_santamar\u00edadejes\u00fas, cak-dialect_southcentral, cak-dialect_yepocapa, cak-dialect_western, cak-dialect_santodomingoxenacoj, cak-dialect_central, xrb, krc, kaa, krl, pww, xsm, cbs, pss, kxf, kyz, kyu, txu, kaz, ndp, kbo, kyq, ken, ker, xte, kyg, kjh, kca, khm, kxm, kjg, nyf, kij, kia, kqr, kqp, krj, zga, kin, pkb, geb, gil, kje, kss, thk, klu, kyo, kog, kfb, kpv, bbo, xon, kma, kno, kxc, ozm, kqy, coe, kpq, kpy, kyf, kff-script_telugu, kri, rop, ktj, ted, krr, kdt, kez, cul, kle, kdi, kue, kum, kvn, cuk, kdn, xuo, key, kpz, knk, kmr-script_latin, kmr-script_arabic, kmr-script_cyrillic, xua, kru, kus, kub, kdc, kxv, blh, cwt, kwd, tnk, kwf, cwe, kyc, tye, kir, quc-dialect_north, quc-dialect_east, quc-dialect_central, lac, lsi, lbj, lhu, las, lam, lns, ljp, laj, lao, lat, lav, law, lcp, lzz, lln, lef, acf, lww, mhx, eip, lia, lif, onb, lis, loq, lob, yaz, lok, llg, ycl, lom, ngl, lon, lex, lgg, ruf, dop, lnd, ndy, lwo, lee, mev, mfz, jmc, myy, mbc, mda, mad, mag, ayz, mai, mca, mcp, mak, vmw, mgh, kde, mlg, zlm, pse, mkn, xmm, mal, xdy, div, mdy, mup, mam-dialect_central, mam-dialect_northern, mam-dialect_southern, mam-dialect_western, mqj, mcu, mzk, maw, mjl, mnk, mge, mbh, knf, mjv, mbt, obo, mbb, mzj, sjm, mrw, mar, mpg, mhr, enb, mah, myx, klv, mfh, met, mcb, mop, yua, mfy, maz, vmy, maq, mzi, maj, maa-dialect_sanantonio, maa-dialect_sanjer\u00f3nimo, mhy, mhi, zmz, myb, gai, mqb, mbu, med, men, mee, mwv, meq, zim, mgo, mej, mpp, min, gum, mpx, mco, mxq, pxm, mto, mim, xta, mbz, mip, mib, miy, mih, miz, xtd, mxt, xtm, mxv, xtn, mie, mil, mio, mdv, mza, mit, mxb, mpm, soy, cmo-script_latin, cmo-script_khmer, mfq, old, mfk, mif, mkl, mox, myl, mqf, mnw, mon, mog, mfe, mor, mqn, mgd, mtj, cmr, mtd, bmr, moz, mzm, mnb, mnf, unr, fmu, mur, tih, muv, muy, sur, moa, wmw, tnr, miq, mos, muh, nas, mbj, nfr, kfw, nst, nag, nch, nhe, ngu, azz, nhx, ncl, nhy, ncj, nsu, npl, nuz, nhw, nhi, nlc, nab, gld, nnb, npy, pbb, ntm, nmz, naw, nxq, ndj, ndz, ndv, new, nij, sba, gng, nga, nnq, ngp, gym, kdj, nia, nim, nin, nko, nog, lem, not, nhu, nob, bud, nus, yas, nnw, nwb, nyy, nyn, rim, lid, nuj, nyo, nzi, ann, ory, ojb-script_latin, ojb-script_syllabics, oku, bsc, bdu, orm, ury, oss, ote, otq, stn, sig, kfx, bfz, sey, pao, pau, pce, plw, pmf, pag, pap, prf, pab, pbi, pbc, pad, ata, pez, peg, pcm, pis, pny, pir, pjt, poy, pps, pls, poi, poh-dialect_eastern, poh-dialect_western, prt, pui, pan, tsz, suv, lme, quy, qvc, quz, qve, qub, qvh, qwh, qvw, quf, qvm, qul, qvn, qxn, qxh, qvs, quh, qxo, qxr, qvo, qvz, qxl, quw, kjb, kek, rah, rjs, rai, lje, rnl, rkt, rap, yea, raw, rej, rel, ril, iri, rgu, rhg, rmc-script_latin, rmc-script_cyrillic, rmo, rmy-script_latin, rmy-script_cyrillic, ron, rol, cla, rng, rug, run, lsm, spy, sck, saj, sch, sml, xsb, sbl, saq, sbd, smo, rav, sxn, sag, sbp, xsu, srm, sas, apb, sgw, tvw, lip, slu, snw, sea, sza, seh, crs, ksb, shn, sho, mcd, cbt, xsr, shk, shp, sna, cjs, jiv, snp, sya, sid, snn, sri, srx, sil, sld, akp, xog, som, bmu, khq, ses, mnx, srn, sxb, suc, tgo, suk, sun, suz, sgj, sus, swh, swe, syl, dyi, myk, spp, tap, tby, tna, shi, klw, tgl, tbk, tgj, blt, tbg, omw, tgk, tdj, tbc, tlj, tly, ttq-script_tifinagh, taj, taq, tpm, tgp, tnn, tac, rif-script_latin, rif-script_arabic, tat, tav, twb, tbl, kps, twe, ttc, kdh, tes, tex, tee, tpp, tpt, stp, tfr, twu, ter, tew, tha, nod, thl, tem, adx, bod, khg, tca, tir, txq, tik, dgr, tob, tmf, tng, tlb, ood, tpi, jic, lbw, txa, tom, toh, tnt, sda, tcs, toc, tos, neb, trn, trs, trc, tri, cof, tkr, kdl, cas, tso, tuo, iou, tmc, tuf, tuk-script_latin, tuk-script_arabic, bov, tue, kcg, tzh-dialect_bachaj\u00f3n, tzh-dialect_tenejapa, tzo-dialect_chenalh\u00f3, tzo-dialect_chamula, tzj-dialect_western, tzj-dialect_eastern, aoz, udm, udu, ukr, ppk, ubu, urk, ura, urt, urd-script_devanagari, urd-script_arabic, urd-script_latin, upv, usp, uig-script_arabic, uig-script_cyrillic, uzb-script_cyrillic, vag, bav, vid, vie, vif, vun, vut, prk, wwa, rro, bao, waw, lgl, wlx, cou, hub, gvc, mfi, wap, wba, war, way, guc, cym, kvw, tnp, hto, huu, wal-script_latin, wal-script_ethiopic, wlo, noa, wob, kao, xer, yad, yka, sah, yba, yli, nlk, yal, yam, yat, jmd, tao, yaa, ame, guu, yao, yre, yva, ybb, pib, byr, pil, ycn, ess, yuz, atb, zne, zaq, zpo, zad, zpc, zca, zpg, zai, zpl, zam, zaw, zpm, zac, zao, ztq, zar, zpt, zpi, zas, zaa, zpz, zab, zpu, zae, zty, zav, zza, zyb, ziw, zos, gnd. Default to English (eng)."
      },
      {
        "line": 230,
        "keyword": "Example",
        "content": "Example usage:"
      },
      {
        "line": 408,
        "keyword": "Example",
        "content": "- **\u062e\u0631\u0648\u062c\u06cc \u0645\u062b\u0627\u0644**: ![\u0645\u062b\u0627\u0644](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)"
      }
    ]
  },
  "apps/ebook2audiobook/readme/README_RU.md": {
    "total_lines": 391,
    "placeholder_percentage": 0.0025575447570332483,
    "flagged": false,
    "occurrences": [
      {
        "line": 372,
        "keyword": "Example",
        "content": "- **\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0432\u043e\u0434\u0430**: ![\u041f\u0440\u0438\u043c\u0435\u0440](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)"
      }
    ]
  },
  "apps/ebook2audiobook/readme/README_KR.md": {
    "total_lines": 489,
    "placeholder_percentage": 0.006134969325153374,
    "flagged": false,
    "occurrences": [
      {
        "line": 74,
        "keyword": "Example",
        "content": "- \ud83c\udf99\ufe0f [Coqui XTTSv2](https://huggingface.co/coqui/XTTS-v2) \ubc0f [Fairseq](https://github.com/facebookresearch/fairseq/tree/main/examples/mms) \ub4f1 \uace0\ud488\uc9c8 \uc74c\uc131\uc0dd\uc131 \uc5d4\uc9c4 \uc9c0\uc6d0"
      },
      {
        "line": 269,
        "keyword": "Example",
        "content": "Example usage:"
      },
      {
        "line": 454,
        "keyword": "Example",
        "content": "![\uc608\uc81c](https://github.com/DrewThomasson/VoxNovel/blob/dc5197dff97252fa44c391dc0596902d71278a88/readme_files/example_in_app.jpeg)"
      }
    ]
  },
  "apps/ebook2audiobook/lib/models.py": {
    "total_lines": 435,
    "placeholder_percentage": 0.18620689655172415,
    "flagged": false,
    "occurrences": [
      {
        "line": 32,
        "keyword": "Sample",
        "content": "\"samplerate\": 24000,"
      },
      {
        "line": 72,
        "keyword": "Sample",
        "content": "\"samplerate\": 24000,"
      },
      {
        "line": 101,
        "keyword": "Sample",
        "content": "\"samplerate\": 22050,"
      },
      {
        "line": 107,
        "keyword": "Sample",
        "content": "\"samplerate\": 22050,"
      },
      {
        "line": 113,
        "keyword": "Sample",
        "content": "\"samplerate\": 16000,"
      },
      {
        "line": 119,
        "keyword": "Sample",
        "content": "\"samplerate\": 16000,"
      },
      {
        "line": 130,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"KumarDahl_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 132,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 138,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"AiExplained_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 140,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 146,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"AsmrRacoon_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 148,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 154,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"BobOdenkirk_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 156,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 162,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"BobRoss_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 164,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 170,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"female\", f\"BrinaPalencia_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 172,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 178,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"BryanCranston_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 180,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 186,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"elder\", \"male\", f\"DavidAttenborough_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 188,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 194,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"DeathPussInBoots_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 196,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 202,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"elder\", \"male\", f\"DermotCrowley_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 204,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 210,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"female\", f\"EvaSeymour_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 212,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 218,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"elder\", \"male\", f\"GideonOfnirEldenRing_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 220,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 226,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"GhostMW2_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 228,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 234,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"elder\", \"male\", f\"JhonButlerASMR_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 236,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 242,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"JhonMulaney_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 244,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 250,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"female\", f\"JillRedfield_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 252,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 258,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"female\", f\"JuliaWhenlan_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 260,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 266,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"elder\", \"male\", f\"LeeHorsley_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 268,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 274,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"female\", f\"MelinaEldenRing_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 276,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 282,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"MorganFreeman_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 284,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 290,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"NeilGaiman_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 292,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 298,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"elder\", \"male\", f\"RainyDayHeadSpace_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 300,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 306,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"RayPorter_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 308,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 314,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"female\", f\"RelaxForAWhile_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 316,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 322,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"female\", f\"RosamundPike_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 324,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 330,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"female\", f\"ScarlettJohansson_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 332,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 338,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"StanleyParable_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 340,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 346,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"WhisperSalemASMR_{default_xtts_settings['samplerate']}.wav\"),"
      },
      {
        "line": 348,
        "keyword": "Sample",
        "content": "\"samplerate\": default_xtts_settings['samplerate']"
      },
      {
        "line": 356,
        "keyword": "Sample",
        "content": "\"voice\": os.path.join(voices_dir, \"eng\", \"adult\", \"male\", f\"KumarDahl_{default_bark_settings['samplerate']}.wav\"),"
      },
      {
        "line": 358,
        "keyword": "Sample",
        "content": "\"samplerate\": default_bark_settings['samplerate']"
      },
      {
        "line": 379,
        "keyword": "Sample",
        "content": "\"samplerate\": {"
      },
      {
        "line": 380,
        "keyword": "Sample",
        "content": "\"css10/vits\": default_vits_settings['samplerate'],"
      },
      {
        "line": 381,
        "keyword": "Sample",
        "content": "\"custom/vits\": default_vits_settings['samplerate'],"
      },
      {
        "line": 382,
        "keyword": "Sample",
        "content": "\"custom/vits-female\": default_vits_settings['samplerate'],"
      },
      {
        "line": 383,
        "keyword": "Sample",
        "content": "\"cv/vits\": default_vits_settings['samplerate'],"
      },
      {
        "line": 384,
        "keyword": "Sample",
        "content": "\"mai/vits\": default_vits_settings['samplerate'],"
      },
      {
        "line": 387,
        "keyword": "Sample",
        "content": "\"openbible/vits\": default_vits_settings['samplerate'],"
      },
      {
        "line": 388,
        "keyword": "Sample",
        "content": "\"vctk/vits\": default_vits_settings['samplerate'],"
      },
      {
        "line": 389,
        "keyword": "Sample",
        "content": "\"thorsten/vits\": default_vits_settings['samplerate']"
      },
      {
        "line": 400,
        "keyword": "Sample",
        "content": "\"samplerate\": default_fairseq_settings['samplerate']"
      },
      {
        "line": 416,
        "keyword": "Sample",
        "content": "\"samplerate\": {"
      },
      {
        "line": 417,
        "keyword": "Sample",
        "content": "\"mai/tacotron2-DDC\": default_tacotron_settings['samplerate'],"
      },
      {
        "line": 418,
        "keyword": "Sample",
        "content": "\"thorsten/tacotron2-DDC\": default_tacotron_settings['samplerate'],"
      },
      {
        "line": 419,
        "keyword": "Sample",
        "content": "\"kokoro/tacotron2-DDC\": default_tacotron_settings['samplerate'],"
      },
      {
        "line": 420,
        "keyword": "Sample",
        "content": "\"ljspeech/tacotron2-DDC\": default_tacotron_settings['samplerate'],"
      },
      {
        "line": 421,
        "keyword": "Sample",
        "content": "\"baker/tacotron2-DDC-GST\": default_tacotron_settings['samplerate']"
      },
      {
        "line": 432,
        "keyword": "Sample",
        "content": "\"samplerate\": default_yourtts_settings['samplerate']"
      }
    ]
  },
  "apps/ebook2audiobook/lib/lang.py": {
    "total_lines": 1699,
    "placeholder_percentage": 0.0017657445556209534,
    "flagged": false,
    "occurrences": [
      {
        "line": 37,
        "keyword": "TODO",
        "content": "\"fairseq\": {\"ara\": \"ar\", \"ben\": \"bn\", \"eng\": \"en\", \"fas\": \"fa\", \"fra\": \"fr\", \"deu\": \"de\", \"hin\": \"hi\", \"hun\": \"hu\", \"ind\": \"id\", \"jav\": \"jv\", \"kor\": \"ko\", \"pol\": \"pl\", \"por\": \"pt\", \"rus\": \"ru\", \"spa\": \"es\", \"tam\": \"ta\", \"tel\": \"te\", \"tur\": \"tr\", \"yor\": \"yo\", \"abi\": \"abi\", \"ace\": \"ace\", \"aca\": \"aca\", \"acn\": \"acn\", \"acr\": \"acr\", \"ach\": \"ach\", \"acu\": \"acu\", \"guq\": \"guq\", \"ade\": \"ade\", \"adj\": \"adj\", \"agd\": \"agd\", \"agx\": \"agx\", \"agn\": \"agn\", \"aha\": \"aha\", \"aka\": \"ak\", \"knj\": \"knj\", \"ake\": \"ake\", \"aeu\": \"aeu\", \"ahk\": \"ahk\", \"bss\": \"bss\", \"alj\": \"alj\", \"sqi\": \"sq\", \"alt\": \"alt\", \"alp\": \"alp\", \"alz\": \"alz\", \"kab\": \"kab\", \"amk\": \"amk\", \"mmg\": \"mmg\", \"amh\": \"am\", \"ami\": \"ami\", \"azg\": \"azg\", \"agg\": \"agg\", \"boj\": \"boj\", \"cko\": \"cko\", \"any\": \"any\", \"arl\": \"arl\", \"atq\": \"atq\", \"luc\": \"luc\", \"hyw\": \"hyw\", \"apr\": \"apr\", \"aia\": \"aia\", \"msy\": \"msy\", \"cni\": \"cni\", \"cjo\": \"cjo\", \"cpu\": \"cpu\", \"cpb\": \"cpb\", \"asm\": \"as\", \"asa\": \"asa\", \"teo\": \"teo\", \"ati\": \"ati\", \"djk\": \"djk\", \"ava\": \"av\", \"avn\": \"avn\", \"avu\": \"avu\", \"awb\": \"awb\", \"kwi\": \"kwi\", \"awa\": \"awa\", \"agr\": \"agr\", \"agu\": \"agu\", \"ayr\": \"ayr\", \"ayo\": \"ayo\", \"abp\": \"abp\", \"blx\": \"blx\", \"sgb\": \"sgb\", \"azj-script_cyrillic\": \"azj-script_cyrillic\", \"azj-script_latin\": \"azj-script_latin\", \"azb\": \"azb\", \"bba\": \"bba\", \"bhz\": \"bhz\", \"bvc\": \"bvc\", \"bfy\": \"bfy\", \"bgq\": \"bgq\", \"bdq\": \"bdq\", \"bdh\": \"bdh\", \"bqi\": \"bqi\", \"bjw\": \"bjw\", \"blz\": \"blz\", \"ban\": \"ban\", \"bcc-script_latin\": \"bcc-script_latin\", \"bcc-script_arabic\": \"bcc-script_arabic\", \"bam\": \"bm\", \"ptu\": \"ptu\", \"bcw\": \"bcw\", \"bqj\": \"bqj\", \"bno\": \"bno\", \"bbb\": \"bbb\", \"bfa\": \"bfa\", \"bjz\": \"bjz\", \"bak\": \"ba\", \"eus\": \"eu\", \"bsq\": \"bsq\", \"akb\": \"akb\", \"btd\": \"btd\", \"btx\": \"btx\", \"bts\": \"bts\", \"bbc\": \"bbc\", \"bvz\": \"bvz\", \"bjv\": \"bjv\", \"bep\": \"bep\", \"bkv\": \"bkv\", \"bzj\": \"bzj\", \"bem\": \"bem\", \"bng\": \"bng\", \"bom\": \"bom\", \"btt\": \"btt\", \"bha\": \"bha\", \"bgw\": \"bgw\", \"bht\": \"bht\", \"beh\": \"beh\", \"sne\": \"sne\", \"ubl\": \"ubl\", \"bcl\": \"bcl\", \"bim\": \"bim\", \"bkd\": \"bkd\", \"bjr\": \"bjr\", \"bfo\": \"bfo\", \"biv\": \"biv\", \"bib\": \"bib\", \"bis\": \"bi\", \"bzi\": \"bzi\", \"bqp\": \"bqp\", \"bpr\": \"bpr\", \"bps\": \"bps\", \"bwq\": \"bwq\", \"bdv\": \"bdv\", \"bqc\": \"bqc\", \"bus\": \"bus\", \"bnp\": \"bnp\", \"bmq\": \"bmq\", \"bdg\": \"bdg\", \"boa\": \"boa\", \"ksr\": \"ksr\", \"bor\": \"bor\", \"bru\": \"bru\", \"box\": \"box\", \"bzh\": \"bzh\", \"bgt\": \"bgt\", \"sab\": \"sab\", \"bul\": \"bg\", \"bwu\": \"bwu\", \"bmv\": \"bmv\", \"mya\": \"my\", \"tte\": \"tte\", \"cjp\": \"cjp\", \"cbv\": \"cbv\", \"kaq\": \"kaq\", \"cot\": \"cot\", \"cbc\": \"cbc\", \"car\": \"car\", \"cat\": \"ca\", \"ceb\": \"ceb\", \"cme\": \"cme\", \"cbi\": \"cbi\", \"ceg\": \"ceg\", \"cly\": \"cly\", \"cya\": \"cya\", \"che\": \"ce\", \"hne\": \"hne\", \"nya\": \"ny\", \"dig\": \"dig\", \"dug\": \"dug\", \"bgr\": \"bgr\", \"cek\": \"cek\", \"cfm\": \"cfm\", \"cnh\": \"cnh\", \"hlt\": \"hlt\", \"mwq\": \"mwq\", \"ctd\": \"ctd\", \"tcz\": \"tcz\", \"zyp\": \"zyp\", \"cco\": \"cco\", \"cnl\": \"cnl\", \"cle\": \"cle\", \"chz\": \"chz\", \"cpa\": \"cpa\", \"cso\": \"cso\", \"cnt\": \"cnt\", \"cuc\": \"cuc\", \"hak\": \"hak\", \"nan\": \"nan\", \"xnj\": \"xnj\", \"cap\": \"cap\", \"cax\": \"cax\", \"ctg\": \"ctg\", \"ctu\": \"ctu\", \"chf\": \"chf\", \"cce\": \"cce\", \"crt\": \"crt\", \"crq\": \"crq\", \"cac-dialect_sansebasti\\u00e1ncoat\\u00e1n\": \"cac-dialect_sansebasti\\u00e1ncoat\\u00e1n\", \"cac-dialect_sanmateoixtat\\u00e1n\": \"cac-dialect_sanmateoixtat\\u00e1n\", \"ckt\": \"ckt\", \"ncu\": \"ncu\", \"cdj\": \"cdj\", \"chv\": \"cv\", \"caa\": \"caa\", \"asg\": \"asg\", \"con\": \"con\", \"crn\": \"crn\", \"cok\": \"cok\", \"crk-script_latin\": \"crk-script_latin\", \"crk-script_syllabics\": \"crk-script_syllabics\", \"crh\": \"crh\", \"cui\": \"cui\", \"ces\": \"cs\", \"dsh\": \"dsh\", \"dbq\": \"dbq\", \"dga\": \"dga\", \"dgi\": \"dgi\", \"dgk\": \"dgk\", \"dnj-dialect_gweetaawueast\": \"dnj-dialect_gweetaawueast\", \"dnj-dialect_blowowest\": \"dnj-dialect_blowowest\", \"daa\": \"daa\", \"dnt\": \"dnt\", \"dnw\": \"dnw\", \"dar\": \"dar\", \"tcc\": \"tcc\", \"dwr\": \"dwr\", \"ded\": \"ded\", \"mzw\": \"mzw\", \"ntr\": \"ntr\", \"ddn\": \"ddn\", \"des\": \"des\", \"dso\": \"dso\", \"nfa\": \"nfa\", \"dhi\": \"dhi\", \"gud\": \"gud\", \"did\": \"did\", \"mhu\": \"mhu\", \"dip\": \"dip\", \"dik\": \"dik\", \"tbz\": \"tbz\", \"dts\": \"dts\", \"dos\": \"dos\", \"dgo\": \"dgo\", \"mvp\": \"mvp\", \"jen\": \"jen\", \"dzo\": \"dz\", \"idd\": \"idd\", \"eka\": \"eka\", \"cto\": \"cto\", \"emp\": \"emp\", \"enx\": \"enx\", \"sja\": \"sja\", \"myv\": \"myv\", \"mcq\": \"mcq\", \"ese\": \"ese\", \"evn\": \"evn\", \"eza\": \"eza\", \"ewe\": \"ee\", \"fal\": \"fal\", \"fao\": \"fo\", \"far\": \"far\", \"fij\": \"fj\", \"fin\": \"fi\", \"fon\": \"fon\", \"frd\": \"frd\", \"ful\": \"ff\", \"flr\": \"flr\", \"gau\": \"gau\", \"gbk\": \"gbk\", \"gag-script_cyrillic\": \"gag-script_cyrillic\", \"gag-script_latin\": \"gag-script_latin\", \"gbi\": \"gbi\", \"gmv\": \"gmv\", \"lug\": \"lg\", \"pwg\": \"pwg\", \"gbm\": \"gbm\", \"cab\": \"cab\", \"grt\": \"grt\", \"krs\": \"krs\", \"gso\": \"gso\", \"nlg\": \"nlg\", \"gej\": \"gej\", \"gri\": \"gri\", \"kik\": \"ki\", \"acd\": \"acd\", \"glk\": \"glk\", \"gof-script_latin\": \"gof-script_latin\", \"gog\": \"gog\", \"gkn\": \"gkn\", \"wsg\": \"wsg\", \"gjn\": \"gjn\", \"gqr\": \"gqr\", \"gor\": \"gor\", \"gux\": \"gux\", \"gbo\": \"gbo\", \"ell\": \"el\", \"grc\": \"grc\", \"guh\": \"guh\", \"gub\": \"gub\", \"grn\": \"gn\", \"gyr\": \"gyr\", \"guo\": \"guo\", \"gde\": \"gde\", \"guj\": \"gu\", \"gvl\": \"gvl\", \"guk\": \"guk\", \"rub\": \"rub\", \"dah\": \"dah\", \"gwr\": \"gwr\", \"gwi\": \"gwi\", \"hat\": \"ht\", \"hlb\": \"hlb\", \"amf\": \"amf\", \"hag\": \"hag\", \"hnn\": \"hnn\", \"bgc\": \"bgc\", \"had\": \"had\", \"hau\": \"ha\", \"hwc\": \"hwc\", \"hvn\": \"hvn\", \"hay\": \"hay\", \"xed\": \"xed\", \"heb\": \"he\", \"heh\": \"heh\", \"hil\": \"hil\", \"hif\": \"hif\", \"hns\": \"hns\", \"hoc\": \"hoc\", \"hoy\": \"hoy\", \"hus-dialect_westernpotosino\": \"hus-dialect_westernpotosino\", \"hus-dialect_centralveracruz\": \"hus-dialect_centralveracruz\", \"huv\": \"huv\", \"hui\": \"hui\", \"hap\": \"hap\", \"iba\": \"iba\", \"isl\": \"is\", \"dbj\": \"dbj\", \"ifa\": \"ifa\", \"ifb\": \"ifb\", \"ifu\": \"ifu\", \"ifk\": \"ifk\", \"ife\": \"ife\", \"ign\": \"ign\", \"ikk\": \"ikk\", \"iqw\": \"iqw\", \"ilb\": \"ilb\", \"ilo\": \"ilo\", \"imo\": \"imo\", \"inb\": \"inb\", \"ipi\": \"ipi\", \"irk\": \"irk\", \"icr\": \"icr\", \"itv\": \"itv\", \"itl\": \"itl\", \"atg\": \"atg\", \"ixl-dialect_sanjuancotzal\": \"ixl-dialect_sanjuancotzal\", \"ixl-dialect_sangasparchajul\": \"ixl-dialect_sangasparchajul\", \"ixl-dialect_santamarianebaj\": \"ixl-dialect_santamarianebaj\", \"nca\": \"nca\", \"izr\": \"izr\", \"izz\": \"izz\", \"jac\": \"jac\", \"jam\": \"jam\", \"jvn\": \"jvn\", \"kac\": \"kac\", \"dyo\": \"dyo\", \"csk\": \"csk\", \"adh\": \"adh\", \"jun\": \"jun\", \"jbu\": \"jbu\", \"dyu\": \"dyu\", \"bex\": \"bex\", \"juy\": \"juy\", \"gna\": \"gna\", \"urb\": \"urb\", \"kbp\": \"kbp\", \"cwa\": \"cwa\", \"dtp\": \"dtp\", \"kbr\": \"kbr\", \"cgc\": \"cgc\", \"kki\": \"kki\", \"kzf\": \"kzf\", \"lew\": \"lew\", \"cbr\": \"cbr\", \"kkj\": \"kkj\", \"keo\": \"keo\", \"kqe\": \"kqe\", \"kak\": \"kak\", \"kyb\": \"kyb\", \"knb\": \"knb\", \"kmd\": \"kmd\", \"kml\": \"kml\", \"ify\": \"ify\", \"xal\": \"xal\", \"kbq\": \"kbq\", \"kay\": \"kay\", \"ktb\": \"ktb\", \"hig\": \"hig\", \"gam\": \"gam\", \"cbu\": \"cbu\", \"xnr\": \"xnr\", \"kmu\": \"kmu\", \"kne\": \"kne\", \"kan\": \"kn\", \"kby\": \"kby\", \"pam\": \"pam\", \"cak-dialect_santamar\\u00edadejes\\u00fas\": \"cak-dialect_santamar\\u00edadejes\\u00fas\", \"cak-dialect_southcentral\": \"cak-dialect_southcentral\", \"cak-dialect_yepocapa\": \"cak-dialect_yepocapa\", \"cak-dialect_western\": \"cak-dialect_western\", \"cak-dialect_santodomingoxenacoj\": \"cak-dialect_santodomingoxenacoj\", \"cak-dialect_central\": \"cak-dialect_central\", \"xrb\": \"xrb\", \"krc\": \"krc\", \"kaa\": \"kaa\", \"krl\": \"krl\", \"pww\": \"pww\", \"xsm\": \"xsm\", \"cbs\": \"cbs\", \"pss\": \"pss\", \"kxf\": \"kxf\", \"kyz\": \"kyz\", \"kyu\": \"kyu\", \"txu\": \"txu\", \"kaz\": \"kk\", \"ndp\": \"ndp\", \"kbo\": \"kbo\", \"kyq\": \"kyq\", \"ken\": \"ken\", \"ker\": \"ker\", \"xte\": \"xte\", \"kyg\": \"kyg\", \"kjh\": \"kjh\", \"kca\": \"kca\", \"khm\": \"km\", \"kxm\": \"kxm\", \"kjg\": \"kjg\", \"nyf\": \"nyf\", \"kij\": \"kij\", \"kia\": \"kia\", \"kqr\": \"kqr\", \"kqp\": \"kqp\", \"krj\": \"krj\", \"zga\": \"zga\", \"kin\": \"rw\", \"pkb\": \"pkb\", \"geb\": \"geb\", \"gil\": \"gil\", \"kje\": \"kje\", \"kss\": \"kss\", \"thk\": \"thk\", \"klu\": \"klu\", \"kyo\": \"kyo\", \"kog\": \"kog\", \"kfb\": \"kfb\", \"kpv\": \"kpv\", \"bbo\": \"bbo\", \"xon\": \"xon\", \"kma\": \"kma\", \"kno\": \"kno\", \"kxc\": \"kxc\", \"ozm\": \"ozm\", \"kqy\": \"kqy\", \"coe\": \"coe\", \"kpq\": \"kpq\", \"kpy\": \"kpy\", \"kyf\": \"kyf\", \"kff-script_telugu\": \"kff-script_telugu\", \"kri\": \"kri\", \"rop\": \"rop\", \"ktj\": \"ktj\", \"ted\": \"ted\", \"krr\": \"krr\", \"kdt\": \"kdt\", \"kez\": \"kez\", \"cul\": \"cul\", \"kle\": \"kle\", \"kdi\": \"kdi\", \"kue\": \"kue\", \"kum\": \"kum\", \"kvn\": \"kvn\", \"cuk\": \"cuk\", \"kdn\": \"kdn\", \"xuo\": \"xuo\", \"key\": \"key\", \"kpz\": \"kpz\", \"knk\": \"knk\", \"kmr-script_latin\": \"kmr-script_latin\", \"kmr-script_arabic\": \"kmr-script_arabic\", \"kmr-script_cyrillic\": \"kmr-script_cyrillic\", \"xua\": \"xua\", \"kru\": \"kru\", \"kus\": \"kus\", \"kub\": \"kub\", \"kdc\": \"kdc\", \"kxv\": \"kxv\", \"blh\": \"blh\", \"cwt\": \"cwt\", \"kwd\": \"kwd\", \"tnk\": \"tnk\", \"kwf\": \"kwf\", \"cwe\": \"cwe\", \"kyc\": \"kyc\", \"tye\": \"tye\", \"kir\": \"ky\", \"quc-dialect_north\": \"quc-dialect_north\", \"quc-dialect_east\": \"quc-dialect_east\", \"quc-dialect_central\": \"quc-dialect_central\", \"lac\": \"lac\", \"lsi\": \"lsi\", \"lbj\": \"lbj\", \"lhu\": \"lhu\", \"las\": \"las\", \"lam\": \"lam\", \"lns\": \"lns\", \"ljp\": \"ljp\", \"laj\": \"laj\", \"lao\": \"lo\", \"lat\": \"la\", \"lav\": \"lv\", \"law\": \"law\", \"lcp\": \"lcp\", \"lzz\": \"lzz\", \"lln\": \"lln\", \"lef\": \"lef\", \"acf\": \"acf\", \"lww\": \"lww\", \"mhx\": \"mhx\", \"eip\": \"eip\", \"lia\": \"lia\", \"lif\": \"lif\", \"onb\": \"onb\", \"lis\": \"lis\", \"loq\": \"loq\", \"lob\": \"lob\", \"yaz\": \"yaz\", \"lok\": \"lok\", \"llg\": \"llg\", \"ycl\": \"ycl\", \"lom\": \"lom\", \"ngl\": \"ngl\", \"lon\": \"lon\", \"lex\": \"lex\", \"lgg\": \"lgg\", \"ruf\": \"ruf\", \"dop\": \"dop\", \"lnd\": \"lnd\", \"ndy\": \"ndy\", \"lwo\": \"lwo\", \"lee\": \"lee\", \"mev\": \"mev\", \"mfz\": \"mfz\", \"jmc\": \"jmc\", \"myy\": \"myy\", \"mbc\": \"mbc\", \"mda\": \"mda\", \"mad\": \"mad\", \"mag\": \"mag\", \"ayz\": \"ayz\", \"mai\": \"mai\", \"mca\": \"mca\", \"mcp\": \"mcp\", \"mak\": \"mak\", \"vmw\": \"vmw\", \"mgh\": \"mgh\", \"kde\": \"kde\", \"mlg\": \"mg\", \"zlm\": \"zlm\", \"pse\": \"pse\", \"mkn\": \"mkn\", \"xmm\": \"xmm\", \"mal\": \"ml\", \"xdy\": \"xdy\", \"div\": \"dv\", \"mdy\": \"mdy\", \"mup\": \"mup\", \"mam-dialect_central\": \"mam-dialect_central\", \"mam-dialect_northern\": \"mam-dialect_northern\", \"mam-dialect_southern\": \"mam-dialect_southern\", \"mam-dialect_western\": \"mam-dialect_western\", \"mqj\": \"mqj\", \"mcu\": \"mcu\", \"mzk\": \"mzk\", \"maw\": \"maw\", \"mjl\": \"mjl\", \"mnk\": \"mnk\", \"mge\": \"mge\", \"mbh\": \"mbh\", \"knf\": \"knf\", \"mjv\": \"mjv\", \"mbt\": \"mbt\", \"obo\": \"obo\", \"mbb\": \"mbb\", \"mzj\": \"mzj\", \"nld\": \"nld\", \"sjm\": \"sjm\", \"mrw\": \"mrw\", \"mar\": \"mr\", \"mpg\": \"mpg\", \"mhr\": \"mhr\", \"enb\": \"enb\", \"mah\": \"mh\", \"myx\": \"myx\", \"klv\": \"klv\", \"mfh\": \"mfh\", \"met\": \"met\", \"mcb\": \"mcb\", \"mop\": \"mop\", \"yua\": \"yua\", \"mfy\": \"mfy\", \"maz\": \"maz\", \"vmy\": \"vmy\", \"maq\": \"maq\", \"mzi\": \"mzi\", \"maj\": \"maj\", \"maa-dialect_sanantonio\": \"maa-dialect_sanantonio\", \"maa-dialect_sanjer\\u00f3nimo\": \"maa-dialect_sanjer\\u00f3nimo\", \"mhy\": \"mhy\", \"mhi\": \"mhi\", \"zmz\": \"zmz\", \"myb\": \"myb\", \"gai\": \"gai\", \"mqb\": \"mqb\", \"mbu\": \"mbu\", \"med\": \"med\", \"men\": \"men\", \"mee\": \"mee\", \"mwv\": \"mwv\", \"meq\": \"meq\", \"zim\": \"zim\", \"mgo\": \"mgo\", \"mej\": \"mej\", \"mpp\": \"mpp\", \"min\": \"min\", \"gum\": \"gum\", \"mpx\": \"mpx\", \"mco\": \"mco\", \"mxq\": \"mxq\", \"pxm\": \"pxm\", \"mto\": \"mto\", \"mim\": \"mim\", \"xta\": \"xta\", \"mbz\": \"mbz\", \"mip\": \"mip\", \"mib\": \"mib\", \"miy\": \"miy\", \"mih\": \"mih\", \"miz\": \"miz\", \"xtd\": \"xtd\", \"mxt\": \"mxt\", \"xtm\": \"xtm\", \"mxv\": \"mxv\", \"xtn\": \"xtn\", \"mie\": \"mie\", \"mil\": \"mil\", \"mio\": \"mio\", \"mdv\": \"mdv\", \"mza\": \"mza\", \"mit\": \"mit\", \"mxb\": \"mxb\", \"mpm\": \"mpm\", \"soy\": \"soy\", \"cmo-script_latin\": \"cmo-script_latin\", \"cmo-script_khmer\": \"cmo-script_khmer\", \"mfq\": \"mfq\", \"old\": \"old\", \"mfk\": \"mfk\", \"mif\": \"mif\", \"mkl\": \"mkl\", \"mox\": \"mox\", \"myl\": \"myl\", \"mqf\": \"mqf\", \"mnw\": \"mnw\", \"mon\": \"mn\", \"mog\": \"mog\", \"mfe\": \"mfe\", \"mor\": \"mor\", \"mqn\": \"mqn\", \"mgd\": \"mgd\", \"mtj\": \"mtj\", \"cmr\": \"cmr\", \"mtd\": \"mtd\", \"bmr\": \"bmr\", \"moz\": \"moz\", \"mzm\": \"mzm\", \"mnb\": \"mnb\", \"mnf\": \"mnf\", \"unr\": \"unr\", \"fmu\": \"fmu\", \"mur\": \"mur\", \"tih\": \"tih\", \"muv\": \"muv\", \"muy\": \"muy\", \"sur\": \"sur\", \"moa\": \"moa\", \"wmw\": \"wmw\", \"tnr\": \"tnr\", \"miq\": \"miq\", \"mos\": \"mos\", \"muh\": \"muh\", \"nas\": \"nas\", \"mbj\": \"mbj\", \"nfr\": \"nfr\", \"kfw\": \"kfw\", \"nst\": \"nst\", \"nag\": \"nag\", \"nch\": \"nch\", \"nhe\": \"nhe\", \"ngu\": \"ngu\", \"azz\": \"azz\", \"nhx\": \"nhx\", \"ncl\": \"ncl\", \"nhy\": \"nhy\", \"ncj\": \"ncj\", \"nsu\": \"nsu\", \"npl\": \"npl\", \"nuz\": \"nuz\", \"nhw\": \"nhw\", \"nhi\": \"nhi\", \"nlc\": \"nlc\", \"nab\": \"nab\", \"gld\": \"gld\", \"nnb\": \"nnb\", \"npy\": \"npy\", \"pbb\": \"pbb\", \"ntm\": \"ntm\", \"nmz\": \"nmz\", \"naw\": \"naw\", \"nxq\": \"nxq\", \"ndj\": \"ndj\", \"ndz\": \"ndz\", \"ndv\": \"ndv\", \"new\": \"new\", \"nij\": \"nij\", \"sba\": \"sba\", \"gng\": \"gng\", \"nga\": \"nga\", \"nnq\": \"nnq\", \"ngp\": \"ngp\", \"gym\": \"gym\", \"kdj\": \"kdj\", \"nia\": \"nia\", \"nim\": \"nim\", \"nin\": \"nin\", \"nko\": \"nko\", \"nog\": \"nog\", \"lem\": \"lem\", \"not\": \"not\", \"nhu\": \"nhu\", \"nob\": \"nb\", \"bud\": \"bud\", \"nus\": \"nus\", \"yas\": \"yas\", \"nnw\": \"nnw\", \"nwb\": \"nwb\", \"nyy\": \"nyy\", \"nyn\": \"nyn\", \"rim\": \"rim\", \"lid\": \"lid\", \"nuj\": \"nuj\", \"nyo\": \"nyo\", \"nzi\": \"nzi\", \"ann\": \"ann\", \"ory\": \"ory\", \"ojb-script_latin\": \"ojb-script_latin\", \"ojb-script_syllabics\": \"ojb-script_syllabics\", \"oku\": \"oku\", \"bsc\": \"bsc\", \"bdu\": \"bdu\", \"orm\": \"om\", \"ury\": \"ury\", \"oss\": \"os\", \"ote\": \"ote\", \"otq\": \"otq\", \"stn\": \"stn\", \"sig\": \"sig\", \"kfx\": \"kfx\", \"bfz\": \"bfz\", \"sey\": \"sey\", \"pao\": \"pao\", \"pau\": \"pau\", \"pce\": \"pce\", \"plw\": \"plw\", \"pmf\": \"pmf\", \"pag\": \"pag\", \"pap\": \"pap\", \"prf\": \"prf\", \"pab\": \"pab\", \"pbi\": \"pbi\", \"pbc\": \"pbc\", \"pad\": \"pad\", \"ata\": \"ata\", \"pez\": \"pez\", \"peg\": \"peg\", \"pcm\": \"pcm\", \"pis\": \"pis\", \"pny\": \"pny\", \"pir\": \"pir\", \"pjt\": \"pjt\", \"poy\": \"poy\", \"pps\": \"pps\", \"pls\": \"pls\", \"poi\": \"poi\", \"poh-dialect_eastern\": \"poh-dialect_eastern\", \"poh-dialect_western\": \"poh-dialect_western\", \"prt\": \"prt\", \"pui\": \"pui\", \"pan\": \"pa\", \"tsz\": \"tsz\", \"suv\": \"suv\", \"lme\": \"lme\", \"quy\": \"quy\", \"qvc\": \"qvc\", \"quz\": \"quz\", \"qve\": \"qve\", \"qub\": \"qub\", \"qvh\": \"qvh\", \"qwh\": \"qwh\", \"qvw\": \"qvw\", \"quf\": \"quf\", \"qvm\": \"qvm\", \"qul\": \"qul\", \"qvn\": \"qvn\", \"qxn\": \"qxn\", \"qxh\": \"qxh\", \"qvs\": \"qvs\", \"quh\": \"quh\", \"qxo\": \"qxo\", \"qxr\": \"qxr\", \"qvo\": \"qvo\", \"qvz\": \"qvz\", \"qxl\": \"qxl\", \"quw\": \"quw\", \"kjb\": \"kjb\", \"kek\": \"kek\", \"rah\": \"rah\", \"rjs\": \"rjs\", \"rai\": \"rai\", \"lje\": \"lje\", \"rnl\": \"rnl\", \"rkt\": \"rkt\", \"rap\": \"rap\", \"yea\": \"yea\", \"raw\": \"raw\", \"rej\": \"rej\", \"rel\": \"rel\", \"ril\": \"ril\", \"iri\": \"iri\", \"rgu\": \"rgu\", \"rhg\": \"rhg\", \"rmc-script_latin\": \"rmc-script_latin\", \"rmc-script_cyrillic\": \"rmc-script_cyrillic\", \"rmo\": \"rmo\", \"rmy-script_latin\": \"rmy-script_latin\", \"rmy-script_cyrillic\": \"rmy-script_cyrillic\", \"ron\": \"ro\", \"rol\": \"rol\", \"cla\": \"cla\", \"rng\": \"rng\", \"rug\": \"rug\", \"run\": \"rn\", \"lsm\": \"lsm\", \"spy\": \"spy\", \"sck\": \"sck\", \"saj\": \"saj\", \"sch\": \"sch\", \"sml\": \"sml\", \"xsb\": \"xsb\", \"sbl\": \"sbl\", \"saq\": \"saq\", \"sbd\": \"sbd\", \"smo\": \"sm\", \"rav\": \"rav\", \"sxn\": \"sxn\", \"sag\": \"sg\", \"sbp\": \"sbp\", \"xsu\": \"xsu\", \"srm\": \"srm\", \"sas\": \"sas\", \"apb\": \"apb\", \"sgw\": \"sgw\", \"tvw\": \"tvw\", \"lip\": \"lip\", \"slu\": \"slu\", \"snw\": \"snw\", \"sea\": \"sea\", \"sza\": \"sza\", \"seh\": \"seh\", \"crs\": \"crs\", \"ksb\": \"ksb\", \"shn\": \"shn\", \"sho\": \"sho\", \"mcd\": \"mcd\", \"cbt\": \"cbt\", \"xsr\": \"xsr\", \"shk\": \"shk\", \"shp\": \"shp\", \"sna\": \"sn\", \"cjs\": \"cjs\", \"jiv\": \"jiv\", \"snp\": \"snp\", \"sya\": \"sya\", \"sid\": \"sid\", \"snn\": \"snn\", \"sri\": \"sri\", \"srx\": \"srx\", \"sil\": \"sil\", \"sld\": \"sld\", \"akp\": \"akp\", \"xog\": \"xog\", \"som\": \"so\", \"bmu\": \"bmu\", \"khq\": \"khq\", \"ses\": \"ses\", \"mnx\": \"mnx\", \"srn\": \"srn\", \"sxb\": \"sxb\", \"suc\": \"suc\", \"tgo\": \"tgo\", \"suk\": \"suk\", \"sun\": \"su\", \"suz\": \"suz\", \"sgj\": \"sgj\", \"sus\": \"sus\", \"swh\": \"swh\", \"swe\": \"sv\", \"syl\": \"syl\", \"dyi\": \"dyi\", \"myk\": \"myk\", \"spp\": \"spp\", \"tap\": \"tap\", \"tby\": \"tby\", \"tna\": \"tna\", \"shi\": \"shi\", \"klw\": \"klw\", \"tgl\": \"tl\", \"tbk\": \"tbk\", \"tgj\": \"tgj\", \"blt\": \"blt\", \"tbg\": \"tbg\", \"omw\": \"omw\", \"tgk\": \"tg\", \"tdj\": \"tdj\", \"tbc\": \"tbc\", \"tlj\": \"tlj\", \"tly\": \"tly\", \"ttq-script_tifinagh\": \"ttq-script_tifinagh\", \"taj\": \"taj\", \"taq\": \"taq\", \"tpm\": \"tpm\", \"tgp\": \"tgp\", \"tnn\": \"tnn\", \"tac\": \"tac\", \"rif-script_latin\": \"rif-script_latin\", \"rif-script_arabic\": \"rif-script_arabic\", \"tat\": \"tt\", \"tav\": \"tav\", \"twb\": \"twb\", \"tbl\": \"tbl\", \"kps\": \"kps\", \"twe\": \"twe\", \"ttc\": \"ttc\", \"kdh\": \"kdh\", \"tes\": \"tes\", \"tex\": \"tex\", \"tee\": \"tee\", \"tpp\": \"tpp\", \"tpt\": \"tpt\", \"stp\": \"stp\", \"tfr\": \"tfr\", \"twu\": \"twu\", \"ter\": \"ter\", \"tew\": \"tew\", \"tha\": \"th\", \"nod\": \"nod\", \"thl\": \"thl\", \"tem\": \"tem\", \"adx\": \"adx\", \"bod\": \"bo\", \"khg\": \"khg\", \"tca\": \"tca\", \"tir\": \"ti\", \"txq\": \"txq\", \"tik\": \"tik\", \"dgr\": \"dgr\", \"tob\": \"tob\", \"tmf\": \"tmf\", \"tng\": \"tng\", \"tlb\": \"tlb\", \"ood\": \"ood\", \"tpi\": \"tpi\", \"jic\": \"jic\", \"lbw\": \"lbw\", \"txa\": \"txa\", \"tom\": \"tom\", \"toh\": \"toh\", \"tnt\": \"tnt\", \"sda\": \"sda\", \"tcs\": \"tcs\", \"toc\": \"toc\", \"tos\": \"tos\", \"neb\": \"neb\", \"trn\": \"trn\", \"trs\": \"trs\", \"trc\": \"trc\", \"tri\": \"tri\", \"cof\": \"cof\", \"tkr\": \"tkr\", \"kdl\": \"kdl\", \"cas\": \"cas\", \"tso\": \"ts\", \"tuo\": \"tuo\", \"iou\": \"iou\", \"tmc\": \"tmc\", \"tuf\": \"tuf\", \"tuk-script_latin\": \"tk\", \"tuk-script_arabic\": \"tk\", \"bov\": \"bov\", \"tue\": \"tue\", \"kcg\": \"kcg\", \"tzh-dialect_bachaj\\u00f3n\": \"tzh-dialect_bachaj\\u00f3n\", \"tzh-dialect_tenejapa\": \"tzh-dialect_tenejapa\", \"tzo-dialect_chenalh\\u00f3\": \"tzo-dialect_chenalh\\u00f3\", \"tzo-dialect_chamula\": \"tzo-dialect_chamula\", \"tzj-dialect_western\": \"tzj-dialect_western\", \"tzj-dialect_eastern\": \"tzj-dialect_eastern\", \"aoz\": \"aoz\", \"udm\": \"udm\", \"udu\": \"udu\", \"ukr\": \"uk\", \"ppk\": \"ppk\", \"ubu\": \"ubu\", \"urk\": \"urk\", \"ura\": \"ura\", \"urt\": \"urt\", \"urd-script_devanagari\": \"ur\", \"urd-script_arabic\": \"ur\", \"urd-script_latin\": \"ur\", \"upv\": \"upv\", \"usp\": \"usp\", \"uig-script_arabic\": \"ug\", \"uig-script_cyrillic\": \"ug\", \"uzb-script_cyrillic\": \"uz\", \"vag\": \"vag\", \"bav\": \"bav\", \"vid\": \"vid\", \"vie\": \"vi\", \"vif\": \"vif\", \"vun\": \"vun\", \"vut\": \"vut\", \"prk\": \"prk\", \"wwa\": \"wwa\", \"rro\": \"rro\", \"bao\": \"bao\", \"waw\": \"waw\", \"lgl\": \"lgl\", \"wlx\": \"wlx\", \"cou\": \"cou\", \"hub\": \"hub\", \"gvc\": \"gvc\", \"mfi\": \"mfi\", \"wap\": \"wap\", \"wba\": \"wba\", \"war\": \"war\", \"way\": \"way\", \"guc\": \"guc\", \"cym\": \"cy\", \"kvw\": \"kvw\", \"tnp\": \"tnp\", \"hto\": \"hto\", \"huu\": \"huu\", \"wal-script_latin\": \"wal-script_latin\", \"wal-script_ethiopic\": \"wal-script_ethiopic\", \"wlo\": \"wlo\", \"noa\": \"noa\", \"wob\": \"wob\", \"kao\": \"kao\", \"xer\": \"xer\", \"yad\": \"yad\", \"yka\": \"yka\", \"sah\": \"sah\", \"yba\": \"yba\", \"yli\": \"yli\", \"nlk\": \"nlk\", \"yal\": \"yal\", \"yam\": \"yam\", \"yat\": \"yat\", \"jmd\": \"jmd\", \"tao\": \"tao\", \"yaa\": \"yaa\", \"ame\": \"ame\", \"guu\": \"guu\", \"yao\": \"yao\", \"yre\": \"yre\", \"yva\": \"yva\", \"ybb\": \"ybb\", \"pib\": \"pib\", \"byr\": \"byr\", \"pil\": \"pil\", \"ycn\": \"ycn\", \"ess\": \"ess\", \"yuz\": \"yuz\", \"atb\": \"atb\", \"zne\": \"zne\", \"zaq\": \"zaq\", \"zpo\": \"zpo\", \"zad\": \"zad\", \"zpc\": \"zpc\", \"zca\": \"zca\", \"zpg\": \"zpg\", \"zai\": \"zai\", \"zpl\": \"zpl\", \"zam\": \"zam\", \"zaw\": \"zaw\", \"zpm\": \"zpm\", \"zac\": \"zac\", \"zao\": \"zao\", \"ztq\": \"ztq\", \"zar\": \"zar\", \"zpt\": \"zpt\", \"zpi\": \"zpi\", \"zas\": \"zas\", \"zaa\": \"zaa\", \"zpz\": \"zpz\", \"zab\": \"zab\", \"zpu\": \"zpu\", \"zae\": \"zae\", \"zty\": \"zty\", \"zav\": \"zav\", \"zza\": \"zza\", \"zyb\": \"zyb\", \"ziw\": \"ziw\", \"zos\": \"zos\", \"gnd\": \"gnd\"},"
      },
      {
        "line": 200,
        "keyword": "Example",
        "content": "\"e.g.\": \"for example\","
      },
      {
        "line": 969,
        "keyword": "TODO",
        "content": "\"cak-dialect_santodomingoxenacoj\": {\"name\": \"Kaqchikel - dialect Santo Domingo Xenacoj\", \"native_name\": \"Kaqchikel\", \"max_chars\": 142},"
      }
    ]
  },
  "apps/ebook2audiobook/lib/classes/tts_manager.py": {
    "total_lines": 34,
    "placeholder_percentage": 0.058823529411764705,
    "flagged": false,
    "occurrences": [
      {
        "line": 22,
        "keyword": "Coming soon",
        "content": "print('Other TTS engines coming soon!')"
      },
      {
        "line": 30,
        "keyword": "Coming soon",
        "content": "print('Other TTS engines coming soon!')"
      }
    ]
  },
  "apps/ebook2audiobook/lib/classes/voice_extractor.py": {
    "total_lines": 324,
    "placeholder_percentage": 0.018518518518518517,
    "flagged": false,
    "occurrences": [
      {
        "line": 26,
        "keyword": "Sample",
        "content": "self.samplerate = models[session['tts_engine']][session['fine_tuned']]['samplerate']"
      },
      {
        "line": 80,
        "keyword": "Sample",
        "content": "np.savez(npz_file, audio=audio, sample_rate=self.samplerate)"
      },
      {
        "line": 98,
        "keyword": "Example",
        "content": "log_mel_spectrogram = vggish_input.wavfile_to_examples(self.wav_file)"
      },
      {
        "line": 167,
        "keyword": "Sample",
        "content": "sample_rate = audio.frame_rate"
      },
      {
        "line": 178,
        "keyword": "Sample",
        "content": "samples = np.array(chunk.get_array_of_samples())"
      },
      {
        "line": 179,
        "keyword": "Sample",
        "content": "spectrum = np.abs(scipy.fftpack.fft(samples))"
      }
    ]
  },
  "apps/ebook2audiobook/lib/classes/tts_engines/coqui.py": {
    "total_lines": 928,
    "placeholder_percentage": 0.03125,
    "flagged": false,
    "occurrences": [
      {
        "line": 31,
        "keyword": "Sample",
        "content": "def _safe_multinomial(input, num_samples, replacement=False, *, generator=None, out=None):"
      },
      {
        "line": 41,
        "keyword": "Sample",
        "content": "return _original_multinomial(input, num_samples, replacement=replacement, generator=generator, out=out)"
      },
      {
        "line": 68,
        "keyword": "Sample",
        "content": "self.params[XTTSv2]['sample_rate'] = models[XTTSv2][self.session['fine_tuned']]['samplerate']"
      },
      {
        "line": 95,
        "keyword": "Sample",
        "content": "self.params[BARK]['sample_rate'] = models[BARK][self.session['fine_tuned']]['samplerate']"
      },
      {
        "line": 113,
        "keyword": "Sample",
        "content": "self.params[VITS]['sample_rate'] = models[VITS][self.session['fine_tuned']]['samplerate'][sub]"
      },
      {
        "line": 133,
        "keyword": "Sample",
        "content": "self.params[FAIRSEQ]['sample_rate'] = models[FAIRSEQ][self.session['fine_tuned']]['samplerate']"
      },
      {
        "line": 150,
        "keyword": "Sample",
        "content": "self.params[TACOTRON2]['sample_rate'] = models[TACOTRON2][self.session['fine_tuned']]['samplerate'][sub]"
      },
      {
        "line": 174,
        "keyword": "Sample",
        "content": "self.params[YOURTTS]['sample_rate'] = models[YOURTTS][self.session['fine_tuned']]['samplerate']"
      },
      {
        "line": 324,
        "keyword": "Sample",
        "content": "torchaudio.save(file_path, audio_tensor, default_xtts_settings['samplerate'], format='wav')"
      },
      {
        "line": 325,
        "keyword": "Sample",
        "content": "for samplerate in [16000, 24000]:"
      },
      {
        "line": 326,
        "keyword": "Sample",
        "content": "output_file = file_path.replace('.wav', f'_{samplerate}.wav')"
      },
      {
        "line": 327,
        "keyword": "Sample",
        "content": "if not self._normalize_audio(file_path, output_file, samplerate):"
      },
      {
        "line": 416,
        "keyword": "Sample",
        "content": "sample_rate, signal = wav.read(voice_path)"
      },
      {
        "line": 422,
        "keyword": "Sample",
        "content": "freqs = np.fft.fftfreq(len(fft_spectrum), d=1/sample_rate)"
      },
      {
        "line": 466,
        "keyword": "Sample",
        "content": "def _trim_audio(self, audio_data, sample_rate, silence_threshold=0.001, buffer_sec=0.007):"
      },
      {
        "line": 479,
        "keyword": "Sample",
        "content": "start_index = max(non_silent_indices[0] - int(buffer_sec * sample_rate), 0)"
      },
      {
        "line": 480,
        "keyword": "Sample",
        "content": "end_index = non_silent_indices[-1] + int(buffer_sec * sample_rate)"
      },
      {
        "line": 486,
        "keyword": "Sample",
        "content": "def _normalize_audio(self, input_file, output_file, samplerate):"
      },
      {
        "line": 503,
        "keyword": "Sample",
        "content": "'-ar', str(samplerate),"
      },
      {
        "line": 587,
        "keyword": "Sample",
        "content": "sample_rate = 16000 if self.session['tts_engine'] in [TACOTRON2, VITS] and self.session['voice'] is not None else settings['sample_rate']"
      },
      {
        "line": 588,
        "keyword": "Sample",
        "content": "silence_tensor = torch.zeros(1, int(sample_rate * 1.4)) # 1.4 seconds"
      },
      {
        "line": 719,
        "keyword": "Sample",
        "content": "\"-r\", str(settings['sample_rate']), tmp_out_wav,"
      },
      {
        "line": 742,
        "keyword": "Sample",
        "content": "settings['sample_rate'] = 16000"
      },
      {
        "line": 781,
        "keyword": "Sample",
        "content": "\"-r\", str(settings['sample_rate']), tmp_out_wav,"
      },
      {
        "line": 842,
        "keyword": "Sample",
        "content": "\"-r\", str(settings['sample_rate']), tmp_out_wav,"
      },
      {
        "line": 865,
        "keyword": "Sample",
        "content": "settings['sample_rate'] = 16000"
      },
      {
        "line": 901,
        "keyword": "Sample",
        "content": "audio_tensor = self._trim_audio(audio_tensor.squeeze(), sample_rate, 0.001, trim_audio_buffer).unsqueeze(0)"
      },
      {
        "line": 903,
        "keyword": "Sample",
        "content": "duration = audio_tensor.shape[-1] / sample_rate"
      },
      {
        "line": 913,
        "keyword": "Sample",
        "content": "torchaudio.save(final_sentence, audio_tensor, sample_rate, format=default_audio_proc_format)"
      }
    ]
  },
  "apps/ebook2audiobook/lib/classes/tts_engines/.template.py": {
    "total_lines": 393,
    "placeholder_percentage": 0.043256997455470736,
    "flagged": false,
    "occurrences": [
      {
        "line": 28,
        "keyword": "Sample",
        "content": "def _safe_multinomial(input, num_samples, replacement=False, *, generator=None, out=None):"
      },
      {
        "line": 39,
        "keyword": "Sample",
        "content": "return _original_multinomial(input, num_samples, replacement=replacement, generator=generator, out=out)"
      },
      {
        "line": 62,
        "keyword": "Sample",
        "content": "settings['sample_rate'] = models[self.session['tts_engine']][self.session['fine_tuned']]['samplerate']"
      },
      {
        "line": 154,
        "keyword": "Sample",
        "content": "def _wav2npz(self, wav_path, npz_path, sample_rate):"
      },
      {
        "line": 156,
        "keyword": "Sample",
        "content": "np.savez(npz_path, audio=audio, sample_rate=sample_rate)"
      },
      {
        "line": 162,
        "keyword": "Sample",
        "content": "sample_rate, signal = wav.read(voice_path)"
      },
      {
        "line": 168,
        "keyword": "Sample",
        "content": "freqs = np.fft.fftfreq(len(fft_spectrum), d=1/sample_rate)"
      },
      {
        "line": 211,
        "keyword": "Sample",
        "content": "def _trim_audio(self, audio_data, sample_rate, silence_threshold=0.001, buffer_sec=0.007):"
      },
      {
        "line": 224,
        "keyword": "Sample",
        "content": "start_index = max(non_silent_indices[0] - int(buffer_sec * sample_rate), 0)"
      },
      {
        "line": 225,
        "keyword": "Sample",
        "content": "end_index = non_silent_indices[-1] + int(buffer_sec * sample_rate)"
      },
      {
        "line": 231,
        "keyword": "Sample",
        "content": "def _normalize_audio(self, input_file, output_file, samplerate):"
      },
      {
        "line": 248,
        "keyword": "Sample",
        "content": "'-ar', str(samplerate),"
      },
      {
        "line": 322,
        "keyword": "Sample",
        "content": "sample_rate = settings['sample_rate']"
      },
      {
        "line": 323,
        "keyword": "Sample",
        "content": "silence_tensor = torch.zeros(1, sample_rate * 2)"
      },
      {
        "line": 364,
        "keyword": "Sample",
        "content": "audio_tensor = self._trim_audio(audio_tensor.squeeze(), sample_rate, 0.001, trim_audio_buffer).unsqueeze(0)"
      },
      {
        "line": 366,
        "keyword": "Sample",
        "content": "duration = audio_tensor.shape[-1] / sample_rate"
      },
      {
        "line": 376,
        "keyword": "Sample",
        "content": "torchaudio.save(final_sentence, audio_tensor, sample_rate, format=default_audio_proc_format)"
      }
    ]
  },
  "apps/CoreForgeLearn/CurriculumDesigner.swift": {
    "total_lines": 44,
    "placeholder_percentage": 0.022727272727272728,
    "flagged": false,
    "occurrences": [
      {
        "line": 5,
        "keyword": "Placeholder",
        "content": "/// earlier placeholder with basic persistence utilities."
      }
    ]
  },
  "apps/CoreForgeWriter/InkwellAIFull/InkwellAI/BookBuilder.swift": {
    "total_lines": 91,
    "placeholder_percentage": 0.01098901098901099,
    "flagged": false,
    "occurrences": [
      {
        "line": 19,
        "keyword": "Content for",
        "content": "/// be passed to keep track of generated content for continuity checks."
      }
    ]
  },
  "apps/CoreForgeWriter/InkwellAIFull/InkwellAI/PublishBridge.swift": {
    "total_lines": 65,
    "placeholder_percentage": 0.06153846153846154,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Example",
        "content": "private let endpoint = URL(string: \"https://publishing.example.com/upload\")!"
      },
      {
        "line": 24,
        "keyword": "Example",
        "content": "guard let url = URL(string: \"https://publishing.example.com/status/\\(id)\") else {"
      },
      {
        "line": 35,
        "keyword": "Example",
        "content": "guard let url = URL(string: \"https://publishing.example.com/dashboards\") else {"
      },
      {
        "line": 53,
        "keyword": "Example",
        "content": "guard let url = URL(string: \"https://publishing.example.com/connect\") else {"
      }
    ]
  },
  "apps/CoreForgeVisual/PromptTemplates.md": {
    "total_lines": 11,
    "placeholder_percentage": 0.09090909090909091,
    "flagged": false,
    "occurrences": [
      {
        "line": 3,
        "keyword": "Example",
        "content": "These examples show how to request scene breakdowns and metadata from GPT-4."
      }
    ]
  },
  "apps/CoreForgeVisual/AGENTS.md": {
    "total_lines": 390,
    "placeholder_percentage": 0.002564102564102564,
    "flagged": false,
    "occurrences": [
      {
        "line": 361,
        "keyword": "Example",
        "content": "- [ ] Provide multilingual visual cue glossary with usage examples"
      }
    ]
  },
  "apps/CoreForgeVisual/LoreForgeAIFull/LoreForgeAI/UploadScheduler.swift": {
    "total_lines": 65,
    "placeholder_percentage": 0.046153846153846156,
    "flagged": false,
    "occurrences": [
      {
        "line": 15,
        "keyword": "Example",
        "content": "case .youtube: return URL(string: \"https://example.com/youtube/upload\")!"
      },
      {
        "line": 16,
        "keyword": "Example",
        "content": "case .tiktok: return URL(string: \"https://example.com/tiktok/upload\")!"
      },
      {
        "line": 17,
        "keyword": "Example",
        "content": "case .instagram: return URL(string: \"https://example.com/instagram/upload\")!"
      }
    ]
  },
  "apps/CoreForgeMarket/TradeMindAIFull/Tests/TradeMindAITests/AdminServiceTests.swift": {
    "total_lines": 74,
    "placeholder_percentage": 0.10810810810810811,
    "flagged": false,
    "occurrences": [
      {
        "line": 9,
        "keyword": "Mock",
        "content": "private class MockProtocol: URLProtocol {"
      },
      {
        "line": 14,
        "keyword": "Mock",
        "content": "guard let handler = MockProtocol.requestHandler else { return }"
      },
      {
        "line": 25,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockProtocol.self]"
      },
      {
        "line": 27,
        "keyword": "Mock",
        "content": "MockProtocol.requestHandler = { request in"
      },
      {
        "line": 31,
        "keyword": "Example",
        "content": "return AdminService(baseURL: URL(string: \"https://example.com\")!, session: session)"
      },
      {
        "line": 52,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockProtocol.self]"
      },
      {
        "line": 56,
        "keyword": "Mock",
        "content": "MockProtocol.requestHandler = { request in"
      },
      {
        "line": 62,
        "keyword": "Example",
        "content": "let service = AdminService(baseURL: URL(string: \"https://example.com\")!, session: session)"
      }
    ]
  },
  "apps/CoreForgeMarket/TradeMindAIFull/Tests/TradeMindAITests/StrategyBuilderTests.swift": {
    "total_lines": 49,
    "placeholder_percentage": 0.10204081632653061,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Mock",
        "content": "func testGenerateStrategyMock() {"
      },
      {
        "line": 9,
        "keyword": "Mock",
        "content": "class MockProtocol: URLProtocol {"
      },
      {
        "line": 14,
        "keyword": "Mock",
        "content": "guard let handler = MockProtocol.requestHandler else { return }"
      },
      {
        "line": 24,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockProtocol.self]"
      },
      {
        "line": 27,
        "keyword": "Mock",
        "content": "MockProtocol.requestHandler = { request in"
      }
    ]
  },
  "apps/CoreForgeMarket/TradeMindAIFull/Tests/TradeMindAITests/MultiMarketScannerTests.swift": {
    "total_lines": 28,
    "placeholder_percentage": 0.10714285714285714,
    "flagged": false,
    "occurrences": [
      {
        "line": 5,
        "keyword": "Mock",
        "content": "private final class MockSyncManager: MarketPriceFetching {"
      },
      {
        "line": 12,
        "keyword": "Mock",
        "content": "let scanner = MultiMarketScanner(syncManager: MockSyncManager())"
      },
      {
        "line": 23,
        "keyword": "Mock",
        "content": "let scanner = MultiMarketScanner(syncManager: MockSyncManager())"
      }
    ]
  },
  "apps/CoreForgeMarket/TradeMindAIFull/Tests/TradeMindAITests/OpenAIServiceTests.swift": {
    "total_lines": 98,
    "placeholder_percentage": 0.10204081632653061,
    "flagged": false,
    "occurrences": [
      {
        "line": 18,
        "keyword": "Mock",
        "content": "func testSendPromptMock() {"
      },
      {
        "line": 19,
        "keyword": "Mock",
        "content": "class MockProtocol: URLProtocol {"
      },
      {
        "line": 25,
        "keyword": "Mock",
        "content": "guard let handler = MockProtocol.requestHandler else { return }"
      },
      {
        "line": 35,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockProtocol.self]"
      },
      {
        "line": 38,
        "keyword": "Mock",
        "content": "MockProtocol.requestHandler = { request in"
      },
      {
        "line": 59,
        "keyword": "Mock",
        "content": "func testFetchEmbeddingMock() {"
      },
      {
        "line": 60,
        "keyword": "Mock",
        "content": "class MockProtocol: URLProtocol {"
      },
      {
        "line": 65,
        "keyword": "Mock",
        "content": "guard let handler = MockProtocol.requestHandler else { return }"
      },
      {
        "line": 75,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockProtocol.self]"
      },
      {
        "line": 79,
        "keyword": "Mock",
        "content": "MockProtocol.requestHandler = { request in"
      }
    ]
  },
  "apps/CoreForgeMarket/TradeMindAIFull/Tests/TradeMindAITests/ReportingServiceTests.swift": {
    "total_lines": 46,
    "placeholder_percentage": 0.10869565217391304,
    "flagged": false,
    "occurrences": [
      {
        "line": 9,
        "keyword": "Mock",
        "content": "private class MockProtocol: URLProtocol {"
      },
      {
        "line": 14,
        "keyword": "Mock",
        "content": "guard let handler = MockProtocol.requestHandler else { return }"
      },
      {
        "line": 25,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockProtocol.self]"
      },
      {
        "line": 28,
        "keyword": "Mock",
        "content": "MockProtocol.requestHandler = { request in"
      },
      {
        "line": 32,
        "keyword": "Example",
        "content": "let service = ReportingService(baseURL: URL(string: \"https://example.com\")!, session: session)"
      }
    ]
  },
  "apps/CoreForgeMarket/TradeMindAIFull/Tests/TradeMindAITests/AutoUpdateManagerTests.swift": {
    "total_lines": 37,
    "placeholder_percentage": 0.10810810810810811,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Mock",
        "content": "private class MockURLProtocol: URLProtocol {"
      },
      {
        "line": 13,
        "keyword": "Mock",
        "content": "if let data = MockURLProtocol.responseData {"
      },
      {
        "line": 25,
        "keyword": "Mock",
        "content": "MockURLProtocol.responseData = json"
      },
      {
        "line": 27,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockURLProtocol.self]"
      }
    ]
  },
  "apps/CoreForgeMarket/TradeMindAIFull/Sources/TradeMindAI/ShadowTrader.swift": {
    "total_lines": 36,
    "placeholder_percentage": 0.05555555555555555,
    "flagged": false,
    "occurrences": [
      {
        "line": 3,
        "keyword": "Mock",
        "content": "/// Executes mock shadow trades based on whale wallet activity."
      },
      {
        "line": 24,
        "keyword": "Mock",
        "content": "/// Perform a mock trade following a whale wallet signal."
      }
    ]
  },
  "apps/CoreForgeMarket/TradeMindAIFull/Sources/TradeMindAI/AutoUpdateManager.swift": {
    "total_lines": 22,
    "placeholder_percentage": 0.045454545454545456,
    "flagged": false,
    "occurrences": [
      {
        "line": 18,
        "keyword": "Example",
        "content": "let updater = AutoUpdater(updateURL: url ?? URL(string: \"https://example.com/latest.json\")!,"
      }
    ]
  },
  "apps/AI_VideoGenerator/server.py": {
    "total_lines": 258,
    "placeholder_percentage": 0.023255813953488372,
    "flagged": false,
    "occurrences": [
      {
        "line": 65,
        "keyword": "Sample",
        "content": "# Sample video URLs and thumbnails for different styles"
      },
      {
        "line": 66,
        "keyword": "Sample",
        "content": "SAMPLE_VIDEOS = {"
      },
      {
        "line": 125,
        "keyword": "Sample",
        "content": "# Update video status to completed with sample content"
      },
      {
        "line": 126,
        "keyword": "Sample",
        "content": "sample_content = random.choice(SAMPLE_VIDEOS.get(style, SAMPLE_VIDEOS[\"realistic\"]))"
      },
      {
        "line": 133,
        "keyword": "Sample",
        "content": "\"video_url\": sample_content[\"video_url\"],"
      },
      {
        "line": 134,
        "keyword": "Sample",
        "content": "\"thumbnail_url\": sample_content[\"thumbnail_url\"]"
      }
    ]
  },
  "apps/CoreForgeLeads/DataForgeAIFull/Tests/DataForgeAITests/AIEmailCopilotTests.swift": {
    "total_lines": 60,
    "placeholder_percentage": 0.06666666666666667,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Mock",
        "content": "private class MockProtocol: URLProtocol {"
      },
      {
        "line": 13,
        "keyword": "Mock",
        "content": "guard let handler = MockProtocol.requestHandler else { return }"
      },
      {
        "line": 24,
        "keyword": "Mock",
        "content": "config.protocolClasses = [MockProtocol.self]"
      },
      {
        "line": 25,
        "keyword": "Mock",
        "content": "MockProtocol.requestHandler = { request in"
      }
    ]
  },
  "apps/CoreForgeLeads/DataForgeAIFull/Tests/DataForgeAITests/LeadMinerTests.swift": {
    "total_lines": 11,
    "placeholder_percentage": 0.09090909090909091,
    "flagged": false,
    "occurrences": [
      {
        "line": 6,
        "keyword": "Example",
        "content": "let lead = Lead(name: \"Alice\", email: \"a@example.com\", company: \"Acme\", industry: \"Software\", region: \"US\")"
      }
    ]
  },
  "apps/CoreForgeLeads/DataForgeAIFull/Sources/DataForgeAI/DFSignalAPI.swift": {
    "total_lines": 50,
    "placeholder_percentage": 0.02,
    "flagged": false,
    "occurrences": [
      {
        "line": 12,
        "keyword": "Example",
        "content": "public init(baseURL: URL = URL(string: \"https://signals.example.com\")!,"
      }
    ]
  },
  "apps/CoreForgeLeads/DataForgeAIFull/Sources/DataForgeAI/LeadMiner.swift": {
    "total_lines": 58,
    "placeholder_percentage": 0.017241379310344827,
    "flagged": false,
    "occurrences": [
      {
        "line": 32,
        "keyword": "Mock",
        "content": "/// Append basic firmographic details to a lead (mock implementation)"
      }
    ]
  },
  "apps/CoreForgeLeads/DataForgeAIFull/Sources/DataForgeAI/CRMIntegration.swift": {
    "total_lines": 52,
    "placeholder_percentage": 0.019230769230769232,
    "flagged": false,
    "occurrences": [
      {
        "line": 12,
        "keyword": "Example",
        "content": "public init(baseURL: URL = URL(string: \"https://crm.example.com\")!,"
      }
    ]
  },
  "apps/CoreForgeVoiceLab/VoiceRecorder.js": {
    "total_lines": 22,
    "placeholder_percentage": 0.36363636363636365,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Sample",
        "content": "* Record a short voice sample by generating silent PCM data."
      },
      {
        "line": 7,
        "keyword": "Sample",
        "content": "export async function recordVoice(samplePath, durationMs = 1000) {"
      },
      {
        "line": 8,
        "keyword": "Sample",
        "content": "const bytes = Buffer.alloc(16 * durationMs); // fake 16 kHz mono samples"
      },
      {
        "line": 9,
        "keyword": "Sample",
        "content": "await fs.writeFile(samplePath, bytes);"
      },
      {
        "line": 10,
        "keyword": "Sample",
        "content": "return samplePath;"
      },
      {
        "line": 14,
        "keyword": "Sample",
        "content": "* Naively analyze a voice sample by returning its average amplitude."
      },
      {
        "line": 16,
        "keyword": "Sample",
        "content": "export async function analyzeVoice(samplePath) {"
      },
      {
        "line": 17,
        "keyword": "Sample",
        "content": "const data = await fs.readFile(samplePath);"
      }
    ]
  },
  "apps/CoreForgeBuild/pull_plugins.py": {
    "total_lines": 53,
    "placeholder_percentage": 0.018867924528301886,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Example",
        "content": "Adapted from the Requests library examples (Apache-2.0)."
      }
    ]
  },
  "apps/CoreForgeBuild/README.md": {
    "total_lines": 107,
    "placeholder_percentage": 0.018691588785046728,
    "flagged": false,
    "occurrences": [
      {
        "line": 21,
        "keyword": "Placeholder",
        "content": "Use `scripts/generate_placeholder_icons.py` to create required icon sizes."
      },
      {
        "line": 22,
        "keyword": "Sample",
        "content": "- Run `../../scripts/fetch_plugins.sh` to download sample plugins before building."
      }
    ]
  },
  "apps/CoreForgeBuild/DeveloperSetup.md": {
    "total_lines": 6,
    "placeholder_percentage": 0.16666666666666666,
    "flagged": false,
    "occurrences": [
      {
        "line": 6,
        "keyword": "Sample",
        "content": "- Run `../../scripts/fetch_plugins.sh` from the repo root to download sample plugins before building."
      }
    ]
  },
  "apps/CoreForgeDNA/MemoryLinkService.swift": {
    "total_lines": 17,
    "placeholder_percentage": 0.058823529411764705,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Mock",
        "content": "/// This mock implementation only stores IDs for demonstration."
      }
    ]
  },
  "apps/CoreForgeBloom/PrivateVault.swift": {
    "total_lines": 55,
    "placeholder_percentage": 0.01818181818181818,
    "flagged": false,
    "occurrences": [
      {
        "line": 5,
        "keyword": "Example",
        "content": "/// XOR operation based on the provided password so the examples"
      }
    ]
  },
  "apps/CoreForgeMusic/VerseForgeAIFull/Sources/VerseForgeAI/beats.json": {
    "total_lines": 5,
    "placeholder_percentage": 0.4,
    "flagged": false,
    "occurrences": [
      {
        "line": 2,
        "keyword": "Example",
        "content": "{\"name\": \"Trap Loop\", \"url\": \"https://example.com/trap_loop.mp3\"},"
      },
      {
        "line": 3,
        "keyword": "Example",
        "content": "{\"name\": \"Lo-Fi Chill\", \"url\": \"https://example.com/lofi_chill.mp3\"}"
      }
    ]
  },
  "apps/CoreForgeMusic/VerseForgeAIFull/Sources/VerseForgeAI/HookSplitTester.swift": {
    "total_lines": 12,
    "placeholder_percentage": 0.08333333333333333,
    "flagged": false,
    "occurrences": [
      {
        "line": 9,
        "keyword": "Example",
        "content": "// Randomized test for example purposes"
      }
    ]
  },
  "apps/CoreForgeMusic/VerseForgeAIFull/Sources/VerseForgeAI/HookCrafter.swift": {
    "total_lines": 17,
    "placeholder_percentage": 0.058823529411764705,
    "flagged": false,
    "occurrences": [
      {
        "line": 12,
        "keyword": "Mock",
        "content": "/// Split-test hooks and rank by mock virality score"
      }
    ]
  },
  "apps/CoreForgeStudio/VocalVisionFull/Sources/VocalVision/RendererControl.swift": {
    "total_lines": 76,
    "placeholder_percentage": 0.013157894736842105,
    "flagged": false,
    "occurrences": [
      {
        "line": 9,
        "keyword": "Mock",
        "content": "/// Begin rendering process (mock implementation)"
      }
    ]
  },
  "apps/CoreForgeStudio/VocalVisionFull/Sources/VocalVision/MetadataSyncManager.swift": {
    "total_lines": 27,
    "placeholder_percentage": 0.037037037037037035,
    "flagged": false,
    "occurrences": [
      {
        "line": 11,
        "keyword": "Example",
        "content": "public init(baseURL: URL = URL(string: \"https://upload.example.com\")!,"
      }
    ]
  },
  "generated/CoreForgeAudio/Flag_NSFW_content_for_internal_moderation_or_publishing_filter_logic.py": {
    "total_lines": 4,
    "placeholder_percentage": 0.5,
    "flagged": true,
    "occurrences": [
      {
        "line": 1,
        "keyword": "Content for",
        "content": "# Auto-generated for Flag NSFW content for internal moderation or publishing filter logic"
      },
      {
        "line": 3,
        "keyword": "Content for",
        "content": "\"\"\"Flag NSFW content for internal moderation or publishing filter logic\"\"\""
      }
    ]
  },
  "generated/CoreForgeAudio/Prompt_validation_with_multiple_sample_inputs_and_outputs.py": {
    "total_lines": 4,
    "placeholder_percentage": 0.5,
    "flagged": true,
    "occurrences": [
      {
        "line": 1,
        "keyword": "Sample",
        "content": "# Auto-generated for Prompt validation with multiple sample inputs and outputs"
      },
      {
        "line": 3,
        "keyword": "Sample",
        "content": "\"\"\"Prompt validation with multiple sample inputs and outputs\"\"\""
      }
    ]
  },
  "generated/CoreForgeAudio/Auto_detect_safe_vs_unsafe_content_for_preview_only_versions.py": {
    "total_lines": 4,
    "placeholder_percentage": 0.5,
    "flagged": true,
    "occurrences": [
      {
        "line": 1,
        "keyword": "Content for",
        "content": "# Auto-generated for Auto-detect safe vs. unsafe content for preview-only versions"
      },
      {
        "line": 3,
        "keyword": "Content for",
        "content": "\"\"\"Auto-detect safe vs. unsafe content for preview-only versions\"\"\""
      }
    ]
  },
  "generated/CoreForgeAudio/PromptTemplates_md_AI_workflows_sample_prompts.py": {
    "total_lines": 4,
    "placeholder_percentage": 0.5,
    "flagged": true,
    "occurrences": [
      {
        "line": 1,
        "keyword": "Sample",
        "content": "# Auto-generated for PromptTemplates.md (AI workflows, sample prompts)"
      },
      {
        "line": 3,
        "keyword": "Sample",
        "content": "\"\"\"PromptTemplates.md (AI workflows, sample prompts)\"\"\""
      }
    ]
  },
  "generated/CoreForgeAudio/AI_singing_mode_custom_tone_dial_per_voice_scene.py": {
    "total_lines": 14,
    "placeholder_percentage": 0.21428571428571427,
    "flagged": false,
    "occurrences": [
      {
        "line": 7,
        "keyword": "Sample",
        "content": "def apply_singing_tone(samples: Iterable[float], tone: float) -> List[float]:"
      },
      {
        "line": 8,
        "keyword": "Sample",
        "content": "\"\"\"Apply a simple tone multiplier to audio sample amplitudes.\"\"\""
      },
      {
        "line": 11,
        "keyword": "Sample",
        "content": "return [max(min(s * tone, 1.0), -1.0) for s in samples]"
      }
    ]
  },
  "generated/CoreForgeAudio/Allow_users_to_test_voice_preview_samples_per_character_before_rendering.py": {
    "total_lines": 4,
    "placeholder_percentage": 0.5,
    "flagged": true,
    "occurrences": [
      {
        "line": 1,
        "keyword": "Sample",
        "content": "# Auto-generated for Allow users to test voice preview samples per character before rendering"
      },
      {
        "line": 3,
        "keyword": "Sample",
        "content": "\"\"\"Allow users to test voice preview samples per character before rendering\"\"\""
      }
    ]
  },
  "generated/CoreForgeVisual/Provide_multilingual_visual_cue_glossary_with_usage_examples.py": {
    "total_lines": 4,
    "placeholder_percentage": 0.5,
    "flagged": true,
    "occurrences": [
      {
        "line": 1,
        "keyword": "Example",
        "content": "# Auto-generated for Provide multilingual visual cue glossary with usage examples"
      },
      {
        "line": 3,
        "keyword": "Example",
        "content": "\"\"\"Provide multilingual visual cue glossary with usage examples\"\"\""
      }
    ]
  },
  "docs/PHASE_EIGHT.md": {
    "total_lines": 238,
    "placeholder_percentage": 0.004201680672268907,
    "flagged": false,
    "occurrences": [
      {
        "line": 5,
        "keyword": "Placeholder",
        "content": "The file `scripts/ensure_200_features.py` now auto-generates placeholder"
      }
    ]
  },
  "docs/GLOBAL_TASK_SUMMARY.md": {
    "total_lines": 481,
    "placeholder_percentage": 0.002079002079002079,
    "flagged": false,
    "occurrences": [
      {
        "line": 412,
        "keyword": "Example",
        "content": "- Provide multilingual visual cue glossary with usage examples"
      }
    ]
  },
  "docs/OPEN_TASKS.md": {
    "total_lines": 955,
    "placeholder_percentage": 0.0020942408376963353,
    "flagged": false,
    "occurrences": [
      {
        "line": 683,
        "keyword": "Sample",
        "content": "- Prompt validation with multiple sample inputs and outputs"
      },
      {
        "line": 694,
        "keyword": "Sample",
        "content": "- PromptTemplates.md (AI workflows, sample prompts)"
      }
    ]
  },
  "docs/VoiceTrainerGuide.md": {
    "total_lines": 16,
    "placeholder_percentage": 0.1875,
    "flagged": false,
    "occurrences": [
      {
        "line": 3,
        "keyword": "Sample",
        "content": "`VoiceTrainer` provides a lightweight way to upload audio samples and generate custom voices entirely offline."
      },
      {
        "line": 9,
        "keyword": "Sample",
        "content": "trainer.uploadSample(for: \"Hero\", filePath: \"/path/hero.wav\")"
      },
      {
        "line": 15,
        "keyword": "Sample",
        "content": "Use `listTrainedVoices()` to print all available custom voices. Samples can be shared between apps via `VoiceMemoryManager`."
      }
    ]
  },
  "docs/PRACTICAL_PLAN.md": {
    "total_lines": 109,
    "placeholder_percentage": 0.009174311926605505,
    "flagged": false,
    "occurrences": [
      {
        "line": 1,
        "keyword": "TODO",
        "content": "# Practical Approach and Initial TODO List"
      }
    ]
  },
  "docs/README.md": {
    "total_lines": 25,
    "placeholder_percentage": 0.08,
    "flagged": false,
    "occurrences": [
      {
        "line": 5,
        "keyword": "TODO",
        "content": "- `PRACTICAL_PLAN.md` \u2013 initial TODO list across apps."
      },
      {
        "line": 20,
        "keyword": "Placeholder",
        "content": "- `auto_code_bot.py` \u2013 generates placeholder code files for missing features. It now includes an offline mode and a `--upgrade-placeholders` option to replace stubs with OpenAI-generated code when an API key is available."
      }
    ]
  },
  "docs/auto_code_bot.md": {
    "total_lines": 19,
    "placeholder_percentage": 0.21052631578947367,
    "flagged": false,
    "occurrences": [
      {
        "line": 3,
        "keyword": "Placeholder",
        "content": "`auto_code_bot.py` scans the repository for incomplete features listed in `AGENTS.md` files. For each missing task it now generates a language-specific placeholder file under the `generated/` directory. When the `openai` package is installed and `OPENAI_API_KEY` is set, the bot attempts to generate code with OpenAI. Without OpenAI, it creates an advanced offline stub that detects the desired language (Swift, Kotlin, TypeScript, or Python) and builds a minimal class or function skeleton. The script also performs a quick syntax check on all Python files and comments out any lines that fail to compile so the project can build entirely offline."
      },
      {
        "line": 11,
        "keyword": "Placeholder",
        "content": "To replace existing placeholder files with new code generated via OpenAI, run:"
      },
      {
        "line": 14,
        "keyword": "Placeholder",
        "content": "python scripts/auto_code_bot.py --upgrade-placeholders"
      },
      {
        "line": 19,
        "keyword": "Example",
        "content": "Generated filenames now match the detected language. For example, a Swift feature results in `feature.swift`, while a Python task becomes `feature.py`. Every run also scans existing Python files and comments out lines with syntax errors to keep the repository importable when offline."
      }
    ]
  },
  "docs/AppStore_Compliance.md": {
    "total_lines": 11,
    "placeholder_percentage": 0.09090909090909091,
    "flagged": false,
    "occurrences": [
      {
        "line": 9,
        "keyword": "Placeholder",
        "content": "- Apps avoid spammy functionality or placeholder content (Guideline 4.3) and include only finalized, user-facing features."
      }
    ]
  },
  "docs/AGENTS.md": {
    "total_lines": 26,
    "placeholder_percentage": 0.038461538461538464,
    "flagged": false,
    "occurrences": [
      {
        "line": 20,
        "keyword": "TODO",
        "content": "- `PRACTICAL_PLAN.md` \u2013 initial TODO list across apps."
      }
    ]
  },
  "VoiceLab/jest.setup.ts": {
    "total_lines": 10,
    "placeholder_percentage": 0.2,
    "flagged": false,
    "occurrences": [
      {
        "line": 3,
        "keyword": "Mock",
        "content": "jest.mock('./src/ttsService', () => ({"
      },
      {
        "line": 7,
        "keyword": "Mock",
        "content": "jest.mock('./src/vaultService', () => ({"
      }
    ]
  },
  "VoiceLab/README.md": {
    "total_lines": 11,
    "placeholder_percentage": 0.09090909090909091,
    "flagged": false,
    "occurrences": [
      {
        "line": 11,
        "keyword": "Sample",
        "content": "See `scripts/train-sample.ts` for a CLI example that trains a sample model."
      }
    ]
  },
  "VoiceLab/package-lock.json": {
    "total_lines": 7701,
    "placeholder_percentage": 0.0020776522529541617,
    "flagged": false,
    "occurrences": [
      {
        "line": 1076,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\""
      },
      {
        "line": 1094,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\","
      },
      {
        "line": 1120,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\""
      },
      {
        "line": 1137,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\","
      },
      {
        "line": 1243,
        "keyword": "Mock",
        "content": "\"node_modules/@jest/environment-jsdom-abstract/node_modules/jest-mock\": {"
      },
      {
        "line": 1245,
        "keyword": "Mock",
        "content": "\"resolved\": \"https://registry.npmjs.org/jest-mock/-/jest-mock-30.0.2.tgz\","
      },
      {
        "line": 1339,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\","
      },
      {
        "line": 1355,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\""
      },
      {
        "line": 4964,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\""
      },
      {
        "line": 4981,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"30.0.2\","
      },
      {
        "line": 5087,
        "keyword": "Mock",
        "content": "\"node_modules/jest-environment-jsdom/node_modules/jest-mock\": {"
      },
      {
        "line": 5089,
        "keyword": "Mock",
        "content": "\"resolved\": \"https://registry.npmjs.org/jest-mock/-/jest-mock-30.0.2.tgz\","
      },
      {
        "line": 5158,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\","
      },
      {
        "line": 5247,
        "keyword": "Mock",
        "content": "\"node_modules/jest-mock\": {"
      },
      {
        "line": 5249,
        "keyword": "Mock",
        "content": "\"resolved\": \"https://registry.npmjs.org/jest-mock/-/jest-mock-29.7.0.tgz\","
      },
      {
        "line": 5373,
        "keyword": "Mock",
        "content": "\"jest-mock\": \"^29.7.0\","
      }
    ]
  },
  "VoiceLab/package.json": {
    "total_lines": 33,
    "placeholder_percentage": 0.030303030303030304,
    "flagged": false,
    "occurrences": [
      {
        "line": 11,
        "keyword": "Sample",
        "content": "\"train-sample\": \"ts-node scripts/train-sample.ts\""
      }
    ]
  },
  "VoiceLab/scripts/train-sample.ts": {
    "total_lines": 8,
    "placeholder_percentage": 0.25,
    "flagged": false,
    "occurrences": [
      {
        "line": 5,
        "keyword": "Sample",
        "content": "const sample = new Blob(['audio']);"
      },
      {
        "line": 6,
        "keyword": "Sample",
        "content": "const model = await engine.trainVoiceModel(sample, 'sample-speaker');"
      }
    ]
  },
  "VoiceLab/test/index.test.ts": {
    "total_lines": 18,
    "placeholder_percentage": 0.16666666666666666,
    "flagged": false,
    "occurrences": [
      {
        "line": 6,
        "keyword": "Sample",
        "content": "const sample = new Blob(['audio']);"
      },
      {
        "line": 7,
        "keyword": "Sample",
        "content": "const model = await engine.trainVoiceModel(sample, 'speaker1');"
      },
      {
        "line": 16,
        "keyword": "Sample",
        "content": "const metrics = await new VoiceAnalyticsService().analyze(sample);"
      }
    ]
  },
  "VoiceLab/test/bookImporter.test.ts": {
    "total_lines": 12,
    "placeholder_percentage": 0.25,
    "flagged": false,
    "occurrences": [
      {
        "line": 4,
        "keyword": "Sample",
        "content": "const text = 'Title: Sample Book\\nAuthor: Jane Doe\\n\\nChapter 1\\nHello\\n\\nChapter 2\\nWorld';"
      },
      {
        "line": 5,
        "keyword": "Sample",
        "content": "const file = new File([text], 'sample.txt');"
      },
      {
        "line": 8,
        "keyword": "Sample",
        "content": "expect(book.title).toBe('Sample Book');"
      }
    ]
  },
  "VoiceLab/test/openaiService.test.ts": {
    "total_lines": 25,
    "placeholder_percentage": 0.04,
    "flagged": false,
    "occurrences": [
      {
        "line": 6,
        "keyword": "Mock",
        "content": "global.fetch = jest.fn().mockResolvedValue({"
      }
    ]
  },
  "VoiceLab/src/pronunciationEditor.tsx": {
    "total_lines": 13,
    "placeholder_percentage": 0.15384615384615385,
    "flagged": false,
    "occurrences": [
      {
        "line": 8,
        "keyword": "Placeholder",
        "content": "<input value={word} onChange={e => setWord(e.target.value)} placeholder=\"word\" />"
      },
      {
        "line": 9,
        "keyword": "Placeholder",
        "content": "<input value={phoneme} onChange={e => setPhoneme(e.target.value)} placeholder=\"phoneme\" />"
      }
    ]
  },
  "VoiceLab/src/acxExporter.ts": {
    "total_lines": 13,
    "placeholder_percentage": 0.07692307692307693,
    "flagged": false,
    "occurrences": [
      {
        "line": 7,
        "keyword": "Sample",
        "content": "* suitable for unit tests and sample exports."
      }
    ]
  },
  "VoiceLab/src/voiceModels.ts": {
    "total_lines": 32,
    "placeholder_percentage": 0.0625,
    "flagged": false,
    "occurrences": [
      {
        "line": 10,
        "keyword": "Sample",
        "content": "async trainVoiceModel(sampleAudio: Blob, speakerId: string): Promise<VoiceModel> {"
      },
      {
        "line": 14,
        "keyword": "Mock",
        "content": "// mock training delay"
      }
    ]
  }
}
