{
  "CoreForgeBloom": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeLeads": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeBuild": {
    "missing_dirs": [],
    "missing_file_types": [
      ".swift"
    ],
    "incomplete_files": [
      {
        "file": "services/TemplateService.ts",
        "line": 10,
        "snippet": "{ id: 'todo', name: 'Todo App' }"
      },
      {
        "file": "node_modules/diff/lib/index.es6.js",
        "line": 107,
        "snippet": "// TODO: Remove the `+ 1` here to make behavior match Myers algorithm"
      },
      {
        "file": "node_modules/diff/lib/index.es6.js",
        "line": 106,
        "snippet": "// and does not pass the bounds of the diff graph"
      },
      {
        "file": "node_modules/diff/lib/patch/merge.js",
        "line": 66,
        "snippet": "var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning."
      },
      {
        "file": "node_modules/diff/lib/diff/base.js",
        "line": 131,
        "snippet": "// TODO: Remove the `+ 1` here to make behavior match Myers algorithm"
      },
      {
        "file": "node_modules/diff/lib/diff/base.js",
        "line": 130,
        "snippet": "// and does not pass the bounds of the diff graph"
      },
      {
        "file": "node_modules/diff/dist/diff.min.js",
        "line": 1,
        "snippet": "!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?n(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],n):n((e=e||self).Diff={})}(this,function(e){\"use strict\";function t(){}t.prototype={diff:function(s,a,e){var n,t=2<arguments.length&&void 0!==e?e:{},r=t.callback;\"function\"==typeof t&&(r=t,t={}),this.options=t;var u=this;function d(e){return r?(setTimeout(function(){r(void 0,e)},0),!0):e}s=this.castInput(s),a=this.castInput(a),s=this.removeEmpty(this.tokenize(s));var f=(a=this.removeEmpty(this.tokenize(a))).length,c=s.length,p=1,i=f+c;t.maxEditLength&&(i=Math.min(i,t.maxEditLength));var o=null!==(n=t.timeout)&&void 0!==n?n:1/0,l=Date.now()+o,h=[{oldPos:-1,lastComponent:void 0}],v=this.extractCommon(h[0],a,s,0);if(h[0].oldPos+1>=c&&f<=v+1)return d([{value:this.join(a),count:a.length}]);var m=-1/0,g=1/0;function w(){for(var e=Math.max(m,-p);e<=Math.min(g,p);e+=2){var n=void 0,t=h[e-1],r=h[e+1];t&&(h[e-1]=void 0);var i,o=!1;r&&(i=r.oldPos-e,o=r&&0<=i&&i<f);var l=t&&t.oldPos+1<c;if(o||l){if(n=!l||o&&t.oldPos+1<r.oldPos?u.addToPath(r,!0,void 0,0):u.addToPath(t,void 0,!0,1),v=u.extractCommon(n,a,s,e),n.oldPos+1>=c&&f<=v+1)return d(function(e,n,t,r,i){var o,l=[];for(;n;)l.push(n),o=n.previousComponent,delete n.previousComponent,n=o;l.reverse();for(var s=0,a=l.length,u=0,d=0;s<a;s++){var f,c,p=l[s];p.removed?(p.value=e.join(r.slice(d,d+p.count)),d+=p.count,s&&l[s-1].added&&(f=l[s-1],l[s-1]=l[s],l[s]=f)):(!p.added&&i?(c=(c=t.slice(u,u+p.count)).map(function(e,n){var t=r[d+n];return t.length>e.length?t:e}),p.value=e.join(c)):p.value=e.join(t.slice(u,u+p.count)),u+=p.count,p.added||(d+=p.count))}var h=l[a-1];1<a&&\"string\"==typeof h.value&&(h.added||h.removed)&&e.equals(\"\",h.value)&&(l[a-2].value+=h.value,l.pop());return l}(u,n.lastComponent,a,s,u.useLongestToken));(h[e]=n).oldPos+1>=c&&(g=Math.min(g,e-1)),f<=v+1&&(m=Math.max(m,e+1))}else h[e]=void 0}p++}if(r)!function e(){setTimeout(function(){return i<p||Date.now()>l?r():void(w()||e())},0)}();else for(;p<=i&&Date.now()<=l;){var y=w();if(y)return y}},addToPath:function(e,n,t,r){var i=e.lastComponent;return i&&i.added===n&&i.removed===t?{oldPos:e.oldPos+r,lastComponent:{count:i.count+1,added:n,removed:t,previousComponent:i.previousComponent}}:{oldPos:e.oldPos+r,lastComponent:{count:1,added:n,removed:t,previousComponent:i}}},extractCommon:function(e,n,t,r){for(var i=n.length,o=t.length,l=e.oldPos,s=l-r,a=0;s+1<i&&l+1<o&&this.equals(n[s+1],t[l+1]);)s++,l++,a++;return a&&(e.lastComponent={count:a,previousComponent:e.lastComponent}),e.oldPos=l,s},equals:function(e,n){return this.options.comparator?this.options.comparator(e,n):e===n||this.options.ignoreCase&&e.toLowerCase()===n.toLowerCase()},removeEmpty:function(e){for(var n=[],t=0;t<e.length;t++)e[t]&&n.push(e[t]);return n},castInput:function(e){return e},tokenize:function(e){return e.split(\"\")},join:function(e){return e.join(\"\")}};var r=new t;function i(e,n){if(\"function\"==typeof e)n.callback=e;else if(e)for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t]);return n}var o=/^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/,l=/\\S/,s=new t;s.equals=function(e,n){return this.options.ignoreCase&&(e=e.toLowerCase(),n=n.toLowerCase()),e===n||this.options.ignoreWhitespace&&!l.test(e)&&!l.test(n)},s.tokenize=function(e){for(var n=e.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/),t=0;t<n.length-1;t++)!n[t+1]&&n[t+2]&&o.test(n[t])&&o.test(n[t+2])&&(n[t]+=n[t+2],n.splice(t+1,2),t--);return n};var a=new t;function L(e,n,t){return a.diff(e,n,t)}a.tokenize=function(e){this.options.stripTrailingCr&&(e=e.replace(/\\r\\n/g,\"\\n\"));var n=[],t=e.split(/(\\n|\\r\\n)/);t[t.length-1]||t.pop();for(var r=0;r<t.length;r++){var i=t[r];r%2&&!this.options.newlineIsToken?n[n.length-1]+=i:(this.options.ignoreWhitespace&&(i=i.trim()),n.push(i))}return n};var u=new t;u.tokenize=function(e){return e.split(/(\\S.+?[.!?])(?=\\s+|$)/)};var d=new t;function f(e){return(f=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function n(n,e){var t,r=Object.keys(n);return Object.getOwnPropertySymbols&&(t=Object.getOwnPropertySymbols(n),e&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),r.push.apply(r,t)),r}function c(i){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?n(Object(o),!0).forEach(function(e){var n,t,r;n=i,r=o[t=e],t in n?Object.defineProperty(n,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[t]=r}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach(function(e){Object.defineProperty(i,e,Object.getOwnPropertyDescriptor(o,e))})}return i}function x(e){return function(e){if(Array.isArray(e))return p(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,n){if(!e)return;if(\"string\"==typeof e)return p(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===t&&e.constructor&&(t=e.constructor.name);if(\"Map\"===t||\"Set\"===t)return Array.from(e);if(\"Arguments\"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return p(e,n)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function p(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}d.tokenize=function(e){return e.split(/([{}:;,]|\\s+)/)};var h=Object.prototype.toString,v=new t;function m(e,n,t,r,i){var o,l;for(n=n||[],t=t||[],r&&(e=r(i,e)),o=0;o<n.length;o+=1)if(n[o]===e)return t[o];if(\"[object Array]\"===h.call(e)){for(n.push(e),l=new Array(e.length),t.push(l),o=0;o<e.length;o+=1)l[o]=m(e[o],n,t,r,i);return n.pop(),t.pop(),l}if(e&&e.toJSON&&(e=e.toJSON()),\"object\"===f(e)&&null!==e){n.push(e),l={},t.push(l);var s,a=[];for(s in e)e.hasOwnProperty(s)&&a.push(s);for(a.sort(),o=0;o<a.length;o+=1)l[s=a[o]]=m(e[s],n,t,r,s);n.pop(),t.pop()}else l=e;return l}v.useLongestToken=!0,v.tokenize=a.tokenize,v.castInput=function(e){var n=this.options,t=n.undefinedReplacement,r=n.stringifyReplacer,i=void 0===r?function(e,n){return void 0===n?t:n}:r;return\"string\"==typeof e?e:JSON.stringify(m(e,null,null,i),i,\"  \")},v.equals=function(e,n){return t.prototype.equals.call(v,e.replace(/,([\\r\\n])/g,\"$1\"),n.replace(/,([\\r\\n])/g,\"$1\"))};var g=new t;function C(e){var l=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},s=e.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),a=e.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g)||[],i=[],u=0;function n(){var e={};for(i.push(e);u<s.length;){var n=s[u];if(/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(n))break;var t=/^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(n);t&&(e.index=t[1]),u++}for(o(e),o(e),e.hunks=[];u<s.length;){var r=s[u];if(/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(r))break;if(/^@@/.test(r))e.hunks.push(function(){var e=u,n=s[u++].split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/),t={oldStart:+n[1],oldLines:void 0===n[2]?1:+n[2],newStart:+n[3],newLines:void 0===n[4]?1:+n[4],lines:[],linedelimiters:[]};0===t.oldLines&&(t.oldStart+=1);0===t.newLines&&(t.newStart+=1);for(var r=0,i=0;u<s.length&&!(0===s[u].indexOf(\"--- \")&&u+2<s.length&&0===s[u+1].indexOf(\"+++ \")&&0===s[u+2].indexOf(\"@@\"));u++){var o=0==s[u].length&&u!=s.length-1?\" \":s[u][0];if(\"+\"!==o&&\"-\"!==o&&\" \"!==o&&\"\\\\\"!==o)break;t.lines.push(s[u]),t.linedelimiters.push(a[u]||\"\\n\"),\"+\"===o?r++:\"-\"===o?i++:\" \"===o&&(r++,i++)}r||1!==t.newLines||(t.newLines=0);i||1!==t.oldLines||(t.oldLines=0);if(l.strict){if(r!==t.newLines)throw new Error(\"Added line count did not match for hunk at line \"+(e+1));if(i!==t.oldLines)throw new Error(\"Removed line count did not match for hunk at line \"+(e+1))}return t}());else{if(r&&l.strict)throw new Error(\"Unknown line \"+(u+1)+\" \"+JSON.stringify(r));u++}}}function o(e){var n,t,r,i=/^(---|\\+\\+\\+)\\s+(.*)$/.exec(s[u]);i&&(n=\"---\"===i[1]?\"old\":\"new\",r=(t=i[2].split(\"\\t\",2))[0].replace(/\\\\\\\\/g,\"\\\\\"),/^\".*\"$/.test(r)&&(r=r.substr(1,r.length-2)),e[n+\"FileName\"]=r,e[n+\"Header\"]=(t[1]||\"\").trim(),u++)}for(;u<s.length;)n();return i}function w(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};if(\"string\"==typeof n&&(n=C(n)),Array.isArray(n)){if(1<n.length)throw new Error(\"applyPatch only works with a single input.\");n=n[0]}var r,i,l=e.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),o=e.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g)||[],s=n.hunks,a=t.compareLine||function(e,n,t,r){return n===r},u=0,d=t.fuzzFactor||0,f=0,c=0;for(var p=0;p<s.length;p++){for(var h=s[p],v=l.length-h.oldLines,m=0,g=c+h.oldStart-1,w=function(n,t,r){var i=!0,o=!1,l=!1,s=1;return function e(){if(i&&!l){if(o?s++:i=!1,n+s<=r)return s;l=!0}if(!o)return l||(i=!0),t<=n-s?-s++:(o=!0,e())}}(g,f,v);void 0!==m;m=w())if(function(e,n){for(var t=0;t<e.lines.length;t++){var r=e.lines[t],i=0<r.length?r[0]:\" \",o=0<r.length?r.substr(1):r;if(\" \"===i||\"-\"===i){if(!a(n+1,l[n],i,o)&&d<++u)return;n++}}return 1}(h,g+m)){h.offset=c+=m;break}if(void 0===m)return!1;f=h.offset+h.oldStart+h.oldLines}for(var y=0,L=0;L<s.length;L++){var x=s[L],S=x.oldStart+x.offset+y-1;y+=x.newLines-x.oldLines;for(var b=0;b<x.lines.length;b++){var k,F=x.lines[b],N=0<F.length?F[0]:\" \",P=0<F.length?F.substr(1):F,j=x.linedelimiters&&x.linedelimiters[b]||\"\\n\";\" \"===N?S++:\"-\"===N?(l.splice(S,1),o.splice(S,1)):\"+\"===N?(l.splice(S,0,P),o.splice(S,0,j),S++):\"\\\\\"===N&&(\"+\"===(k=x.lines[b-1]?x.lines[b-1][0]:null)?r=!0:\"-\"===k&&(i=!0))}}if(r)for(;!l[l.length-1];)l.pop(),o.pop();else i&&(l.push(\"\"),o.push(\"\\n\"));for(var O=0;O<l.length-1;O++)l[O]=l[O]+o[O];return l.join(\"\")}function y(e,n,u,d,t,r,f){void 0===(f=f||{}).context&&(f.context=4);var c=L(u,d,f);if(c){c.push({value:\"\",lines:[]});for(var p=[],h=0,v=0,m=[],g=1,w=1,i=0;i<c.length;i++)!function(e){var n,t,r,i,o,l,s=c[e],a=s.lines||s.value.replace(/\\n$/,\"\").split(\"\\n\");s.lines=a,s.added||s.removed?(h||(n=c[e-1],h=g,v=w,n&&(m=0<f.context?y(n.lines.slice(-f.context)):[],h-=m.length,v-=m.length)),m.push.apply(m,x(a.map(function(e){return(s.added?\"+\":\"-\")+e}))),s.added?w+=a.length:g+=a.length):(h&&(a.length<=2*f.context&&e<c.length-2?m.push.apply(m,x(y(a))):(t=Math.min(a.length,f.context),m.push.apply(m,x(y(a.slice(0,t)))),r={oldStart:h,oldLines:g-h+t,newStart:v,newLines:w-v+t,lines:m},e>=c.length-2&&a.length<=f.context&&(i=/\\n$/.test(u),o=/\\n$/.test(d),l=0==a.length&&m.length>r.oldLines,!i&&l&&0<u.length&&m.splice(r.oldLines,0,\"\\\\ No newline at end of file\"),(i||l)&&o||m.push(\"\\\\ No newline at end of file\")),p.push(r),v=h=0,m=[])),g+=a.length,w+=a.length)}(i);return{oldFileName:e,newFileName:n,oldHeader:t,newHeader:r,hunks:p}}function y(e){return e.map(function(e){return\" \"+e})}}function S(e){if(Array.isArray(e))return e.map(S).join(\"\\n\");var n=[];e.oldFileName==e.newFileName&&n.push(\"Index: \"+e.oldFileName),n.push(\"===================================================================\"),n.push(\"--- \"+e.oldFileName+(void 0===e.oldHeader?\"\":\"\\t\"+e.oldHeader)),n.push(\"+++ \"+e.newFileName+(void 0===e.newHeader?\"\":\"\\t\"+e.newHeader));for(var t=0;t<e.hunks.length;t++){var r=e.hunks[t];0===r.oldLines&&--r.oldStart,0===r.newLines&&--r.newStart,n.push(\"@@ -\"+r.oldStart+\",\"+r.oldLines+\" +\"+r.newStart+\",\"+r.newLines+\" @@\"),n.push.apply(n,r.lines)}return n.join(\"\\n\")+\"\\n\"}function b(e,n,t,r,i,o,l){return S(y(e,n,t,r,i,o,l))}function k(e,n){if(n.length>e.length)return!1;for(var t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function F(e){var n=function r(e){var i=0;var o=0;e.forEach(function(e){var n,t;\"string\"!=typeof e?(n=r(e.mine),t=r(e.theirs),void 0!==i&&(n.oldLines===t.oldLines?i+=n.oldLines:i=void 0),void 0!==o&&(n.newLines===t.newLines?o+=n.newLines:o=void 0)):(void 0===o||\"+\"!==e[0]&&\" \"!==e[0]||o++,void 0===i||\"-\"!==e[0]&&\" \"!==e[0]||i++)});return{oldLines:i,newLines:o}}(e.lines),t=n.oldLines,r=n.newLines;void 0!==t?e.oldLines=t:delete e.oldLines,void 0!==r?e.newLines=r:delete e.newLines}function N(e,n){if(\"string\"!=typeof e)return e;if(/^@@/m.test(e)||/^Index:/m.test(e))return C(e)[0];if(!n)throw new Error(\"Must provide a base reference or pass in a patch\");return y(void 0,void 0,n,e)}function P(e){return e.newFileName&&e.newFileName!==e.oldFileName}function j(e,n,t){return n===t?n:(e.conflict=!0,{mine:n,theirs:t})}function O(e,n){return e.oldStart<n.oldStart&&e.oldStart+e.oldLines<n.oldStart}function H(e,n){return{oldStart:e.oldStart,oldLines:e.oldLines,newStart:e.newStart+n,newLines:e.newLines,lines:e.lines}}function A(e,n,t,r){var i,o=M(n),l=function(e,n){var t=[],r=[],i=0,o=!1,l=!1;for(;i<n.length&&e.index<e.lines.length;){var s=e.lines[e.index],a=n[i];if(\"+\"===a[0])break;if(o=o||\" \"!==s[0],r.push(a),i++,\"+\"===s[0])for(l=!0;\"+\"===s[0];)t.push(s),s=e.lines[++e.index];a.substr(1)===s.substr(1)?(t.push(s),e.index++):l=!0}\"+\"===(n[i]||\"\")[0]&&o&&(l=!0);if(l)return t;for(;i<n.length;)r.push(n[i++]);return{merged:r,changes:t}}(t,o);l.merged?(i=e.lines).push.apply(i,x(l.merged)):E(e,r?l:o,r?o:l)}function E(e,n,t){e.conflict=!0,e.lines.push({conflict:!0,mine:n,theirs:t})}function z(e,n,t){for(;n.offset<t.offset&&n.index<n.lines.length;){var r=n.lines[n.index++];e.lines.push(r),n.offset++}}function T(e,n){for(;n.index<n.lines.length;){var t=n.lines[n.index++];e.lines.push(t)}}function M(e){for(var n=[],t=e.lines[e.index][0];e.index<e.lines.length;){var r=e.lines[e.index];if(\"-\"===t&&\"+\"===r[0]&&(t=\"+\"),t!==r[0])break;n.push(r),e.index++}return n}function D(e){return e.reduce(function(e,n){return e&&\"-\"===n[0]},!0)}function I(e,n,t){for(var r=0;r<t;r++){var i=n[n.length-t+r].substr(1);if(e.lines[e.index+r]!==\" \"+i)return}return e.index+=t,1}g.tokenize=function(e){return e.slice()},g.join=g.removeEmpty=function(e){return e},e.Diff=t,e.applyPatch=w,e.applyPatches=function(e,o){\"string\"==typeof e&&(e=C(e));var n=0;!function r(){var i=e[n++];if(!i)return o.complete();o.loadFile(i,function(e,n){if(e)return o.complete(e);var t=w(n,i,o);o.patched(i,t,function(e){return e?o.complete(e):void r()})})}()},e.canonicalize=m,e.convertChangesToDMP=function(e){for(var n,t,r=[],i=0;i<e.length;i++)t=(n=e[i]).added?1:n.removed?-1:0,r.push([t,n.value]);return r},e.convertChangesToXML=function(e){for(var n,t=[],r=0;r<e.length;r++){var i=e[r];i.added?t.push(\"<ins>\"):i.removed&&t.push(\"<del>\"),t.push((n=i.value,n.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\"))),i.added?t.push(\"</ins>\"):i.removed&&t.push(\"</del>\")}return t.join(\"\")},e.createPatch=function(e,n,t,r,i,o){return b(e,e,n,t,r,i,o)},e.createTwoFilesPatch=b,e.diffArrays=function(e,n,t){return g.diff(e,n,t)},e.diffChars=function(e,n,t){return r.diff(e,n,t)},e.diffCss=function(e,n,t){return d.diff(e,n,t)},e.diffJson=function(e,n,t){return v.diff(e,n,t)},e.diffLines=L,e.diffSentences=function(e,n,t){return u.diff(e,n,t)},e.diffTrimmedLines=function(e,n,t){var r=i(t,{ignoreWhitespace:!0});return a.diff(e,n,r)},e.diffWords=function(e,n,t){return t=i(t,{ignoreWhitespace:!0}),s.diff(e,n,t)},e.diffWordsWithSpace=function(e,n,t){return s.diff(e,n,t)},e.formatPatch=S,e.merge=function(e,n,t){e=N(e,t),n=N(n,t);var r={};(e.index||n.index)&&(r.index=e.index||n.index),(e.newFileName||n.newFileName)&&(P(e)?P(n)?(r.oldFileName=j(r,e.oldFileName,n.oldFileName),r.newFileName=j(r,e.newFileName,n.newFileName),r.oldHeader=j(r,e.oldHeader,n.oldHeader),r.newHeader=j(r,e.newHeader,n.newHeader)):(r.oldFileName=e.oldFileName,r.newFileName=e.newFileName,r.oldHeader=e.oldHeader,r.newHeader=e.newHeader):(r.oldFileName=n.oldFileName||e.oldFileName,r.newFileName=n.newFileName||e.newFileName,r.oldHeader=n.oldHeader||e.oldHeader,r.newHeader=n.newHeader||e.newHeader)),r.hunks=[];for(var i=0,o=0,l=0,s=0;i<e.hunks.length||o<n.hunks.length;){var a,u=e.hunks[i]||{oldStart:1/0},d=n.hunks[o]||{oldStart:1/0};O(u,d)?(r.hunks.push(H(u,l)),i++,s+=u.newLines-u.oldLines):O(d,u)?(r.hunks.push(H(d,s)),o++,l+=d.newLines-d.oldLines):(function(e,n,t,r,i){var o,l,s={offset:n,lines:t,index:0},a={offset:r,lines:i,index:0};z(e,s,a),z(e,a,s);for(;s.index<s.lines.length&&a.index<a.lines.length;){var u=s.lines[s.index],d=a.lines[a.index];\"-\"!==u[0]&&\"+\"!==u[0]||\"-\"!==d[0]&&\"+\"!==d[0]?\"+\"===u[0]&&\" \"===d[0]?(o=e.lines).push.apply(o,x(M(s))):\"+\"===d[0]&&\" \"===u[0]?(l=e.lines).push.apply(l,x(M(a))):\"-\"===u[0]&&\" \"===d[0]?A(e,s,a):\"-\"===d[0]&&\" \"===u[0]?A(e,a,s,!0):u===d?(e.lines.push(u),s.index++,a.index++):E(e,M(s),M(a)):function(e,n,t){var r,i,o,l=M(n),s=M(t);if(D(l)&&D(s)){if(k(l,s)&&I(t,l,l.length-s.length))return(r=e.lines).push.apply(r,x(l));if(k(s,l)&&I(n,s,s.length-l.length))return(i=e.lines).push.apply(i,x(s))}else if(function(e,n){return e.length===n.length&&k(e,n)}(l,s))return(o=e.lines).push.apply(o,x(l));E(e,l,s)}(e,s,a)}T(e,s),T(e,a),F(e)}(a={oldStart:Math.min(u.oldStart,d.oldStart),oldLines:0,newStart:Math.min(u.newStart+l,d.oldStart+s),newLines:0,lines:[]},u.oldStart,u.lines,d.oldStart,d.lines),o++,i++,r.hunks.push(a))}return r},e.parsePatch=C,e.reversePatch=function e(n){return Array.isArray(n)?n.map(e).reverse():c(c({},n),{},{oldFileName:n.newFileName,oldHeader:n.newHeader,newFileName:n.oldFileName,newHeader:n.oldHeader,hunks:n.hunks.map(function(e){return{oldLines:e.newLines,oldStart:e.newStart,newLines:e.oldLines,newStart:e.oldStart,linedelimiters:e.linedelimiters,lines:e.lines.map(function(e){return e.startsWith(\"-\")?\"+\".concat(e.slice(1)):e.startsWith(\"+\")?\"-\".concat(e.slice(1)):e})}})})},e.structuredPatch=y,Object.defineProperty(e,\"__esModule\",{value:!0})});"
      },
      {
        "file": "node_modules/diff/dist/diff.js",
        "line": 113,
        "snippet": "// TODO: Remove the `+ 1` here to make behavior match Myers algorithm"
      },
      {
        "file": "node_modules/diff/dist/diff.js",
        "line": 112,
        "snippet": "// and does not pass the bounds of the diff graph"
      }
    ]
  },
  "ebook2audiobook": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "views"
    ],
    "missing_file_types": [
      ".swift",
      ".ts",
      ".js",
      ".json",
      ".tsx"
    ],
    "incomplete_files": [
      {
        "file": "app.py",
        "line": 72,
        "snippet": "pass"
      },
      {
        "file": "tools/normalize_wav_file.py",
        "line": 17,
        "snippet": "'highpass=f=63',"
      },
      {
        "file": "tools/normalize_wav_folder.py",
        "line": 21,
        "snippet": "'highpass=f=63',"
      },
      {
        "file": "lib/functions.py",
        "line": 881,
        "snippet": "pass"
      },
      {
        "file": "lib/functions.py",
        "line": 371,
        "snippet": "except NotImplementedError:"
      },
      {
        "file": "lib/lang.py",
        "line": 37,
        "snippet": "\"fairseq\": {\"ara\": \"ar\", \"ben\": \"bn\", \"eng\": \"en\", \"fas\": \"fa\", \"fra\": \"fr\", \"deu\": \"de\", \"hin\": \"hi\", \"hun\": \"hu\", \"ind\": \"id\", \"jav\": \"jv\", \"kor\": \"ko\", \"pol\": \"pl\", \"por\": \"pt\", \"rus\": \"ru\", \"spa\": \"es\", \"tam\": \"ta\", \"tel\": \"te\", \"tur\": \"tr\", \"yor\": \"yo\", \"abi\": \"abi\", \"ace\": \"ace\", \"aca\": \"aca\", \"acn\": \"acn\", \"acr\": \"acr\", \"ach\": \"ach\", \"acu\": \"acu\", \"guq\": \"guq\", \"ade\": \"ade\", \"adj\": \"adj\", \"agd\": \"agd\", \"agx\": \"agx\", \"agn\": \"agn\", \"aha\": \"aha\", \"aka\": \"ak\", \"knj\": \"knj\", \"ake\": \"ake\", \"aeu\": \"aeu\", \"ahk\": \"ahk\", \"bss\": \"bss\", \"alj\": \"alj\", \"sqi\": \"sq\", \"alt\": \"alt\", \"alp\": \"alp\", \"alz\": \"alz\", \"kab\": \"kab\", \"amk\": \"amk\", \"mmg\": \"mmg\", \"amh\": \"am\", \"ami\": \"ami\", \"azg\": \"azg\", \"agg\": \"agg\", \"boj\": \"boj\", \"cko\": \"cko\", \"any\": \"any\", \"arl\": \"arl\", \"atq\": \"atq\", \"luc\": \"luc\", \"hyw\": \"hyw\", \"apr\": \"apr\", \"aia\": \"aia\", \"msy\": \"msy\", \"cni\": \"cni\", \"cjo\": \"cjo\", \"cpu\": \"cpu\", \"cpb\": \"cpb\", \"asm\": \"as\", \"asa\": \"asa\", \"teo\": \"teo\", \"ati\": \"ati\", \"djk\": \"djk\", \"ava\": \"av\", \"avn\": \"avn\", \"avu\": \"avu\", \"awb\": \"awb\", \"kwi\": \"kwi\", \"awa\": \"awa\", \"agr\": \"agr\", \"agu\": \"agu\", \"ayr\": \"ayr\", \"ayo\": \"ayo\", \"abp\": \"abp\", \"blx\": \"blx\", \"sgb\": \"sgb\", \"azj-script_cyrillic\": \"azj-script_cyrillic\", \"azj-script_latin\": \"azj-script_latin\", \"azb\": \"azb\", \"bba\": \"bba\", \"bhz\": \"bhz\", \"bvc\": \"bvc\", \"bfy\": \"bfy\", \"bgq\": \"bgq\", \"bdq\": \"bdq\", \"bdh\": \"bdh\", \"bqi\": \"bqi\", \"bjw\": \"bjw\", \"blz\": \"blz\", \"ban\": \"ban\", \"bcc-script_latin\": \"bcc-script_latin\", \"bcc-script_arabic\": \"bcc-script_arabic\", \"bam\": \"bm\", \"ptu\": \"ptu\", \"bcw\": \"bcw\", \"bqj\": \"bqj\", \"bno\": \"bno\", \"bbb\": \"bbb\", \"bfa\": \"bfa\", \"bjz\": \"bjz\", \"bak\": \"ba\", \"eus\": \"eu\", \"bsq\": \"bsq\", \"akb\": \"akb\", \"btd\": \"btd\", \"btx\": \"btx\", \"bts\": \"bts\", \"bbc\": \"bbc\", \"bvz\": \"bvz\", \"bjv\": \"bjv\", \"bep\": \"bep\", \"bkv\": \"bkv\", \"bzj\": \"bzj\", \"bem\": \"bem\", \"bng\": \"bng\", \"bom\": \"bom\", \"btt\": \"btt\", \"bha\": \"bha\", \"bgw\": \"bgw\", \"bht\": \"bht\", \"beh\": \"beh\", \"sne\": \"sne\", \"ubl\": \"ubl\", \"bcl\": \"bcl\", \"bim\": \"bim\", \"bkd\": \"bkd\", \"bjr\": \"bjr\", \"bfo\": \"bfo\", \"biv\": \"biv\", \"bib\": \"bib\", \"bis\": \"bi\", \"bzi\": \"bzi\", \"bqp\": \"bqp\", \"bpr\": \"bpr\", \"bps\": \"bps\", \"bwq\": \"bwq\", \"bdv\": \"bdv\", \"bqc\": \"bqc\", \"bus\": \"bus\", \"bnp\": \"bnp\", \"bmq\": \"bmq\", \"bdg\": \"bdg\", \"boa\": \"boa\", \"ksr\": \"ksr\", \"bor\": \"bor\", \"bru\": \"bru\", \"box\": \"box\", \"bzh\": \"bzh\", \"bgt\": \"bgt\", \"sab\": \"sab\", \"bul\": \"bg\", \"bwu\": \"bwu\", \"bmv\": \"bmv\", \"mya\": \"my\", \"tte\": \"tte\", \"cjp\": \"cjp\", \"cbv\": \"cbv\", \"kaq\": \"kaq\", \"cot\": \"cot\", \"cbc\": \"cbc\", \"car\": \"car\", \"cat\": \"ca\", \"ceb\": \"ceb\", \"cme\": \"cme\", \"cbi\": \"cbi\", \"ceg\": \"ceg\", \"cly\": \"cly\", \"cya\": \"cya\", \"che\": \"ce\", \"hne\": \"hne\", \"nya\": \"ny\", \"dig\": \"dig\", \"dug\": \"dug\", \"bgr\": \"bgr\", \"cek\": \"cek\", \"cfm\": \"cfm\", \"cnh\": \"cnh\", \"hlt\": \"hlt\", \"mwq\": \"mwq\", \"ctd\": \"ctd\", \"tcz\": \"tcz\", \"zyp\": \"zyp\", \"cco\": \"cco\", \"cnl\": \"cnl\", \"cle\": \"cle\", \"chz\": \"chz\", \"cpa\": \"cpa\", \"cso\": \"cso\", \"cnt\": \"cnt\", \"cuc\": \"cuc\", \"hak\": \"hak\", \"nan\": \"nan\", \"xnj\": \"xnj\", \"cap\": \"cap\", \"cax\": \"cax\", \"ctg\": \"ctg\", \"ctu\": \"ctu\", \"chf\": \"chf\", \"cce\": \"cce\", \"crt\": \"crt\", \"crq\": \"crq\", \"cac-dialect_sansebasti\\u00e1ncoat\\u00e1n\": \"cac-dialect_sansebasti\\u00e1ncoat\\u00e1n\", \"cac-dialect_sanmateoixtat\\u00e1n\": \"cac-dialect_sanmateoixtat\\u00e1n\", \"ckt\": \"ckt\", \"ncu\": \"ncu\", \"cdj\": \"cdj\", \"chv\": \"cv\", \"caa\": \"caa\", \"asg\": \"asg\", \"con\": \"con\", \"crn\": \"crn\", \"cok\": \"cok\", \"crk-script_latin\": \"crk-script_latin\", \"crk-script_syllabics\": \"crk-script_syllabics\", \"crh\": \"crh\", \"cui\": \"cui\", \"ces\": \"cs\", \"dsh\": \"dsh\", \"dbq\": \"dbq\", \"dga\": \"dga\", \"dgi\": \"dgi\", \"dgk\": \"dgk\", \"dnj-dialect_gweetaawueast\": \"dnj-dialect_gweetaawueast\", \"dnj-dialect_blowowest\": \"dnj-dialect_blowowest\", \"daa\": \"daa\", \"dnt\": \"dnt\", \"dnw\": \"dnw\", \"dar\": \"dar\", \"tcc\": \"tcc\", \"dwr\": \"dwr\", \"ded\": \"ded\", \"mzw\": \"mzw\", \"ntr\": \"ntr\", \"ddn\": \"ddn\", \"des\": \"des\", \"dso\": \"dso\", \"nfa\": \"nfa\", \"dhi\": \"dhi\", \"gud\": \"gud\", \"did\": \"did\", \"mhu\": \"mhu\", \"dip\": \"dip\", \"dik\": \"dik\", \"tbz\": \"tbz\", \"dts\": \"dts\", \"dos\": \"dos\", \"dgo\": \"dgo\", \"mvp\": \"mvp\", \"jen\": \"jen\", \"dzo\": \"dz\", \"idd\": \"idd\", \"eka\": \"eka\", \"cto\": \"cto\", \"emp\": \"emp\", \"enx\": \"enx\", \"sja\": \"sja\", \"myv\": \"myv\", \"mcq\": \"mcq\", \"ese\": \"ese\", \"evn\": \"evn\", \"eza\": \"eza\", \"ewe\": \"ee\", \"fal\": \"fal\", \"fao\": \"fo\", \"far\": \"far\", \"fij\": \"fj\", \"fin\": \"fi\", \"fon\": \"fon\", \"frd\": \"frd\", \"ful\": \"ff\", \"flr\": \"flr\", \"gau\": \"gau\", \"gbk\": \"gbk\", \"gag-script_cyrillic\": \"gag-script_cyrillic\", \"gag-script_latin\": \"gag-script_latin\", \"gbi\": \"gbi\", \"gmv\": \"gmv\", \"lug\": \"lg\", \"pwg\": \"pwg\", \"gbm\": \"gbm\", \"cab\": \"cab\", \"grt\": \"grt\", \"krs\": \"krs\", \"gso\": \"gso\", \"nlg\": \"nlg\", \"gej\": \"gej\", \"gri\": \"gri\", \"kik\": \"ki\", \"acd\": \"acd\", \"glk\": \"glk\", \"gof-script_latin\": \"gof-script_latin\", \"gog\": \"gog\", \"gkn\": \"gkn\", \"wsg\": \"wsg\", \"gjn\": \"gjn\", \"gqr\": \"gqr\", \"gor\": \"gor\", \"gux\": \"gux\", \"gbo\": \"gbo\", \"ell\": \"el\", \"grc\": \"grc\", \"guh\": \"guh\", \"gub\": \"gub\", \"grn\": \"gn\", \"gyr\": \"gyr\", \"guo\": \"guo\", \"gde\": \"gde\", \"guj\": \"gu\", \"gvl\": \"gvl\", \"guk\": \"guk\", \"rub\": \"rub\", \"dah\": \"dah\", \"gwr\": \"gwr\", \"gwi\": \"gwi\", \"hat\": \"ht\", \"hlb\": \"hlb\", \"amf\": \"amf\", \"hag\": \"hag\", \"hnn\": \"hnn\", \"bgc\": \"bgc\", \"had\": \"had\", \"hau\": \"ha\", \"hwc\": \"hwc\", \"hvn\": \"hvn\", \"hay\": \"hay\", \"xed\": \"xed\", \"heb\": \"he\", \"heh\": \"heh\", \"hil\": \"hil\", \"hif\": \"hif\", \"hns\": \"hns\", \"hoc\": \"hoc\", \"hoy\": \"hoy\", \"hus-dialect_westernpotosino\": \"hus-dialect_westernpotosino\", \"hus-dialect_centralveracruz\": \"hus-dialect_centralveracruz\", \"huv\": \"huv\", \"hui\": \"hui\", \"hap\": \"hap\", \"iba\": \"iba\", \"isl\": \"is\", \"dbj\": \"dbj\", \"ifa\": \"ifa\", \"ifb\": \"ifb\", \"ifu\": \"ifu\", \"ifk\": \"ifk\", \"ife\": \"ife\", \"ign\": \"ign\", \"ikk\": \"ikk\", \"iqw\": \"iqw\", \"ilb\": \"ilb\", \"ilo\": \"ilo\", \"imo\": \"imo\", \"inb\": \"inb\", \"ipi\": \"ipi\", \"irk\": \"irk\", \"icr\": \"icr\", \"itv\": \"itv\", \"itl\": \"itl\", \"atg\": \"atg\", \"ixl-dialect_sanjuancotzal\": \"ixl-dialect_sanjuancotzal\", \"ixl-dialect_sangasparchajul\": \"ixl-dialect_sangasparchajul\", \"ixl-dialect_santamarianebaj\": \"ixl-dialect_santamarianebaj\", \"nca\": \"nca\", \"izr\": \"izr\", \"izz\": \"izz\", \"jac\": \"jac\", \"jam\": \"jam\", \"jvn\": \"jvn\", \"kac\": \"kac\", \"dyo\": \"dyo\", \"csk\": \"csk\", \"adh\": \"adh\", \"jun\": \"jun\", \"jbu\": \"jbu\", \"dyu\": \"dyu\", \"bex\": \"bex\", \"juy\": \"juy\", \"gna\": \"gna\", \"urb\": \"urb\", \"kbp\": \"kbp\", \"cwa\": \"cwa\", \"dtp\": \"dtp\", \"kbr\": \"kbr\", \"cgc\": \"cgc\", \"kki\": \"kki\", \"kzf\": \"kzf\", \"lew\": \"lew\", \"cbr\": \"cbr\", \"kkj\": \"kkj\", \"keo\": \"keo\", \"kqe\": \"kqe\", \"kak\": \"kak\", \"kyb\": \"kyb\", \"knb\": \"knb\", \"kmd\": \"kmd\", \"kml\": \"kml\", \"ify\": \"ify\", \"xal\": \"xal\", \"kbq\": \"kbq\", \"kay\": \"kay\", \"ktb\": \"ktb\", \"hig\": \"hig\", \"gam\": \"gam\", \"cbu\": \"cbu\", \"xnr\": \"xnr\", \"kmu\": \"kmu\", \"kne\": \"kne\", \"kan\": \"kn\", \"kby\": \"kby\", \"pam\": \"pam\", \"cak-dialect_santamar\\u00edadejes\\u00fas\": \"cak-dialect_santamar\\u00edadejes\\u00fas\", \"cak-dialect_southcentral\": \"cak-dialect_southcentral\", \"cak-dialect_yepocapa\": \"cak-dialect_yepocapa\", \"cak-dialect_western\": \"cak-dialect_western\", \"cak-dialect_santodomingoxenacoj\": \"cak-dialect_santodomingoxenacoj\", \"cak-dialect_central\": \"cak-dialect_central\", \"xrb\": \"xrb\", \"krc\": \"krc\", \"kaa\": \"kaa\", \"krl\": \"krl\", \"pww\": \"pww\", \"xsm\": \"xsm\", \"cbs\": \"cbs\", \"pss\": \"pss\", \"kxf\": \"kxf\", \"kyz\": \"kyz\", \"kyu\": \"kyu\", \"txu\": \"txu\", \"kaz\": \"kk\", \"ndp\": \"ndp\", \"kbo\": \"kbo\", \"kyq\": \"kyq\", \"ken\": \"ken\", \"ker\": \"ker\", \"xte\": \"xte\", \"kyg\": \"kyg\", \"kjh\": \"kjh\", \"kca\": \"kca\", \"khm\": \"km\", \"kxm\": \"kxm\", \"kjg\": \"kjg\", \"nyf\": \"nyf\", \"kij\": \"kij\", \"kia\": \"kia\", \"kqr\": \"kqr\", \"kqp\": \"kqp\", \"krj\": \"krj\", \"zga\": \"zga\", \"kin\": \"rw\", \"pkb\": \"pkb\", \"geb\": \"geb\", \"gil\": \"gil\", \"kje\": \"kje\", \"kss\": \"kss\", \"thk\": \"thk\", \"klu\": \"klu\", \"kyo\": \"kyo\", \"kog\": \"kog\", \"kfb\": \"kfb\", \"kpv\": \"kpv\", \"bbo\": \"bbo\", \"xon\": \"xon\", \"kma\": \"kma\", \"kno\": \"kno\", \"kxc\": \"kxc\", \"ozm\": \"ozm\", \"kqy\": \"kqy\", \"coe\": \"coe\", \"kpq\": \"kpq\", \"kpy\": \"kpy\", \"kyf\": \"kyf\", \"kff-script_telugu\": \"kff-script_telugu\", \"kri\": \"kri\", \"rop\": \"rop\", \"ktj\": \"ktj\", \"ted\": \"ted\", \"krr\": \"krr\", \"kdt\": \"kdt\", \"kez\": \"kez\", \"cul\": \"cul\", \"kle\": \"kle\", \"kdi\": \"kdi\", \"kue\": \"kue\", \"kum\": \"kum\", \"kvn\": \"kvn\", \"cuk\": \"cuk\", \"kdn\": \"kdn\", \"xuo\": \"xuo\", \"key\": \"key\", \"kpz\": \"kpz\", \"knk\": \"knk\", \"kmr-script_latin\": \"kmr-script_latin\", \"kmr-script_arabic\": \"kmr-script_arabic\", \"kmr-script_cyrillic\": \"kmr-script_cyrillic\", \"xua\": \"xua\", \"kru\": \"kru\", \"kus\": \"kus\", \"kub\": \"kub\", \"kdc\": \"kdc\", \"kxv\": \"kxv\", \"blh\": \"blh\", \"cwt\": \"cwt\", \"kwd\": \"kwd\", \"tnk\": \"tnk\", \"kwf\": \"kwf\", \"cwe\": \"cwe\", \"kyc\": \"kyc\", \"tye\": \"tye\", \"kir\": \"ky\", \"quc-dialect_north\": \"quc-dialect_north\", \"quc-dialect_east\": \"quc-dialect_east\", \"quc-dialect_central\": \"quc-dialect_central\", \"lac\": \"lac\", \"lsi\": \"lsi\", \"lbj\": \"lbj\", \"lhu\": \"lhu\", \"las\": \"las\", \"lam\": \"lam\", \"lns\": \"lns\", \"ljp\": \"ljp\", \"laj\": \"laj\", \"lao\": \"lo\", \"lat\": \"la\", \"lav\": \"lv\", \"law\": \"law\", \"lcp\": \"lcp\", \"lzz\": \"lzz\", \"lln\": \"lln\", \"lef\": \"lef\", \"acf\": \"acf\", \"lww\": \"lww\", \"mhx\": \"mhx\", \"eip\": \"eip\", \"lia\": \"lia\", \"lif\": \"lif\", \"onb\": \"onb\", \"lis\": \"lis\", \"loq\": \"loq\", \"lob\": \"lob\", \"yaz\": \"yaz\", \"lok\": \"lok\", \"llg\": \"llg\", \"ycl\": \"ycl\", \"lom\": \"lom\", \"ngl\": \"ngl\", \"lon\": \"lon\", \"lex\": \"lex\", \"lgg\": \"lgg\", \"ruf\": \"ruf\", \"dop\": \"dop\", \"lnd\": \"lnd\", \"ndy\": \"ndy\", \"lwo\": \"lwo\", \"lee\": \"lee\", \"mev\": \"mev\", \"mfz\": \"mfz\", \"jmc\": \"jmc\", \"myy\": \"myy\", \"mbc\": \"mbc\", \"mda\": \"mda\", \"mad\": \"mad\", \"mag\": \"mag\", \"ayz\": \"ayz\", \"mai\": \"mai\", \"mca\": \"mca\", \"mcp\": \"mcp\", \"mak\": \"mak\", \"vmw\": \"vmw\", \"mgh\": \"mgh\", \"kde\": \"kde\", \"mlg\": \"mg\", \"zlm\": \"zlm\", \"pse\": \"pse\", \"mkn\": \"mkn\", \"xmm\": \"xmm\", \"mal\": \"ml\", \"xdy\": \"xdy\", \"div\": \"dv\", \"mdy\": \"mdy\", \"mup\": \"mup\", \"mam-dialect_central\": \"mam-dialect_central\", \"mam-dialect_northern\": \"mam-dialect_northern\", \"mam-dialect_southern\": \"mam-dialect_southern\", \"mam-dialect_western\": \"mam-dialect_western\", \"mqj\": \"mqj\", \"mcu\": \"mcu\", \"mzk\": \"mzk\", \"maw\": \"maw\", \"mjl\": \"mjl\", \"mnk\": \"mnk\", \"mge\": \"mge\", \"mbh\": \"mbh\", \"knf\": \"knf\", \"mjv\": \"mjv\", \"mbt\": \"mbt\", \"obo\": \"obo\", \"mbb\": \"mbb\", \"mzj\": \"mzj\", \"nld\": \"nld\", \"sjm\": \"sjm\", \"mrw\": \"mrw\", \"mar\": \"mr\", \"mpg\": \"mpg\", \"mhr\": \"mhr\", \"enb\": \"enb\", \"mah\": \"mh\", \"myx\": \"myx\", \"klv\": \"klv\", \"mfh\": \"mfh\", \"met\": \"met\", \"mcb\": \"mcb\", \"mop\": \"mop\", \"yua\": \"yua\", \"mfy\": \"mfy\", \"maz\": \"maz\", \"vmy\": \"vmy\", \"maq\": \"maq\", \"mzi\": \"mzi\", \"maj\": \"maj\", \"maa-dialect_sanantonio\": \"maa-dialect_sanantonio\", \"maa-dialect_sanjer\\u00f3nimo\": \"maa-dialect_sanjer\\u00f3nimo\", \"mhy\": \"mhy\", \"mhi\": \"mhi\", \"zmz\": \"zmz\", \"myb\": \"myb\", \"gai\": \"gai\", \"mqb\": \"mqb\", \"mbu\": \"mbu\", \"med\": \"med\", \"men\": \"men\", \"mee\": \"mee\", \"mwv\": \"mwv\", \"meq\": \"meq\", \"zim\": \"zim\", \"mgo\": \"mgo\", \"mej\": \"mej\", \"mpp\": \"mpp\", \"min\": \"min\", \"gum\": \"gum\", \"mpx\": \"mpx\", \"mco\": \"mco\", \"mxq\": \"mxq\", \"pxm\": \"pxm\", \"mto\": \"mto\", \"mim\": \"mim\", \"xta\": \"xta\", \"mbz\": \"mbz\", \"mip\": \"mip\", \"mib\": \"mib\", \"miy\": \"miy\", \"mih\": \"mih\", \"miz\": \"miz\", \"xtd\": \"xtd\", \"mxt\": \"mxt\", \"xtm\": \"xtm\", \"mxv\": \"mxv\", \"xtn\": \"xtn\", \"mie\": \"mie\", \"mil\": \"mil\", \"mio\": \"mio\", \"mdv\": \"mdv\", \"mza\": \"mza\", \"mit\": \"mit\", \"mxb\": \"mxb\", \"mpm\": \"mpm\", \"soy\": \"soy\", \"cmo-script_latin\": \"cmo-script_latin\", \"cmo-script_khmer\": \"cmo-script_khmer\", \"mfq\": \"mfq\", \"old\": \"old\", \"mfk\": \"mfk\", \"mif\": \"mif\", \"mkl\": \"mkl\", \"mox\": \"mox\", \"myl\": \"myl\", \"mqf\": \"mqf\", \"mnw\": \"mnw\", \"mon\": \"mn\", \"mog\": \"mog\", \"mfe\": \"mfe\", \"mor\": \"mor\", \"mqn\": \"mqn\", \"mgd\": \"mgd\", \"mtj\": \"mtj\", \"cmr\": \"cmr\", \"mtd\": \"mtd\", \"bmr\": \"bmr\", \"moz\": \"moz\", \"mzm\": \"mzm\", \"mnb\": \"mnb\", \"mnf\": \"mnf\", \"unr\": \"unr\", \"fmu\": \"fmu\", \"mur\": \"mur\", \"tih\": \"tih\", \"muv\": \"muv\", \"muy\": \"muy\", \"sur\": \"sur\", \"moa\": \"moa\", \"wmw\": \"wmw\", \"tnr\": \"tnr\", \"miq\": \"miq\", \"mos\": \"mos\", \"muh\": \"muh\", \"nas\": \"nas\", \"mbj\": \"mbj\", \"nfr\": \"nfr\", \"kfw\": \"kfw\", \"nst\": \"nst\", \"nag\": \"nag\", \"nch\": \"nch\", \"nhe\": \"nhe\", \"ngu\": \"ngu\", \"azz\": \"azz\", \"nhx\": \"nhx\", \"ncl\": \"ncl\", \"nhy\": \"nhy\", \"ncj\": \"ncj\", \"nsu\": \"nsu\", \"npl\": \"npl\", \"nuz\": \"nuz\", \"nhw\": \"nhw\", \"nhi\": \"nhi\", \"nlc\": \"nlc\", \"nab\": \"nab\", \"gld\": \"gld\", \"nnb\": \"nnb\", \"npy\": \"npy\", \"pbb\": \"pbb\", \"ntm\": \"ntm\", \"nmz\": \"nmz\", \"naw\": \"naw\", \"nxq\": \"nxq\", \"ndj\": \"ndj\", \"ndz\": \"ndz\", \"ndv\": \"ndv\", \"new\": \"new\", \"nij\": \"nij\", \"sba\": \"sba\", \"gng\": \"gng\", \"nga\": \"nga\", \"nnq\": \"nnq\", \"ngp\": \"ngp\", \"gym\": \"gym\", \"kdj\": \"kdj\", \"nia\": \"nia\", \"nim\": \"nim\", \"nin\": \"nin\", \"nko\": \"nko\", \"nog\": \"nog\", \"lem\": \"lem\", \"not\": \"not\", \"nhu\": \"nhu\", \"nob\": \"nb\", \"bud\": \"bud\", \"nus\": \"nus\", \"yas\": \"yas\", \"nnw\": \"nnw\", \"nwb\": \"nwb\", \"nyy\": \"nyy\", \"nyn\": \"nyn\", \"rim\": \"rim\", \"lid\": \"lid\", \"nuj\": \"nuj\", \"nyo\": \"nyo\", \"nzi\": \"nzi\", \"ann\": \"ann\", \"ory\": \"ory\", \"ojb-script_latin\": \"ojb-script_latin\", \"ojb-script_syllabics\": \"ojb-script_syllabics\", \"oku\": \"oku\", \"bsc\": \"bsc\", \"bdu\": \"bdu\", \"orm\": \"om\", \"ury\": \"ury\", \"oss\": \"os\", \"ote\": \"ote\", \"otq\": \"otq\", \"stn\": \"stn\", \"sig\": \"sig\", \"kfx\": \"kfx\", \"bfz\": \"bfz\", \"sey\": \"sey\", \"pao\": \"pao\", \"pau\": \"pau\", \"pce\": \"pce\", \"plw\": \"plw\", \"pmf\": \"pmf\", \"pag\": \"pag\", \"pap\": \"pap\", \"prf\": \"prf\", \"pab\": \"pab\", \"pbi\": \"pbi\", \"pbc\": \"pbc\", \"pad\": \"pad\", \"ata\": \"ata\", \"pez\": \"pez\", \"peg\": \"peg\", \"pcm\": \"pcm\", \"pis\": \"pis\", \"pny\": \"pny\", \"pir\": \"pir\", \"pjt\": \"pjt\", \"poy\": \"poy\", \"pps\": \"pps\", \"pls\": \"pls\", \"poi\": \"poi\", \"poh-dialect_eastern\": \"poh-dialect_eastern\", \"poh-dialect_western\": \"poh-dialect_western\", \"prt\": \"prt\", \"pui\": \"pui\", \"pan\": \"pa\", \"tsz\": \"tsz\", \"suv\": \"suv\", \"lme\": \"lme\", \"quy\": \"quy\", \"qvc\": \"qvc\", \"quz\": \"quz\", \"qve\": \"qve\", \"qub\": \"qub\", \"qvh\": \"qvh\", \"qwh\": \"qwh\", \"qvw\": \"qvw\", \"quf\": \"quf\", \"qvm\": \"qvm\", \"qul\": \"qul\", \"qvn\": \"qvn\", \"qxn\": \"qxn\", \"qxh\": \"qxh\", \"qvs\": \"qvs\", \"quh\": \"quh\", \"qxo\": \"qxo\", \"qxr\": \"qxr\", \"qvo\": \"qvo\", \"qvz\": \"qvz\", \"qxl\": \"qxl\", \"quw\": \"quw\", \"kjb\": \"kjb\", \"kek\": \"kek\", \"rah\": \"rah\", \"rjs\": \"rjs\", \"rai\": \"rai\", \"lje\": \"lje\", \"rnl\": \"rnl\", \"rkt\": \"rkt\", \"rap\": \"rap\", \"yea\": \"yea\", \"raw\": \"raw\", \"rej\": \"rej\", \"rel\": \"rel\", \"ril\": \"ril\", \"iri\": \"iri\", \"rgu\": \"rgu\", \"rhg\": \"rhg\", \"rmc-script_latin\": \"rmc-script_latin\", \"rmc-script_cyrillic\": \"rmc-script_cyrillic\", \"rmo\": \"rmo\", \"rmy-script_latin\": \"rmy-script_latin\", \"rmy-script_cyrillic\": \"rmy-script_cyrillic\", \"ron\": \"ro\", \"rol\": \"rol\", \"cla\": \"cla\", \"rng\": \"rng\", \"rug\": \"rug\", \"run\": \"rn\", \"lsm\": \"lsm\", \"spy\": \"spy\", \"sck\": \"sck\", \"saj\": \"saj\", \"sch\": \"sch\", \"sml\": \"sml\", \"xsb\": \"xsb\", \"sbl\": \"sbl\", \"saq\": \"saq\", \"sbd\": \"sbd\", \"smo\": \"sm\", \"rav\": \"rav\", \"sxn\": \"sxn\", \"sag\": \"sg\", \"sbp\": \"sbp\", \"xsu\": \"xsu\", \"srm\": \"srm\", \"sas\": \"sas\", \"apb\": \"apb\", \"sgw\": \"sgw\", \"tvw\": \"tvw\", \"lip\": \"lip\", \"slu\": \"slu\", \"snw\": \"snw\", \"sea\": \"sea\", \"sza\": \"sza\", \"seh\": \"seh\", \"crs\": \"crs\", \"ksb\": \"ksb\", \"shn\": \"shn\", \"sho\": \"sho\", \"mcd\": \"mcd\", \"cbt\": \"cbt\", \"xsr\": \"xsr\", \"shk\": \"shk\", \"shp\": \"shp\", \"sna\": \"sn\", \"cjs\": \"cjs\", \"jiv\": \"jiv\", \"snp\": \"snp\", \"sya\": \"sya\", \"sid\": \"sid\", \"snn\": \"snn\", \"sri\": \"sri\", \"srx\": \"srx\", \"sil\": \"sil\", \"sld\": \"sld\", \"akp\": \"akp\", \"xog\": \"xog\", \"som\": \"so\", \"bmu\": \"bmu\", \"khq\": \"khq\", \"ses\": \"ses\", \"mnx\": \"mnx\", \"srn\": \"srn\", \"sxb\": \"sxb\", \"suc\": \"suc\", \"tgo\": \"tgo\", \"suk\": \"suk\", \"sun\": \"su\", \"suz\": \"suz\", \"sgj\": \"sgj\", \"sus\": \"sus\", \"swh\": \"swh\", \"swe\": \"sv\", \"syl\": \"syl\", \"dyi\": \"dyi\", \"myk\": \"myk\", \"spp\": \"spp\", \"tap\": \"tap\", \"tby\": \"tby\", \"tna\": \"tna\", \"shi\": \"shi\", \"klw\": \"klw\", \"tgl\": \"tl\", \"tbk\": \"tbk\", \"tgj\": \"tgj\", \"blt\": \"blt\", \"tbg\": \"tbg\", \"omw\": \"omw\", \"tgk\": \"tg\", \"tdj\": \"tdj\", \"tbc\": \"tbc\", \"tlj\": \"tlj\", \"tly\": \"tly\", \"ttq-script_tifinagh\": \"ttq-script_tifinagh\", \"taj\": \"taj\", \"taq\": \"taq\", \"tpm\": \"tpm\", \"tgp\": \"tgp\", \"tnn\": \"tnn\", \"tac\": \"tac\", \"rif-script_latin\": \"rif-script_latin\", \"rif-script_arabic\": \"rif-script_arabic\", \"tat\": \"tt\", \"tav\": \"tav\", \"twb\": \"twb\", \"tbl\": \"tbl\", \"kps\": \"kps\", \"twe\": \"twe\", \"ttc\": \"ttc\", \"kdh\": \"kdh\", \"tes\": \"tes\", \"tex\": \"tex\", \"tee\": \"tee\", \"tpp\": \"tpp\", \"tpt\": \"tpt\", \"stp\": \"stp\", \"tfr\": \"tfr\", \"twu\": \"twu\", \"ter\": \"ter\", \"tew\": \"tew\", \"tha\": \"th\", \"nod\": \"nod\", \"thl\": \"thl\", \"tem\": \"tem\", \"adx\": \"adx\", \"bod\": \"bo\", \"khg\": \"khg\", \"tca\": \"tca\", \"tir\": \"ti\", \"txq\": \"txq\", \"tik\": \"tik\", \"dgr\": \"dgr\", \"tob\": \"tob\", \"tmf\": \"tmf\", \"tng\": \"tng\", \"tlb\": \"tlb\", \"ood\": \"ood\", \"tpi\": \"tpi\", \"jic\": \"jic\", \"lbw\": \"lbw\", \"txa\": \"txa\", \"tom\": \"tom\", \"toh\": \"toh\", \"tnt\": \"tnt\", \"sda\": \"sda\", \"tcs\": \"tcs\", \"toc\": \"toc\", \"tos\": \"tos\", \"neb\": \"neb\", \"trn\": \"trn\", \"trs\": \"trs\", \"trc\": \"trc\", \"tri\": \"tri\", \"cof\": \"cof\", \"tkr\": \"tkr\", \"kdl\": \"kdl\", \"cas\": \"cas\", \"tso\": \"ts\", \"tuo\": \"tuo\", \"iou\": \"iou\", \"tmc\": \"tmc\", \"tuf\": \"tuf\", \"tuk-script_latin\": \"tk\", \"tuk-script_arabic\": \"tk\", \"bov\": \"bov\", \"tue\": \"tue\", \"kcg\": \"kcg\", \"tzh-dialect_bachaj\\u00f3n\": \"tzh-dialect_bachaj\\u00f3n\", \"tzh-dialect_tenejapa\": \"tzh-dialect_tenejapa\", \"tzo-dialect_chenalh\\u00f3\": \"tzo-dialect_chenalh\\u00f3\", \"tzo-dialect_chamula\": \"tzo-dialect_chamula\", \"tzj-dialect_western\": \"tzj-dialect_western\", \"tzj-dialect_eastern\": \"tzj-dialect_eastern\", \"aoz\": \"aoz\", \"udm\": \"udm\", \"udu\": \"udu\", \"ukr\": \"uk\", \"ppk\": \"ppk\", \"ubu\": \"ubu\", \"urk\": \"urk\", \"ura\": \"ura\", \"urt\": \"urt\", \"urd-script_devanagari\": \"ur\", \"urd-script_arabic\": \"ur\", \"urd-script_latin\": \"ur\", \"upv\": \"upv\", \"usp\": \"usp\", \"uig-script_arabic\": \"ug\", \"uig-script_cyrillic\": \"ug\", \"uzb-script_cyrillic\": \"uz\", \"vag\": \"vag\", \"bav\": \"bav\", \"vid\": \"vid\", \"vie\": \"vi\", \"vif\": \"vif\", \"vun\": \"vun\", \"vut\": \"vut\", \"prk\": \"prk\", \"wwa\": \"wwa\", \"rro\": \"rro\", \"bao\": \"bao\", \"waw\": \"waw\", \"lgl\": \"lgl\", \"wlx\": \"wlx\", \"cou\": \"cou\", \"hub\": \"hub\", \"gvc\": \"gvc\", \"mfi\": \"mfi\", \"wap\": \"wap\", \"wba\": \"wba\", \"war\": \"war\", \"way\": \"way\", \"guc\": \"guc\", \"cym\": \"cy\", \"kvw\": \"kvw\", \"tnp\": \"tnp\", \"hto\": \"hto\", \"huu\": \"huu\", \"wal-script_latin\": \"wal-script_latin\", \"wal-script_ethiopic\": \"wal-script_ethiopic\", \"wlo\": \"wlo\", \"noa\": \"noa\", \"wob\": \"wob\", \"kao\": \"kao\", \"xer\": \"xer\", \"yad\": \"yad\", \"yka\": \"yka\", \"sah\": \"sah\", \"yba\": \"yba\", \"yli\": \"yli\", \"nlk\": \"nlk\", \"yal\": \"yal\", \"yam\": \"yam\", \"yat\": \"yat\", \"jmd\": \"jmd\", \"tao\": \"tao\", \"yaa\": \"yaa\", \"ame\": \"ame\", \"guu\": \"guu\", \"yao\": \"yao\", \"yre\": \"yre\", \"yva\": \"yva\", \"ybb\": \"ybb\", \"pib\": \"pib\", \"byr\": \"byr\", \"pil\": \"pil\", \"ycn\": \"ycn\", \"ess\": \"ess\", \"yuz\": \"yuz\", \"atb\": \"atb\", \"zne\": \"zne\", \"zaq\": \"zaq\", \"zpo\": \"zpo\", \"zad\": \"zad\", \"zpc\": \"zpc\", \"zca\": \"zca\", \"zpg\": \"zpg\", \"zai\": \"zai\", \"zpl\": \"zpl\", \"zam\": \"zam\", \"zaw\": \"zaw\", \"zpm\": \"zpm\", \"zac\": \"zac\", \"zao\": \"zao\", \"ztq\": \"ztq\", \"zar\": \"zar\", \"zpt\": \"zpt\", \"zpi\": \"zpi\", \"zas\": \"zas\", \"zaa\": \"zaa\", \"zpz\": \"zpz\", \"zab\": \"zab\", \"zpu\": \"zpu\", \"zae\": \"zae\", \"zty\": \"zty\", \"zav\": \"zav\", \"zza\": \"zza\", \"zyb\": \"zyb\", \"ziw\": \"ziw\", \"zos\": \"zos\", \"gnd\": \"gnd\"},"
      },
      {
        "file": "lib/classes/voice_extractor.py",
        "line": 240,
        "snippet": "'highpass=f=63[audio]'"
      },
      {
        "file": "lib/classes/redirect_console.py",
        "line": 39,
        "snippet": "pass  # No logs in the buffer"
      },
      {
        "file": "lib/classes/argos_translator.py",
        "line": 25,
        "snippet": "pass"
      },
      {
        "file": "lib/classes/tts_engines/coqui.py",
        "line": 497,
        "snippet": "'highpass=f=63[audio]'"
      },
      {
        "file": "lib/classes/tts_engines/.template.py",
        "line": 242,
        "snippet": "'highpass=f=63[audio]'"
      }
    ]
  },
  "CoreForgeLearn": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeMarket": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeQuest": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeVoiceLab": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".swift",
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "AI_VideoGenerator": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".swift",
      ".ts",
      ".js",
      ".json",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeMusic": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeStudio": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeWriter": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeDNA": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeVisual": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  },
  "CoreForgeAudio": {
    "missing_dirs": [],
    "missing_file_types": [],
    "incomplete_files": []
  },
  "CoreForgeMind": {
    "missing_dirs": [
      "components",
      "services",
      "hooks",
      "models",
      "views"
    ],
    "missing_file_types": [
      ".ts",
      ".py",
      ".tsx"
    ],
    "incomplete_files": []
  }
}
